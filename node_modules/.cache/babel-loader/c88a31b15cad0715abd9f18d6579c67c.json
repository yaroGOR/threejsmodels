{"ast":null,"code":"/* istanbul ignore file - tricky to import some things from this module during testing */\n// semantic version\nexport { VERSION } from \"./version\";\nexport { CstParser, EmbeddedActionsParser, ParserDefinitionErrorType, EMPTY_ALT } from \"./parse/parser/parser\";\nexport { Lexer, LexerDefinitionErrorType } from \"./scan/lexer_public\"; // Tokens utilities\n\nexport { createToken, createTokenInstance, EOF, tokenLabel, tokenMatcher, tokenName } from \"./scan/tokens_public\"; // Other Utilities\n\nexport { defaultGrammarResolverErrorProvider, defaultGrammarValidatorErrorProvider, defaultParserErrorProvider } from \"./parse/errors_public\";\nexport { EarlyExitException, isRecognitionException, MismatchedTokenException, NotAllInputParsedException, NoViableAltException } from \"./parse/exceptions_public\";\nexport { defaultLexerErrorProvider } from \"./scan/lexer_errors_public\"; // grammar reflection API\n\nexport { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal } from \"./parse/grammar/gast/gast_public\"; // GAST Utilities\n\nexport { serializeGrammar, serializeProduction } from \"./parse/grammar/gast/gast_public\";\nexport { GAstVisitor } from \"./parse/grammar/gast/gast_visitor_public\";\nexport { assignOccurrenceIndices, resolveGrammar, validateGrammar } from \"./parse/grammar/gast/gast_resolver_public\";\n/* istanbul ignore next */\n\nexport function clearCache() {\n  console.warn(\"The clearCache function was 'soft' removed from the Chevrotain API.\" + \"\\n\\t It performs no action other than printing this message.\" + \"\\n\\t Please avoid using it as it will be completely removed in the future\");\n}\nexport { createSyntaxDiagramsCode } from \"./diagrams/render_public\";\nexport { generateParserFactory, generateParserModule } from \"./generate/generate_public\";\n\nvar Parser =\n/** @class */\nfunction () {\n  function Parser() {\n    throw new Error(\"The Parser class has been deprecated, use CstParser or EmbeddedActionsParser instead.\\t\\n\" + \"See: https://chevrotain.io/docs/changes/BREAKING_CHANGES.html#_7-0-0\");\n  }\n\n  return Parser;\n}();\n\nexport { Parser };","map":{"version":3,"mappings":"AAAA;AAEA;AACA,SAASA,OAAT,QAAwB,WAAxB;AAEA,SACEC,SADF,EAEEC,qBAFF,EAGEC,yBAHF,EAIEC,SAJF,QAKO,uBALP;AAOA,SAASC,KAAT,EAAgBC,wBAAhB,QAAgD,qBAAhD,C,CAEA;;AAEA,SACEC,WADF,EAEEC,mBAFF,EAGEC,GAHF,EAIEC,UAJF,EAKEC,YALF,EAMEC,SANF,QAOO,sBAPP,C,CASA;;AAEA,SACEC,mCADF,EAEEC,oCAFF,EAGEC,0BAHF,QAIO,uBAJP;AAMA,SACEC,kBADF,EAEEC,sBAFF,EAGEC,wBAHF,EAIEC,0BAJF,EAKEC,oBALF,QAMO,2BANP;AAQA,SAASC,yBAAT,QAA0C,4BAA1C,C,CAEA;;AAEA,SACEC,WADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,MAJF,EAKEC,UALF,EAMEC,mBANF,EAOEC,gCAPF,EAQEC,uBARF,EASEC,IATF,EAUEC,QAVF,QAWO,kCAXP,C,CAaA;;AAEA,SACEC,gBADF,EAEEC,mBAFF,QAGO,kCAHP;AAKA,SAASC,WAAT,QAA4B,0CAA5B;AAEA,SACEC,uBADF,EAEEC,cAFF,EAGEC,eAHF,QAIO,2CAJP;AAMA;;AACA,OAAM,SAAUC,UAAV,GAAoB;EACxBC,OAAO,CAACC,IAAR,CACE,wEACE,8DADF,GAEE,2EAHJ;AAKD;AAED,SAASC,wBAAT,QAAyC,0BAAzC;AAEA,SACEC,qBADF,EAEEC,oBAFF,QAGO,4BAHP;;AAKA;AAAA;AAAA;EACE;IACE,MAAM,IAAIC,KAAJ,CACJ,8FACE,sEAFE,CAAN;EAID;;EACH;AAAC,CAPD","names":["VERSION","CstParser","EmbeddedActionsParser","ParserDefinitionErrorType","EMPTY_ALT","Lexer","LexerDefinitionErrorType","createToken","createTokenInstance","EOF","tokenLabel","tokenMatcher","tokenName","defaultGrammarResolverErrorProvider","defaultGrammarValidatorErrorProvider","defaultParserErrorProvider","EarlyExitException","isRecognitionException","MismatchedTokenException","NotAllInputParsedException","NoViableAltException","defaultLexerErrorProvider","Alternation","Alternative","NonTerminal","Option","Repetition","RepetitionMandatory","RepetitionMandatoryWithSeparator","RepetitionWithSeparator","Rule","Terminal","serializeGrammar","serializeProduction","GAstVisitor","assignOccurrenceIndices","resolveGrammar","validateGrammar","clearCache","console","warn","createSyntaxDiagramsCode","generateParserFactory","generateParserModule","Error"],"sourceRoot":"","sources":["../../src/api.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}