{"ast":null,"code":"import { hasTokenLabel, tokenLabel } from \"../scan/tokens_public\";\nimport * as utils from \"../utils/utils\";\nimport { first, map, reduce } from \"../utils/utils\";\nimport { NonTerminal, Rule, Terminal } from \"./grammar/gast/gast_public\";\nimport { getProductionDslName } from \"./grammar/gast/gast\";\nexport var defaultParserErrorProvider = {\n  buildMismatchTokenMessage: function buildMismatchTokenMessage(_a) {\n    var expected = _a.expected,\n        actual = _a.actual,\n        previous = _a.previous,\n        ruleName = _a.ruleName;\n    var hasLabel = hasTokenLabel(expected);\n    var expectedMsg = hasLabel ? \"--> \" + tokenLabel(expected) + \" <--\" : \"token of type --> \" + expected.name + \" <--\";\n    var msg = \"Expecting \" + expectedMsg + \" but found --> '\" + actual.image + \"' <--\";\n    return msg;\n  },\n  buildNotAllInputParsedMessage: function buildNotAllInputParsedMessage(_a) {\n    var firstRedundant = _a.firstRedundant,\n        ruleName = _a.ruleName;\n    return \"Redundant input, expecting EOF but found: \" + firstRedundant.image;\n  },\n  buildNoViableAltMessage: function buildNoViableAltMessage(_a) {\n    var expectedPathsPerAlt = _a.expectedPathsPerAlt,\n        actual = _a.actual,\n        previous = _a.previous,\n        customUserDescription = _a.customUserDescription,\n        ruleName = _a.ruleName;\n    var errPrefix = \"Expecting: \"; // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n\n    var actualText = first(actual).image;\n    var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix;\n    } else {\n      var allLookAheadPaths = reduce(expectedPathsPerAlt, function (result, currAltPaths) {\n        return result.concat(currAltPaths);\n      }, []);\n      var nextValidTokenSequences = map(allLookAheadPaths, function (currPath) {\n        return \"[\" + map(currPath, function (currTokenType) {\n          return tokenLabel(currTokenType);\n        }).join(\", \") + \"]\";\n      });\n      var nextValidSequenceItems = map(nextValidTokenSequences, function (itemMsg, idx) {\n        return \"  \" + (idx + 1) + \". \" + itemMsg;\n      });\n      var calculatedDescription = \"one of these possible Token sequences:\\n\" + nextValidSequenceItems.join(\"\\n\");\n      return errPrefix + calculatedDescription + errSuffix;\n    }\n  },\n  buildEarlyExitMessage: function buildEarlyExitMessage(_a) {\n    var expectedIterationPaths = _a.expectedIterationPaths,\n        actual = _a.actual,\n        customUserDescription = _a.customUserDescription,\n        ruleName = _a.ruleName;\n    var errPrefix = \"Expecting: \"; // TODO: issue: No Viable Alternative Error may have incomplete details. #502\n\n    var actualText = first(actual).image;\n    var errSuffix = \"\\nbut found: '\" + actualText + \"'\";\n\n    if (customUserDescription) {\n      return errPrefix + customUserDescription + errSuffix;\n    } else {\n      var nextValidTokenSequences = map(expectedIterationPaths, function (currPath) {\n        return \"[\" + map(currPath, function (currTokenType) {\n          return tokenLabel(currTokenType);\n        }).join(\",\") + \"]\";\n      });\n      var calculatedDescription = \"expecting at least one iteration which starts with one of these possible Token sequences::\\n  \" + (\"<\" + nextValidTokenSequences.join(\" ,\") + \">\");\n      return errPrefix + calculatedDescription + errSuffix;\n    }\n  }\n};\nObject.freeze(defaultParserErrorProvider);\nexport var defaultGrammarResolverErrorProvider = {\n  buildRuleNotFoundError: function buildRuleNotFoundError(topLevelRule, undefinedRule) {\n    var msg = \"Invalid grammar, reference to a rule which is not defined: ->\" + undefinedRule.nonTerminalName + \"<-\\n\" + \"inside top level rule: ->\" + topLevelRule.name + \"<-\";\n    return msg;\n  }\n};\nexport var defaultGrammarValidatorErrorProvider = {\n  buildDuplicateFoundError: function buildDuplicateFoundError(topLevelRule, duplicateProds) {\n    function getExtraProductionArgument(prod) {\n      if (prod instanceof Terminal) {\n        return prod.terminalType.name;\n      } else if (prod instanceof NonTerminal) {\n        return prod.nonTerminalName;\n      } else {\n        return \"\";\n      }\n    }\n\n    var topLevelName = topLevelRule.name;\n    var duplicateProd = first(duplicateProds);\n    var index = duplicateProd.idx;\n    var dslName = getProductionDslName(duplicateProd);\n    var extraArgument = getExtraProductionArgument(duplicateProd);\n    var hasExplicitIndex = index > 0;\n    var msg = \"->\" + dslName + (hasExplicitIndex ? index : \"\") + \"<- \" + (extraArgument ? \"with argument: ->\" + extraArgument + \"<-\" : \"\") + \"\\n                  appears more than once (\" + duplicateProds.length + \" times) in the top level rule: ->\" + topLevelName + \"<-.                  \\n                  For further details see: https://chevrotain.io/docs/FAQ.html#NUMERICAL_SUFFIXES \\n                  \"; // white space trimming time! better to trim afterwards as it allows to use WELL formatted multi line template strings...\n\n    msg = msg.replace(/[ \\t]+/g, \" \");\n    msg = msg.replace(/\\s\\s+/g, \"\\n\");\n    return msg;\n  },\n  buildNamespaceConflictError: function buildNamespaceConflictError(rule) {\n    var errMsg = \"Namespace conflict found in grammar.\\n\" + (\"The grammar has both a Terminal(Token) and a Non-Terminal(Rule) named: <\" + rule.name + \">.\\n\") + \"To resolve this make sure each Terminal and Non-Terminal names are unique\\n\" + \"This is easy to accomplish by using the convention that Terminal names start with an uppercase letter\\n\" + \"and Non-Terminal names start with a lower case letter.\";\n    return errMsg;\n  },\n  buildAlternationPrefixAmbiguityError: function buildAlternationPrefixAmbiguityError(options) {\n    var pathMsg = map(options.prefixPath, function (currTok) {\n      return tokenLabel(currTok);\n    }).join(\", \");\n    var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n    var errMsg = \"Ambiguous alternatives: <\" + options.ambiguityIndices.join(\" ,\") + \"> due to common lookahead prefix\\n\" + (\"in <OR\" + occurrence + \"> inside <\" + options.topLevelRule.name + \"> Rule,\\n\") + (\"<\" + pathMsg + \"> may appears as a prefix path in all these alternatives.\\n\") + \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#COMMON_PREFIX\\n\" + \"For Further details.\";\n    return errMsg;\n  },\n  buildAlternationAmbiguityError: function buildAlternationAmbiguityError(options) {\n    var pathMsg = map(options.prefixPath, function (currtok) {\n      return tokenLabel(currtok);\n    }).join(\", \");\n    var occurrence = options.alternation.idx === 0 ? \"\" : options.alternation.idx;\n    var currMessage = \"Ambiguous Alternatives Detected: <\" + options.ambiguityIndices.join(\" ,\") + \"> in <OR\" + occurrence + \">\" + (\" inside <\" + options.topLevelRule.name + \"> Rule,\\n\") + (\"<\" + pathMsg + \"> may appears as a prefix path in all these alternatives.\\n\");\n    currMessage = currMessage + \"See: https://chevrotain.io/docs/guide/resolving_grammar_errors.html#AMBIGUOUS_ALTERNATIVES\\n\" + \"For Further details.\";\n    return currMessage;\n  },\n  buildEmptyRepetitionError: function buildEmptyRepetitionError(options) {\n    var dslName = getProductionDslName(options.repetition);\n\n    if (options.repetition.idx !== 0) {\n      dslName += options.repetition.idx;\n    }\n\n    var errMsg = \"The repetition <\" + dslName + \"> within Rule <\" + options.topLevelRule.name + \"> can never consume any tokens.\\n\" + \"This could lead to an infinite loop.\";\n    return errMsg;\n  },\n  // TODO: remove - `errors_public` from nyc.config.js exclude\n  //       once this method is fully removed from this file\n  buildTokenNameError: function buildTokenNameError(options) {\n    /* istanbul ignore next */\n    return \"deprecated\";\n  },\n  buildEmptyAlternationError: function buildEmptyAlternationError(options) {\n    var errMsg = \"Ambiguous empty alternative: <\" + (options.emptyChoiceIdx + 1) + \">\" + (\" in <OR\" + options.alternation.idx + \"> inside <\" + options.topLevelRule.name + \"> Rule.\\n\") + \"Only the last alternative may be an empty alternative.\";\n    return errMsg;\n  },\n  buildTooManyAlternativesError: function buildTooManyAlternativesError(options) {\n    var errMsg = \"An Alternation cannot have more than 256 alternatives:\\n\" + (\"<OR\" + options.alternation.idx + \"> inside <\" + options.topLevelRule.name + \"> Rule.\\n has \" + (options.alternation.definition.length + 1) + \" alternatives.\");\n    return errMsg;\n  },\n  buildLeftRecursionError: function buildLeftRecursionError(options) {\n    var ruleName = options.topLevelRule.name;\n    var pathNames = utils.map(options.leftRecursionPath, function (currRule) {\n      return currRule.name;\n    });\n    var leftRecursivePath = ruleName + \" --> \" + pathNames.concat([ruleName]).join(\" --> \");\n    var errMsg = \"Left Recursion found in grammar.\\n\" + (\"rule: <\" + ruleName + \"> can be invoked from itself (directly or indirectly)\\n\") + (\"without consuming any Tokens. The grammar path that causes this is: \\n \" + leftRecursivePath + \"\\n\") + \" To fix this refactor your grammar to remove the left recursion.\\n\" + \"see: https://en.wikipedia.org/wiki/LL_parser#Left_Factoring.\";\n    return errMsg;\n  },\n  // TODO: remove - `errors_public` from nyc.config.js exclude\n  //       once this method is fully removed from this file\n  buildInvalidRuleNameError: function buildInvalidRuleNameError(options) {\n    /* istanbul ignore next */\n    return \"deprecated\";\n  },\n  buildDuplicateRuleNameError: function buildDuplicateRuleNameError(options) {\n    var ruleName;\n\n    if (options.topLevelRule instanceof Rule) {\n      ruleName = options.topLevelRule.name;\n    } else {\n      ruleName = options.topLevelRule;\n    }\n\n    var errMsg = \"Duplicate definition, rule: ->\" + ruleName + \"<- is already defined in the grammar: ->\" + options.grammarName + \"<-\";\n    return errMsg;\n  }\n};","map":{"version":3,"mappings":"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","names":["hasTokenLabel","tokenLabel","utils","first","map","reduce","NonTerminal","Rule","Terminal","getProductionDslName","defaultParserErrorProvider","buildMismatchTokenMessage","_a","expected","actual","previous","ruleName","hasLabel","expectedMsg","name","msg","image","buildNotAllInputParsedMessage","firstRedundant","buildNoViableAltMessage","expectedPathsPerAlt","customUserDescription","errPrefix","actualText","errSuffix","allLookAheadPaths","result","currAltPaths","concat","nextValidTokenSequences","currPath","currTokenType","join","nextValidSequenceItems","itemMsg","idx","calculatedDescription","buildEarlyExitMessage","expectedIterationPaths","Object","freeze","defaultGrammarResolverErrorProvider","buildRuleNotFoundError","topLevelRule","undefinedRule","nonTerminalName","defaultGrammarValidatorErrorProvider","buildDuplicateFoundError","duplicateProds","getExtraProductionArgument","prod","terminalType","topLevelName","duplicateProd","index","dslName","extraArgument","hasExplicitIndex","length","replace","buildNamespaceConflictError","rule","errMsg","buildAlternationPrefixAmbiguityError","options","pathMsg","prefixPath","currTok","occurrence","alternation","ambiguityIndices","buildAlternationAmbiguityError","currtok","currMessage","buildEmptyRepetitionError","repetition","buildTokenNameError","buildEmptyAlternationError","emptyChoiceIdx","buildTooManyAlternativesError","definition","buildLeftRecursionError","pathNames","leftRecursionPath","currRule","leftRecursivePath","buildInvalidRuleNameError","buildDuplicateRuleNameError","grammarName"],"sourceRoot":"","sources":["../../../src/parse/errors_public.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}