{"ast":null,"code":"import { Alternation, Alternative, NonTerminal, Option, Repetition, RepetitionMandatory, RepetitionMandatoryWithSeparator, RepetitionWithSeparator, Rule, Terminal } from \"./gast_public\";\n\nvar GAstVisitor =\n/** @class */\nfunction () {\n  function GAstVisitor() {}\n\n  GAstVisitor.prototype.visit = function (node) {\n    var nodeAny = node;\n\n    switch (nodeAny.constructor) {\n      case NonTerminal:\n        return this.visitNonTerminal(nodeAny);\n\n      case Alternative:\n        return this.visitAlternative(nodeAny);\n\n      case Option:\n        return this.visitOption(nodeAny);\n\n      case RepetitionMandatory:\n        return this.visitRepetitionMandatory(nodeAny);\n\n      case RepetitionMandatoryWithSeparator:\n        return this.visitRepetitionMandatoryWithSeparator(nodeAny);\n\n      case RepetitionWithSeparator:\n        return this.visitRepetitionWithSeparator(nodeAny);\n\n      case Repetition:\n        return this.visitRepetition(nodeAny);\n\n      case Alternation:\n        return this.visitAlternation(nodeAny);\n\n      case Terminal:\n        return this.visitTerminal(nodeAny);\n\n      case Rule:\n        return this.visitRule(nodeAny);\n\n      /* istanbul ignore next */\n\n      default:\n        throw Error(\"non exhaustive match\");\n    }\n  };\n\n  GAstVisitor.prototype.visitNonTerminal = function (node) {};\n\n  GAstVisitor.prototype.visitAlternative = function (node) {};\n\n  GAstVisitor.prototype.visitOption = function (node) {};\n\n  GAstVisitor.prototype.visitRepetition = function (node) {};\n\n  GAstVisitor.prototype.visitRepetitionMandatory = function (node) {};\n\n  GAstVisitor.prototype.visitRepetitionMandatoryWithSeparator = function (node) {};\n\n  GAstVisitor.prototype.visitRepetitionWithSeparator = function (node) {};\n\n  GAstVisitor.prototype.visitAlternation = function (node) {};\n\n  GAstVisitor.prototype.visitTerminal = function (node) {};\n\n  GAstVisitor.prototype.visitRule = function (node) {};\n\n  return GAstVisitor;\n}();\n\nexport { GAstVisitor };","map":{"version":3,"mappings":"AAAA,SACEA,WADF,EAEEC,WAFF,EAGEC,WAHF,EAIEC,MAJF,EAKEC,UALF,EAMEC,mBANF,EAOEC,gCAPF,EAQEC,uBARF,EASEC,IATF,EAUEC,QAVF,QAWO,eAXP;;AAcA;AAAA;AAAA;EAAA,wBAmDC;;EAlDQC,8BAAP,UAAaC,IAAb,EAA8B;IAC5B,IAAMC,OAAO,GAAQD,IAArB;;IACA,QAAQC,OAAO,CAACC,WAAhB;MACE,KAAKX,WAAL;QACE,OAAO,KAAKY,gBAAL,CAAsBF,OAAtB,CAAP;;MACF,KAAKX,WAAL;QACE,OAAO,KAAKc,gBAAL,CAAsBH,OAAtB,CAAP;;MACF,KAAKT,MAAL;QACE,OAAO,KAAKa,WAAL,CAAiBJ,OAAjB,CAAP;;MACF,KAAKP,mBAAL;QACE,OAAO,KAAKY,wBAAL,CAA8BL,OAA9B,CAAP;;MACF,KAAKN,gCAAL;QACE,OAAO,KAAKY,qCAAL,CAA2CN,OAA3C,CAAP;;MACF,KAAKL,uBAAL;QACE,OAAO,KAAKY,4BAAL,CAAkCP,OAAlC,CAAP;;MACF,KAAKR,UAAL;QACE,OAAO,KAAKgB,eAAL,CAAqBR,OAArB,CAAP;;MACF,KAAKZ,WAAL;QACE,OAAO,KAAKqB,gBAAL,CAAsBT,OAAtB,CAAP;;MACF,KAAKH,QAAL;QACE,OAAO,KAAKa,aAAL,CAAmBV,OAAnB,CAAP;;MACF,KAAKJ,IAAL;QACE,OAAO,KAAKe,SAAL,CAAeX,OAAf,CAAP;;MACF;;MACA;QACE,MAAMY,KAAK,CAAC,sBAAD,CAAX;IAvBJ;EAyBD,CA3BM;;EA6BAd,yCAAP,UAAwBC,IAAxB,EAAyC,CAAS,CAA3C;;EAEAD,yCAAP,UAAwBC,IAAxB,EAAyC,CAAS,CAA3C;;EAEAD,oCAAP,UAAmBC,IAAnB,EAA+B,CAAS,CAAjC;;EAEAD,wCAAP,UAAuBC,IAAvB,EAAuC,CAAS,CAAzC;;EAEAD,iDAAP,UAAgCC,IAAhC,EAAyD,CAAS,CAA3D;;EAEAD,8DAAP,UACEC,IADF,EACwC,CAC/B,CAFF;;EAIAD,qDAAP,UAAoCC,IAApC,EAAiE,CAAS,CAAnE;;EAEAD,yCAAP,UAAwBC,IAAxB,EAAyC,CAAS,CAA3C;;EAEAD,sCAAP,UAAqBC,IAArB,EAAmC,CAAS,CAArC;;EAEAD,kCAAP,UAAiBC,IAAjB,EAA2B,CAAS,CAA7B;;EACT;AAAC,CAnDD","names":["Alternation","Alternative","NonTerminal","Option","Repetition","RepetitionMandatory","RepetitionMandatoryWithSeparator","RepetitionWithSeparator","Rule","Terminal","GAstVisitor","node","nodeAny","constructor","visitNonTerminal","visitAlternative","visitOption","visitRepetitionMandatory","visitRepetitionMandatoryWithSeparator","visitRepetitionWithSeparator","visitRepetition","visitAlternation","visitTerminal","visitRule","Error"],"sourceRoot":"","sources":["../../../../../src/parse/grammar/gast/gast_visitor_public.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}