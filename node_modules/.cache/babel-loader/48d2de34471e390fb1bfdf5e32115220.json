{"ast":null,"code":"// Lookahead keys are 32Bit integers in the form\n// TTTTTTTT-ZZZZZZZZZZZZ-YYYY-XXXXXXXX\n// XXXX -> Occurrence Index bitmap.\n// YYYY -> DSL Method Type bitmap.\n// ZZZZZZZZZZZZZZZ -> Rule short Index bitmap.\n// TTTTTTTTT -> alternation alternative index bitmap\nexport var BITS_FOR_METHOD_TYPE = 4;\nexport var BITS_FOR_OCCURRENCE_IDX = 8;\nexport var BITS_FOR_RULE_IDX = 12; // TODO: validation, this means that there may at most 2^8 --> 256 alternatives for an alternation.\n\nexport var BITS_FOR_ALT_IDX = 8; // short string used as part of mapping keys.\n// being short improves the performance when composing KEYS for maps out of these\n// The 5 - 8 bits (16 possible values, are reserved for the DSL method indices)\n\n/* tslint:disable */\n\nexport var OR_IDX = 1 << BITS_FOR_OCCURRENCE_IDX;\nexport var OPTION_IDX = 2 << BITS_FOR_OCCURRENCE_IDX;\nexport var MANY_IDX = 3 << BITS_FOR_OCCURRENCE_IDX;\nexport var AT_LEAST_ONE_IDX = 4 << BITS_FOR_OCCURRENCE_IDX;\nexport var MANY_SEP_IDX = 5 << BITS_FOR_OCCURRENCE_IDX;\nexport var AT_LEAST_ONE_SEP_IDX = 6 << BITS_FOR_OCCURRENCE_IDX;\n/* tslint:enable */\n// this actually returns a number, but it is always used as a string (object prop key)\n\nexport function getKeyForAutomaticLookahead(ruleIdx, dslMethodIdx, occurrence) {\n  /* tslint:disable */\n  return occurrence | dslMethodIdx | ruleIdx;\n  /* tslint:enable */\n}\nvar BITS_START_FOR_ALT_IDX = 32 - BITS_FOR_ALT_IDX;","map":{"version":3,"mappings":"AAAA;AACA;AACA;AACA;AACA;AACA;AAEA,OAAO,IAAMA,oBAAoB,GAAG,CAA7B;AACP,OAAO,IAAMC,uBAAuB,GAAG,CAAhC;AACP,OAAO,IAAMC,iBAAiB,GAAG,EAA1B,C,CACP;;AACA,OAAO,IAAMC,gBAAgB,GAAG,CAAzB,C,CAEP;AACA;AACA;;AACA;;AACA,OAAO,IAAMC,MAAM,GAAG,KAAKH,uBAApB;AACP,OAAO,IAAMI,UAAU,GAAG,KAAKJ,uBAAxB;AACP,OAAO,IAAMK,QAAQ,GAAG,KAAKL,uBAAtB;AACP,OAAO,IAAMM,gBAAgB,GAAG,KAAKN,uBAA9B;AACP,OAAO,IAAMO,YAAY,GAAG,KAAKP,uBAA1B;AACP,OAAO,IAAMQ,oBAAoB,GAAG,KAAKR,uBAAlC;AACP;AAEA;;AACA,OAAM,SAAUS,2BAAV,CACJC,OADI,EAEJC,YAFI,EAGJC,UAHI,EAGc;EAElB;EACA,OAAOA,UAAU,GAAGD,YAAb,GAA4BD,OAAnC;EACA;AACD;AAED,IAAMG,sBAAsB,GAAG,KAAKX,gBAApC","names":["BITS_FOR_METHOD_TYPE","BITS_FOR_OCCURRENCE_IDX","BITS_FOR_RULE_IDX","BITS_FOR_ALT_IDX","OR_IDX","OPTION_IDX","MANY_IDX","AT_LEAST_ONE_IDX","MANY_SEP_IDX","AT_LEAST_ONE_SEP_IDX","getKeyForAutomaticLookahead","ruleIdx","dslMethodIdx","occurrence","BITS_START_FOR_ALT_IDX"],"sourceRoot":"","sources":["../../../../src/parse/grammar/keys.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}