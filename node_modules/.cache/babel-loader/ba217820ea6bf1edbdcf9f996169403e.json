{"ast":null,"code":"import { useEffect } from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction AdaptiveEvents() {\n  var get = useThree(function (state) {\n    return state.get;\n  });\n  var current = useThree(function (state) {\n    return state.performance.current;\n  });\n  useEffect(function () {\n    var enabled = get().raycaster.enabled;\n    return function () {\n      return void (get().raycaster.enabled = enabled);\n    };\n  }, []);\n  useEffect(function () {\n    return void (get().raycaster.enabled = current === 1);\n  }, [current]);\n  return null;\n}\n\nexport { AdaptiveEvents };","map":{"version":3,"names":["useEffect","useThree","AdaptiveEvents","get","state","current","performance","enabled","raycaster"],"sources":["/Users/98yaroslavgorban/Desktop/gltfjsx-forked/node_modules/@react-three/drei/core/AdaptiveEvents.js"],"sourcesContent":["import { useEffect } from 'react';\nimport { useThree } from '@react-three/fiber';\n\nfunction AdaptiveEvents() {\n  const get = useThree(state => state.get);\n  const current = useThree(state => state.performance.current);\n  useEffect(() => {\n    const enabled = get().raycaster.enabled;\n    return () => void (get().raycaster.enabled = enabled);\n  }, []);\n  useEffect(() => void (get().raycaster.enabled = current === 1), [current]);\n  return null;\n}\n\nexport { AdaptiveEvents };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,QAAT,QAAyB,oBAAzB;;AAEA,SAASC,cAAT,GAA0B;EACxB,IAAMC,GAAG,GAAGF,QAAQ,CAAC,UAAAG,KAAK;IAAA,OAAIA,KAAK,CAACD,GAAV;EAAA,CAAN,CAApB;EACA,IAAME,OAAO,GAAGJ,QAAQ,CAAC,UAAAG,KAAK;IAAA,OAAIA,KAAK,CAACE,WAAN,CAAkBD,OAAtB;EAAA,CAAN,CAAxB;EACAL,SAAS,CAAC,YAAM;IACd,IAAMO,OAAO,GAAGJ,GAAG,GAAGK,SAAN,CAAgBD,OAAhC;IACA,OAAO;MAAA,OAAM,MAAMJ,GAAG,GAAGK,SAAN,CAAgBD,OAAhB,GAA0BA,OAAhC,CAAN;IAAA,CAAP;EACD,CAHQ,EAGN,EAHM,CAAT;EAIAP,SAAS,CAAC;IAAA,OAAM,MAAMG,GAAG,GAAGK,SAAN,CAAgBD,OAAhB,GAA0BF,OAAO,KAAK,CAA5C,CAAN;EAAA,CAAD,EAAuD,CAACA,OAAD,CAAvD,CAAT;EACA,OAAO,IAAP;AACD;;AAED,SAASH,cAAT"},"metadata":{},"sourceType":"module"}