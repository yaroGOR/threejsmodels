{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\nimport { ResolutionNode } from './ResolutionNode.js';\n\nfunction ScreenUVNode(resolution) {\n  TempNode.call(this, 'v2');\n  this.resolution = resolution || new ResolutionNode();\n}\n\nScreenUVNode.prototype = Object.create(TempNode.prototype);\nScreenUVNode.prototype.constructor = ScreenUVNode;\nScreenUVNode.prototype.nodeType = 'ScreenUV';\n\nScreenUVNode.prototype.generate = function (builder, output) {\n  var result;\n\n  if (builder.isShader('fragment')) {\n    result = '( gl_FragCoord.xy / ' + this.resolution.build(builder, 'v2') + ')';\n  } else {\n    console.warn('THREE.ScreenUVNode is not compatible with ' + builder.shader + ' shader.');\n    result = 'vec2( 0.0 )';\n  }\n\n  return builder.format(result, this.getType(builder), output);\n};\n\nScreenUVNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.resolution = source.resolution;\n  return this;\n};\n\nScreenUVNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.resolution = this.resolution.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n\nexport { ScreenUVNode };","map":{"version":3,"names":["TempNode","ResolutionNode","ScreenUVNode","resolution","call","prototype","Object","create","constructor","nodeType","generate","builder","output","result","isShader","build","console","warn","shader","format","getType","copy","source","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"sources":["/Users/98yaroslavgorban/Desktop/gltfjsx-forked/node_modules/three-stdlib/nodes/accessors/ScreenUVNode.js"],"sourcesContent":["import { TempNode } from '../core/TempNode.js';\nimport { ResolutionNode } from './ResolutionNode.js';\n\nfunction ScreenUVNode(resolution) {\n  TempNode.call(this, 'v2');\n  this.resolution = resolution || new ResolutionNode();\n}\n\nScreenUVNode.prototype = Object.create(TempNode.prototype);\nScreenUVNode.prototype.constructor = ScreenUVNode;\nScreenUVNode.prototype.nodeType = 'ScreenUV';\n\nScreenUVNode.prototype.generate = function (builder, output) {\n  var result;\n\n  if (builder.isShader('fragment')) {\n    result = '( gl_FragCoord.xy / ' + this.resolution.build(builder, 'v2') + ')';\n  } else {\n    console.warn('THREE.ScreenUVNode is not compatible with ' + builder.shader + ' shader.');\n    result = 'vec2( 0.0 )';\n  }\n\n  return builder.format(result, this.getType(builder), output);\n};\n\nScreenUVNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n  this.resolution = source.resolution;\n  return this;\n};\n\nScreenUVNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.resolution = this.resolution.toJSON(meta).uuid;\n  }\n\n  return data;\n};\n\nexport { ScreenUVNode };\n"],"mappings":"AAAA,SAASA,QAAT,QAAyB,qBAAzB;AACA,SAASC,cAAT,QAA+B,qBAA/B;;AAEA,SAASC,YAAT,CAAsBC,UAAtB,EAAkC;EAChCH,QAAQ,CAACI,IAAT,CAAc,IAAd,EAAoB,IAApB;EACA,KAAKD,UAAL,GAAkBA,UAAU,IAAI,IAAIF,cAAJ,EAAhC;AACD;;AAEDC,YAAY,CAACG,SAAb,GAAyBC,MAAM,CAACC,MAAP,CAAcP,QAAQ,CAACK,SAAvB,CAAzB;AACAH,YAAY,CAACG,SAAb,CAAuBG,WAAvB,GAAqCN,YAArC;AACAA,YAAY,CAACG,SAAb,CAAuBI,QAAvB,GAAkC,UAAlC;;AAEAP,YAAY,CAACG,SAAb,CAAuBK,QAAvB,GAAkC,UAAUC,OAAV,EAAmBC,MAAnB,EAA2B;EAC3D,IAAIC,MAAJ;;EAEA,IAAIF,OAAO,CAACG,QAAR,CAAiB,UAAjB,CAAJ,EAAkC;IAChCD,MAAM,GAAG,yBAAyB,KAAKV,UAAL,CAAgBY,KAAhB,CAAsBJ,OAAtB,EAA+B,IAA/B,CAAzB,GAAgE,GAAzE;EACD,CAFD,MAEO;IACLK,OAAO,CAACC,IAAR,CAAa,+CAA+CN,OAAO,CAACO,MAAvD,GAAgE,UAA7E;IACAL,MAAM,GAAG,aAAT;EACD;;EAED,OAAOF,OAAO,CAACQ,MAAR,CAAeN,MAAf,EAAuB,KAAKO,OAAL,CAAaT,OAAb,CAAvB,EAA8CC,MAA9C,CAAP;AACD,CAXD;;AAaAV,YAAY,CAACG,SAAb,CAAuBgB,IAAvB,GAA8B,UAAUC,MAAV,EAAkB;EAC9CtB,QAAQ,CAACK,SAAT,CAAmBgB,IAAnB,CAAwBjB,IAAxB,CAA6B,IAA7B,EAAmCkB,MAAnC;EACA,KAAKnB,UAAL,GAAkBmB,MAAM,CAACnB,UAAzB;EACA,OAAO,IAAP;AACD,CAJD;;AAMAD,YAAY,CAACG,SAAb,CAAuBkB,MAAvB,GAAgC,UAAUC,IAAV,EAAgB;EAC9C,IAAIC,IAAI,GAAG,KAAKC,WAAL,CAAiBF,IAAjB,CAAX;;EAEA,IAAI,CAACC,IAAL,EAAW;IACTA,IAAI,GAAG,KAAKE,cAAL,CAAoBH,IAApB,CAAP;IACAC,IAAI,CAACtB,UAAL,GAAkB,KAAKA,UAAL,CAAgBoB,MAAhB,CAAuBC,IAAvB,EAA6BI,IAA/C;EACD;;EAED,OAAOH,IAAP;AACD,CATD;;AAWA,SAASvB,YAAT"},"metadata":{},"sourceType":"module"}