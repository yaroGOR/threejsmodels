{"ast":null,"code":"import _createClass from \"/Users/98yaroslavgorban/Desktop/gltfjsx-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass.js\";\nimport _classCallCheck from \"/Users/98yaroslavgorban/Desktop/gltfjsx-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck.js\";\nimport _assertThisInitialized from \"/Users/98yaroslavgorban/Desktop/gltfjsx-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized.js\";\nimport _inherits from \"/Users/98yaroslavgorban/Desktop/gltfjsx-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits.js\";\nimport _createSuper from \"/Users/98yaroslavgorban/Desktop/gltfjsx-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper.js\";\nimport _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, PerspectiveCamera, Quaternion, Spherical, Vector2, OrthographicCamera } from 'three'; // Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nvar OrbitControls = /*#__PURE__*/function (_EventDispatcher) {\n  _inherits(OrbitControls, _EventDispatcher);\n\n  var _super = _createSuper(OrbitControls);\n\n  // Set to false to disable this control\n  // \"target\" sets the location of focus, where the object orbits around\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  // How far you can zoom in and out ( OrthographicCamera only )\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  // radians\n  // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  // radians\n  // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  // Set to false to disable rotating\n  // Set to false to disable panning\n  // if false, pan orthogonal to world-space direction camera.up\n  // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  // 30 seconds per orbit when fps is 60\n  // The four arrow keys\n  // Mouse buttons\n  // Touch fingers\n  // the target DOM element for key events\n  function OrbitControls(object, domElement) {\n    var _this;\n\n    _classCallCheck(this, OrbitControls);\n\n    _this = _super.call(this);\n\n    _defineProperty(_assertThisInitialized(_this), \"object\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"domElement\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"enabled\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"target\", new Vector3());\n\n    _defineProperty(_assertThisInitialized(_this), \"minDistance\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxDistance\", Infinity);\n\n    _defineProperty(_assertThisInitialized(_this), \"minZoom\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxZoom\", Infinity);\n\n    _defineProperty(_assertThisInitialized(_this), \"minPolarAngle\", 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxPolarAngle\", Math.PI);\n\n    _defineProperty(_assertThisInitialized(_this), \"minAzimuthAngle\", -Infinity);\n\n    _defineProperty(_assertThisInitialized(_this), \"maxAzimuthAngle\", Infinity);\n\n    _defineProperty(_assertThisInitialized(_this), \"enableDamping\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"dampingFactor\", 0.05);\n\n    _defineProperty(_assertThisInitialized(_this), \"enableZoom\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"zoomSpeed\", 1.0);\n\n    _defineProperty(_assertThisInitialized(_this), \"enableRotate\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"rotateSpeed\", 1.0);\n\n    _defineProperty(_assertThisInitialized(_this), \"enablePan\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"panSpeed\", 1.0);\n\n    _defineProperty(_assertThisInitialized(_this), \"screenSpacePanning\", true);\n\n    _defineProperty(_assertThisInitialized(_this), \"keyPanSpeed\", 7.0);\n\n    _defineProperty(_assertThisInitialized(_this), \"autoRotate\", false);\n\n    _defineProperty(_assertThisInitialized(_this), \"autoRotateSpeed\", 2.0);\n\n    _defineProperty(_assertThisInitialized(_this), \"keys\", {\n      LEFT: 37,\n      UP: 38,\n      RIGHT: 39,\n      BOTTOM: 40\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"target0\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"position0\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"zoom0\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"_domElementKeyEvents\", null);\n\n    _defineProperty(_assertThisInitialized(_this), \"getPolarAngle\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"getAzimuthalAngle\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"listenToKeyEvents\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"saveState\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"reset\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"update\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"connect\", void 0);\n\n    _defineProperty(_assertThisInitialized(_this), \"dispose\", void 0);\n\n    _this.object = object;\n    _this.domElement = domElement; // for reset\n\n    _this.target0 = _this.target.clone();\n    _this.position0 = _this.object.position.clone();\n    _this.zoom0 = _this.object instanceof PerspectiveCamera ? _this.object.zoom : 1; //\n    // public methods\n    //\n\n    _this.getPolarAngle = function () {\n      return spherical.phi;\n    };\n\n    _this.getAzimuthalAngle = function () {\n      return spherical.theta;\n    };\n\n    _this.listenToKeyEvents = function (domElement) {\n      domElement.addEventListener('keydown', onKeyDown);\n      _this._domElementKeyEvents = domElement;\n    };\n\n    _this.saveState = function () {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object instanceof PerspectiveCamera ? scope.object.zoom : 1;\n    };\n\n    _this.reset = function () {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n\n      if (scope.object instanceof PerspectiveCamera) {\n        scope.object.zoom = scope.zoom0;\n        scope.object.updateProjectionMatrix();\n      }\n\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    _this.update = function () {\n      var offset = new Vector3(); // so camera.up is the orbit axis\n\n      var quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      var quatInverse = quat.clone().invert();\n      var lastPosition = new Vector3();\n      var lastQuaternion = new Quaternion();\n      var twoPI = 2 * Math.PI;\n      return function update() {\n        var position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        var min = scope.minAzimuthAngle;\n        var max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    }(); // https://github.com/mrdoob/three.js/issues/20575\n\n\n    _this.connect = function (domElement) {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n\n      scope.domElement = domElement;\n      scope.domElement.addEventListener('contextmenu', onContextMenu);\n      scope.domElement.addEventListener('pointerdown', onPointerDown);\n      scope.domElement.addEventListener('wheel', onMouseWheel);\n      scope.domElement.addEventListener('touchstart', onTouchStart);\n      scope.domElement.addEventListener('touchend', onTouchEnd);\n      scope.domElement.addEventListener('touchmove', onTouchMove);\n    };\n\n    _this.dispose = function () {\n      var _scope$domElement, _scope$domElement2, _scope$domElement3, _scope$domElement4, _scope$domElement5, _scope$domElement6, _scope$domElement7, _scope$domElement8;\n\n      (_scope$domElement = scope.domElement) === null || _scope$domElement === void 0 ? void 0 : _scope$domElement.removeEventListener('contextmenu', onContextMenu);\n      (_scope$domElement2 = scope.domElement) === null || _scope$domElement2 === void 0 ? void 0 : _scope$domElement2.removeEventListener('pointerdown', onPointerDown);\n      (_scope$domElement3 = scope.domElement) === null || _scope$domElement3 === void 0 ? void 0 : _scope$domElement3.removeEventListener('wheel', onMouseWheel);\n      (_scope$domElement4 = scope.domElement) === null || _scope$domElement4 === void 0 ? void 0 : _scope$domElement4.removeEventListener('touchstart', onTouchStart);\n      (_scope$domElement5 = scope.domElement) === null || _scope$domElement5 === void 0 ? void 0 : _scope$domElement5.removeEventListener('touchend', onTouchEnd);\n      (_scope$domElement6 = scope.domElement) === null || _scope$domElement6 === void 0 ? void 0 : _scope$domElement6.removeEventListener('touchmove', onTouchMove);\n      (_scope$domElement7 = scope.domElement) === null || _scope$domElement7 === void 0 ? void 0 : _scope$domElement7.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement8 = scope.domElement) === null || _scope$domElement8 === void 0 ? void 0 : _scope$domElement8.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    var scope = _assertThisInitialized(_this);\n\n    var changeEvent = {\n      type: 'change'\n    };\n    var startEvent = {\n      type: 'start'\n    };\n    var endEvent = {\n      type: 'end'\n    };\n    var STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    var state = STATE.NONE;\n    var EPS = 0.000001; // current position in spherical coordinates\n\n    var spherical = new Spherical();\n    var sphericalDelta = new Spherical();\n    var scale = 1;\n    var panOffset = new Vector3();\n    var zoomChanged = false;\n    var rotateStart = new Vector2();\n    var rotateEnd = new Vector2();\n    var rotateDelta = new Vector2();\n    var panStart = new Vector2();\n    var panEnd = new Vector2();\n    var panDelta = new Vector2();\n    var dollyStart = new Vector2();\n    var dollyEnd = new Vector2();\n    var dollyDelta = new Vector2();\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    var panLeft = function () {\n      var v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    }();\n\n    var panUp = function () {\n      var v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    }(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    var pan = function () {\n      var offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        var element = scope.domElement;\n\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          // perspective\n          var position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          var targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    }();\n\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      var needsUpdate = false;\n\n      switch (event.keyCode) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate(event) {\n      if (event.touches.length == 1) {\n        rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan(event) {\n      if (event.touches.length == 1) {\n        panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly(event) {\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enablePan) handleTouchStartPan(event);\n    }\n\n    function handleTouchStartDollyRotate(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enableRotate) handleTouchStartRotate(event);\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (event.touches.length == 1) {\n        rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      var element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (event.touches.length == 1) {\n        panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        var x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        var y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      var dx = event.touches[0].pageX - event.touches[1].pageX;\n      var dy = event.touches[0].pageY - event.touches[1].pageY;\n      var distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    } // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseDown(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseMove(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onPointerUp(event) {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseUp();\n          break;\n        // TODO touch\n      }\n    }\n\n    function onMouseDown(event) {\n      var _scope$domElement9; // Prevent the browser from scrolling.\n\n\n      event.preventDefault(); // Manually set the focus since calling preventDefault above\n      // prevents the browser from setting it automatically.\n\n      (_scope$domElement9 = scope.domElement) !== null && _scope$domElement9 !== void 0 && _scope$domElement9.focus ? scope.domElement.focus() : window.focus();\n      var mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        var _scope$domElement10, _scope$domElement11;\n\n        (_scope$domElement10 = scope.domElement) === null || _scope$domElement10 === void 0 ? void 0 : _scope$domElement10.ownerDocument.addEventListener('pointermove', onPointerMove);\n        (_scope$domElement11 = scope.domElement) === null || _scope$domElement11 === void 0 ? void 0 : _scope$domElement11.ownerDocument.addEventListener('pointerup', onPointerUp);\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseUp() {\n      var _scope$domElement12, _scope$domElement13;\n\n      (_scope$domElement12 = scope.domElement) === null || _scope$domElement12 === void 0 ? void 0 : _scope$domElement12.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement13 = scope.domElement) === null || _scope$domElement13 === void 0 ? void 0 : _scope$domElement13.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      if (scope.enabled === false) return;\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (event.touches.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate(event);\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan(event);\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan(event);\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate(event);\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd() {\n      if (scope.enabled === false) return;\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    } // connect events\n\n\n    if (domElement !== undefined) _this.connect(domElement); // force an update at start\n\n    _this.update();\n\n    return _this;\n  }\n\n  return _createClass(OrbitControls);\n}(EventDispatcher); // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nvar MapControls = /*#__PURE__*/function (_OrbitControls) {\n  _inherits(MapControls, _OrbitControls);\n\n  var _super2 = _createSuper(MapControls);\n\n  function MapControls(object, domElement) {\n    var _this2;\n\n    _classCallCheck(this, MapControls);\n\n    _this2 = _super2.call(this, object, domElement);\n    _this2.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    _this2.mouseButtons.LEFT = MOUSE.PAN;\n    _this2.mouseButtons.RIGHT = MOUSE.ROTATE;\n    _this2.touches.ONE = TOUCH.PAN;\n    _this2.touches.TWO = TOUCH.DOLLY_ROTATE;\n    return _this2;\n  }\n\n  return _createClass(MapControls);\n}(OrbitControls);\n\nexport { MapControls, OrbitControls };","map":{"version":3,"names":["_defineProperty","EventDispatcher","Vector3","MOUSE","TOUCH","PerspectiveCamera","Quaternion","Spherical","Vector2","OrthographicCamera","OrbitControls","object","domElement","Infinity","Math","PI","LEFT","UP","RIGHT","BOTTOM","ROTATE","MIDDLE","DOLLY","PAN","ONE","TWO","DOLLY_PAN","target0","target","clone","position0","position","zoom0","zoom","getPolarAngle","spherical","phi","getAzimuthalAngle","theta","listenToKeyEvents","addEventListener","onKeyDown","_domElementKeyEvents","saveState","scope","copy","reset","updateProjectionMatrix","dispatchEvent","changeEvent","update","state","STATE","NONE","offset","quat","setFromUnitVectors","up","quatInverse","invert","lastPosition","lastQuaternion","twoPI","sub","applyQuaternion","setFromVector3","autoRotate","rotateLeft","getAutoRotationAngle","enableDamping","sphericalDelta","dampingFactor","min","minAzimuthAngle","max","maxAzimuthAngle","isFinite","minPolarAngle","maxPolarAngle","makeSafe","radius","scale","minDistance","maxDistance","addScaledVector","panOffset","add","setFromSpherical","lookAt","multiplyScalar","set","zoomChanged","distanceToSquared","EPS","dot","quaternion","connect","document","console","error","onContextMenu","onPointerDown","onMouseWheel","onTouchStart","onTouchEnd","onTouchMove","dispose","_scope$domElement","_scope$domElement2","_scope$domElement3","_scope$domElement4","_scope$domElement5","_scope$domElement6","_scope$domElement7","_scope$domElement8","removeEventListener","ownerDocument","onPointerMove","onPointerUp","type","startEvent","endEvent","TOUCH_ROTATE","TOUCH_PAN","TOUCH_DOLLY_PAN","TOUCH_DOLLY_ROTATE","rotateStart","rotateEnd","rotateDelta","panStart","panEnd","panDelta","dollyStart","dollyEnd","dollyDelta","autoRotateSpeed","getZoomScale","pow","zoomSpeed","angle","rotateUp","panLeft","v","distance","objectMatrix","setFromMatrixColumn","panUp","screenSpacePanning","crossVectors","pan","deltaX","deltaY","element","isPerspectiveCamera","targetDistance","length","tan","fov","clientHeight","matrix","isOrthographicCamera","right","left","clientWidth","top","bottom","warn","enablePan","dollyOut","dollyScale","minZoom","maxZoom","enableZoom","dollyIn","handleMouseDownRotate","event","clientX","clientY","handleMouseDownDolly","handleMouseDownPan","handleMouseMoveRotate","subVectors","rotateSpeed","x","y","handleMouseMoveDolly","handleMouseMovePan","panSpeed","handleMouseWheel","handleKeyDown","needsUpdate","keyCode","keys","keyPanSpeed","preventDefault","handleTouchStartRotate","touches","pageX","pageY","handleTouchStartPan","handleTouchStartDolly","dx","dy","sqrt","handleTouchStartDollyPan","handleTouchStartDollyRotate","enableRotate","handleTouchMoveRotate","handleTouchMovePan","handleTouchMoveDolly","handleTouchMoveDollyPan","handleTouchMoveDollyRotate","enabled","pointerType","onMouseDown","onMouseMove","onMouseUp","_scope$domElement9","focus","window","mouseAction","button","mouseButtons","ctrlKey","metaKey","shiftKey","_scope$domElement10","_scope$domElement11","_scope$domElement12","_scope$domElement13","DOLLY_ROTATE","undefined","MapControls"],"sources":["/Users/98yaroslavgorban/Desktop/gltfjsx-forked/node_modules/three-stdlib/controls/OrbitControls.js"],"sourcesContent":["import _defineProperty from '@babel/runtime/helpers/esm/defineProperty';\nimport { EventDispatcher, Vector3, MOUSE, TOUCH, PerspectiveCamera, Quaternion, Spherical, Vector2, OrthographicCamera } from 'three';\n\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n//\n//    Orbit - left mouse / touch: one-finger move\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - right mouse, or left mouse + ctrl/meta/shiftKey, or arrow keys / touch: two-finger move\n\nclass OrbitControls extends EventDispatcher {\n  // Set to false to disable this control\n  // \"target\" sets the location of focus, where the object orbits around\n  // How far you can dolly in and out ( PerspectiveCamera only )\n  // How far you can zoom in and out ( OrthographicCamera only )\n  // How far you can orbit vertically, upper and lower limits.\n  // Range is 0 to Math.PI radians.\n  // radians\n  // radians\n  // How far you can orbit horizontally, upper and lower limits.\n  // If set, the interval [ min, max ] must be a sub-interval of [ - 2 PI, 2 PI ], with ( max - min < 2 PI )\n  // radians\n  // radians\n  // Set to true to enable damping (inertia)\n  // If damping is enabled, you must call controls.update() in your animation loop\n  // This option actually enables dollying in and out; left as \"zoom\" for backwards compatibility.\n  // Set to false to disable zooming\n  // Set to false to disable rotating\n  // Set to false to disable panning\n  // if false, pan orthogonal to world-space direction camera.up\n  // pixels moved per arrow key push\n  // Set to true to automatically rotate around the target\n  // If auto-rotate is enabled, you must call controls.update() in your animation loop\n  // 30 seconds per orbit when fps is 60\n  // The four arrow keys\n  // Mouse buttons\n  // Touch fingers\n  // the target DOM element for key events\n  constructor(object, domElement) {\n    super();\n\n    _defineProperty(this, \"object\", void 0);\n\n    _defineProperty(this, \"domElement\", void 0);\n\n    _defineProperty(this, \"enabled\", true);\n\n    _defineProperty(this, \"target\", new Vector3());\n\n    _defineProperty(this, \"minDistance\", 0);\n\n    _defineProperty(this, \"maxDistance\", Infinity);\n\n    _defineProperty(this, \"minZoom\", 0);\n\n    _defineProperty(this, \"maxZoom\", Infinity);\n\n    _defineProperty(this, \"minPolarAngle\", 0);\n\n    _defineProperty(this, \"maxPolarAngle\", Math.PI);\n\n    _defineProperty(this, \"minAzimuthAngle\", -Infinity);\n\n    _defineProperty(this, \"maxAzimuthAngle\", Infinity);\n\n    _defineProperty(this, \"enableDamping\", false);\n\n    _defineProperty(this, \"dampingFactor\", 0.05);\n\n    _defineProperty(this, \"enableZoom\", true);\n\n    _defineProperty(this, \"zoomSpeed\", 1.0);\n\n    _defineProperty(this, \"enableRotate\", true);\n\n    _defineProperty(this, \"rotateSpeed\", 1.0);\n\n    _defineProperty(this, \"enablePan\", true);\n\n    _defineProperty(this, \"panSpeed\", 1.0);\n\n    _defineProperty(this, \"screenSpacePanning\", true);\n\n    _defineProperty(this, \"keyPanSpeed\", 7.0);\n\n    _defineProperty(this, \"autoRotate\", false);\n\n    _defineProperty(this, \"autoRotateSpeed\", 2.0);\n\n    _defineProperty(this, \"keys\", {\n      LEFT: 37,\n      UP: 38,\n      RIGHT: 39,\n      BOTTOM: 40\n    });\n\n    _defineProperty(this, \"mouseButtons\", {\n      LEFT: MOUSE.ROTATE,\n      MIDDLE: MOUSE.DOLLY,\n      RIGHT: MOUSE.PAN\n    });\n\n    _defineProperty(this, \"touches\", {\n      ONE: TOUCH.ROTATE,\n      TWO: TOUCH.DOLLY_PAN\n    });\n\n    _defineProperty(this, \"target0\", void 0);\n\n    _defineProperty(this, \"position0\", void 0);\n\n    _defineProperty(this, \"zoom0\", void 0);\n\n    _defineProperty(this, \"_domElementKeyEvents\", null);\n\n    _defineProperty(this, \"getPolarAngle\", void 0);\n\n    _defineProperty(this, \"getAzimuthalAngle\", void 0);\n\n    _defineProperty(this, \"listenToKeyEvents\", void 0);\n\n    _defineProperty(this, \"saveState\", void 0);\n\n    _defineProperty(this, \"reset\", void 0);\n\n    _defineProperty(this, \"update\", void 0);\n\n    _defineProperty(this, \"connect\", void 0);\n\n    _defineProperty(this, \"dispose\", void 0);\n\n    this.object = object;\n    this.domElement = domElement; // for reset\n\n    this.target0 = this.target.clone();\n    this.position0 = this.object.position.clone();\n    this.zoom0 = this.object instanceof PerspectiveCamera ? this.object.zoom : 1; //\n    // public methods\n    //\n\n    this.getPolarAngle = () => spherical.phi;\n\n    this.getAzimuthalAngle = () => spherical.theta;\n\n    this.listenToKeyEvents = domElement => {\n      domElement.addEventListener('keydown', onKeyDown);\n      this._domElementKeyEvents = domElement;\n    };\n\n    this.saveState = () => {\n      scope.target0.copy(scope.target);\n      scope.position0.copy(scope.object.position);\n      scope.zoom0 = scope.object instanceof PerspectiveCamera ? scope.object.zoom : 1;\n    };\n\n    this.reset = () => {\n      scope.target.copy(scope.target0);\n      scope.object.position.copy(scope.position0);\n\n      if (scope.object instanceof PerspectiveCamera) {\n        scope.object.zoom = scope.zoom0;\n        scope.object.updateProjectionMatrix();\n      }\n\n      scope.dispatchEvent(changeEvent);\n      scope.update();\n      state = STATE.NONE;\n    }; // this method is exposed, but perhaps it would be better if we can make it private...\n\n\n    this.update = (() => {\n      const offset = new Vector3(); // so camera.up is the orbit axis\n\n      const quat = new Quaternion().setFromUnitVectors(object.up, new Vector3(0, 1, 0));\n      const quatInverse = quat.clone().invert();\n      const lastPosition = new Vector3();\n      const lastQuaternion = new Quaternion();\n      const twoPI = 2 * Math.PI;\n      return function update() {\n        const position = scope.object.position;\n        offset.copy(position).sub(scope.target); // rotate offset to \"y-axis-is-up\" space\n\n        offset.applyQuaternion(quat); // angle from z-axis around y-axis\n\n        spherical.setFromVector3(offset);\n\n        if (scope.autoRotate && state === STATE.NONE) {\n          rotateLeft(getAutoRotationAngle());\n        }\n\n        if (scope.enableDamping) {\n          spherical.theta += sphericalDelta.theta * scope.dampingFactor;\n          spherical.phi += sphericalDelta.phi * scope.dampingFactor;\n        } else {\n          spherical.theta += sphericalDelta.theta;\n          spherical.phi += sphericalDelta.phi;\n        } // restrict theta to be between desired limits\n\n\n        let min = scope.minAzimuthAngle;\n        let max = scope.maxAzimuthAngle;\n\n        if (isFinite(min) && isFinite(max)) {\n          if (min < -Math.PI) min += twoPI;else if (min > Math.PI) min -= twoPI;\n          if (max < -Math.PI) max += twoPI;else if (max > Math.PI) max -= twoPI;\n\n          if (min <= max) {\n            spherical.theta = Math.max(min, Math.min(max, spherical.theta));\n          } else {\n            spherical.theta = spherical.theta > (min + max) / 2 ? Math.max(min, spherical.theta) : Math.min(max, spherical.theta);\n          }\n        } // restrict phi to be between desired limits\n\n\n        spherical.phi = Math.max(scope.minPolarAngle, Math.min(scope.maxPolarAngle, spherical.phi));\n        spherical.makeSafe();\n        spherical.radius *= scale; // restrict radius to be between desired limits\n\n        spherical.radius = Math.max(scope.minDistance, Math.min(scope.maxDistance, spherical.radius)); // move target to panned location\n\n        if (scope.enableDamping === true) {\n          scope.target.addScaledVector(panOffset, scope.dampingFactor);\n        } else {\n          scope.target.add(panOffset);\n        }\n\n        offset.setFromSpherical(spherical); // rotate offset back to \"camera-up-vector-is-up\" space\n\n        offset.applyQuaternion(quatInverse);\n        position.copy(scope.target).add(offset);\n        scope.object.lookAt(scope.target);\n\n        if (scope.enableDamping === true) {\n          sphericalDelta.theta *= 1 - scope.dampingFactor;\n          sphericalDelta.phi *= 1 - scope.dampingFactor;\n          panOffset.multiplyScalar(1 - scope.dampingFactor);\n        } else {\n          sphericalDelta.set(0, 0, 0);\n          panOffset.set(0, 0, 0);\n        }\n\n        scale = 1; // update condition is:\n        // min(camera displacement, camera rotation in radians)^2 > EPS\n        // using small-angle approximation cos(x/2) = 1 - x^2 / 8\n\n        if (zoomChanged || lastPosition.distanceToSquared(scope.object.position) > EPS || 8 * (1 - lastQuaternion.dot(scope.object.quaternion)) > EPS) {\n          scope.dispatchEvent(changeEvent);\n          lastPosition.copy(scope.object.position);\n          lastQuaternion.copy(scope.object.quaternion);\n          zoomChanged = false;\n          return true;\n        }\n\n        return false;\n      };\n    })(); // https://github.com/mrdoob/three.js/issues/20575\n\n\n    this.connect = domElement => {\n      if (domElement === document) {\n        console.error('THREE.OrbitControls: \"document\" should not be used as the target \"domElement\". Please use \"renderer.domElement\" instead.');\n      }\n\n      scope.domElement = domElement;\n      scope.domElement.addEventListener('contextmenu', onContextMenu);\n      scope.domElement.addEventListener('pointerdown', onPointerDown);\n      scope.domElement.addEventListener('wheel', onMouseWheel);\n      scope.domElement.addEventListener('touchstart', onTouchStart);\n      scope.domElement.addEventListener('touchend', onTouchEnd);\n      scope.domElement.addEventListener('touchmove', onTouchMove);\n    };\n\n    this.dispose = () => {\n      var _scope$domElement, _scope$domElement2, _scope$domElement3, _scope$domElement4, _scope$domElement5, _scope$domElement6, _scope$domElement7, _scope$domElement8;\n\n      (_scope$domElement = scope.domElement) === null || _scope$domElement === void 0 ? void 0 : _scope$domElement.removeEventListener('contextmenu', onContextMenu);\n      (_scope$domElement2 = scope.domElement) === null || _scope$domElement2 === void 0 ? void 0 : _scope$domElement2.removeEventListener('pointerdown', onPointerDown);\n      (_scope$domElement3 = scope.domElement) === null || _scope$domElement3 === void 0 ? void 0 : _scope$domElement3.removeEventListener('wheel', onMouseWheel);\n      (_scope$domElement4 = scope.domElement) === null || _scope$domElement4 === void 0 ? void 0 : _scope$domElement4.removeEventListener('touchstart', onTouchStart);\n      (_scope$domElement5 = scope.domElement) === null || _scope$domElement5 === void 0 ? void 0 : _scope$domElement5.removeEventListener('touchend', onTouchEnd);\n      (_scope$domElement6 = scope.domElement) === null || _scope$domElement6 === void 0 ? void 0 : _scope$domElement6.removeEventListener('touchmove', onTouchMove);\n      (_scope$domElement7 = scope.domElement) === null || _scope$domElement7 === void 0 ? void 0 : _scope$domElement7.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement8 = scope.domElement) === null || _scope$domElement8 === void 0 ? void 0 : _scope$domElement8.ownerDocument.removeEventListener('pointerup', onPointerUp);\n\n      if (scope._domElementKeyEvents !== null) {\n        scope._domElementKeyEvents.removeEventListener('keydown', onKeyDown);\n      } //scope.dispatchEvent( { type: 'dispose' } ); // should this be added here?\n\n    }; //\n    // internals\n    //\n\n\n    const scope = this;\n    const changeEvent = {\n      type: 'change'\n    };\n    const startEvent = {\n      type: 'start'\n    };\n    const endEvent = {\n      type: 'end'\n    };\n    const STATE = {\n      NONE: -1,\n      ROTATE: 0,\n      DOLLY: 1,\n      PAN: 2,\n      TOUCH_ROTATE: 3,\n      TOUCH_PAN: 4,\n      TOUCH_DOLLY_PAN: 5,\n      TOUCH_DOLLY_ROTATE: 6\n    };\n    let state = STATE.NONE;\n    const EPS = 0.000001; // current position in spherical coordinates\n\n    const spherical = new Spherical();\n    const sphericalDelta = new Spherical();\n    let scale = 1;\n    const panOffset = new Vector3();\n    let zoomChanged = false;\n    const rotateStart = new Vector2();\n    const rotateEnd = new Vector2();\n    const rotateDelta = new Vector2();\n    const panStart = new Vector2();\n    const panEnd = new Vector2();\n    const panDelta = new Vector2();\n    const dollyStart = new Vector2();\n    const dollyEnd = new Vector2();\n    const dollyDelta = new Vector2();\n\n    function getAutoRotationAngle() {\n      return 2 * Math.PI / 60 / 60 * scope.autoRotateSpeed;\n    }\n\n    function getZoomScale() {\n      return Math.pow(0.95, scope.zoomSpeed);\n    }\n\n    function rotateLeft(angle) {\n      sphericalDelta.theta -= angle;\n    }\n\n    function rotateUp(angle) {\n      sphericalDelta.phi -= angle;\n    }\n\n    const panLeft = (() => {\n      const v = new Vector3();\n      return function panLeft(distance, objectMatrix) {\n        v.setFromMatrixColumn(objectMatrix, 0); // get X column of objectMatrix\n\n        v.multiplyScalar(-distance);\n        panOffset.add(v);\n      };\n    })();\n\n    const panUp = (() => {\n      const v = new Vector3();\n      return function panUp(distance, objectMatrix) {\n        if (scope.screenSpacePanning === true) {\n          v.setFromMatrixColumn(objectMatrix, 1);\n        } else {\n          v.setFromMatrixColumn(objectMatrix, 0);\n          v.crossVectors(scope.object.up, v);\n        }\n\n        v.multiplyScalar(distance);\n        panOffset.add(v);\n      };\n    })(); // deltaX and deltaY are in pixels; right and down are positive\n\n\n    const pan = (() => {\n      const offset = new Vector3();\n      return function pan(deltaX, deltaY) {\n        const element = scope.domElement;\n\n        if (element && scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n          // perspective\n          const position = scope.object.position;\n          offset.copy(position).sub(scope.target);\n          let targetDistance = offset.length(); // half of the fov is center to top of screen\n\n          targetDistance *= Math.tan(scope.object.fov / 2 * Math.PI / 180.0); // we use only clientHeight here so aspect ratio does not distort speed\n\n          panLeft(2 * deltaX * targetDistance / element.clientHeight, scope.object.matrix);\n          panUp(2 * deltaY * targetDistance / element.clientHeight, scope.object.matrix);\n        } else if (element && scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n          // orthographic\n          panLeft(deltaX * (scope.object.right - scope.object.left) / scope.object.zoom / element.clientWidth, scope.object.matrix);\n          panUp(deltaY * (scope.object.top - scope.object.bottom) / scope.object.zoom / element.clientHeight, scope.object.matrix);\n        } else {\n          // camera neither orthographic nor perspective\n          console.warn('WARNING: OrbitControls.js encountered an unknown camera type - pan disabled.');\n          scope.enablePan = false;\n        }\n      };\n    })();\n\n    function dollyOut(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale /= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom * dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    }\n\n    function dollyIn(dollyScale) {\n      if (scope.object instanceof PerspectiveCamera && scope.object.isPerspectiveCamera) {\n        scale *= dollyScale;\n      } else if (scope.object instanceof OrthographicCamera && scope.object.isOrthographicCamera) {\n        scope.object.zoom = Math.max(scope.minZoom, Math.min(scope.maxZoom, scope.object.zoom / dollyScale));\n        scope.object.updateProjectionMatrix();\n        zoomChanged = true;\n      } else {\n        console.warn('WARNING: OrbitControls.js encountered an unknown camera type - dolly/zoom disabled.');\n        scope.enableZoom = false;\n      }\n    } //\n    // event callbacks - update the object state\n    //\n\n\n    function handleMouseDownRotate(event) {\n      rotateStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownDolly(event) {\n      dollyStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseDownPan(event) {\n      panStart.set(event.clientX, event.clientY);\n    }\n\n    function handleMouseMoveRotate(event) {\n      rotateEnd.set(event.clientX, event.clientY);\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n      scope.update();\n    }\n\n    function handleMouseMoveDolly(event) {\n      dollyEnd.set(event.clientX, event.clientY);\n      dollyDelta.subVectors(dollyEnd, dollyStart);\n\n      if (dollyDelta.y > 0) {\n        dollyOut(getZoomScale());\n      } else if (dollyDelta.y < 0) {\n        dollyIn(getZoomScale());\n      }\n\n      dollyStart.copy(dollyEnd);\n      scope.update();\n    }\n\n    function handleMouseMovePan(event) {\n      panEnd.set(event.clientX, event.clientY);\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n      scope.update();\n    }\n\n    function handleMouseWheel(event) {\n      if (event.deltaY < 0) {\n        dollyIn(getZoomScale());\n      } else if (event.deltaY > 0) {\n        dollyOut(getZoomScale());\n      }\n\n      scope.update();\n    }\n\n    function handleKeyDown(event) {\n      let needsUpdate = false;\n\n      switch (event.keyCode) {\n        case scope.keys.UP:\n          pan(0, scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.BOTTOM:\n          pan(0, -scope.keyPanSpeed);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.LEFT:\n          pan(scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n\n        case scope.keys.RIGHT:\n          pan(-scope.keyPanSpeed, 0);\n          needsUpdate = true;\n          break;\n      }\n\n      if (needsUpdate) {\n        // prevent the browser from scrolling on cursor keys\n        event.preventDefault();\n        scope.update();\n      }\n    }\n\n    function handleTouchStartRotate(event) {\n      if (event.touches.length == 1) {\n        rotateStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartPan(event) {\n      if (event.touches.length == 1) {\n        panStart.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panStart.set(x, y);\n      }\n    }\n\n    function handleTouchStartDolly(event) {\n      const dx = event.touches[0].pageX - event.touches[1].pageX;\n      const dy = event.touches[0].pageY - event.touches[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyStart.set(0, distance);\n    }\n\n    function handleTouchStartDollyPan(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enablePan) handleTouchStartPan(event);\n    }\n\n    function handleTouchStartDollyRotate(event) {\n      if (scope.enableZoom) handleTouchStartDolly(event);\n      if (scope.enableRotate) handleTouchStartRotate(event);\n    }\n\n    function handleTouchMoveRotate(event) {\n      if (event.touches.length == 1) {\n        rotateEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        rotateEnd.set(x, y);\n      }\n\n      rotateDelta.subVectors(rotateEnd, rotateStart).multiplyScalar(scope.rotateSpeed);\n      const element = scope.domElement;\n\n      if (element) {\n        rotateLeft(2 * Math.PI * rotateDelta.x / element.clientHeight); // yes, height\n\n        rotateUp(2 * Math.PI * rotateDelta.y / element.clientHeight);\n      }\n\n      rotateStart.copy(rotateEnd);\n    }\n\n    function handleTouchMovePan(event) {\n      if (event.touches.length == 1) {\n        panEnd.set(event.touches[0].pageX, event.touches[0].pageY);\n      } else {\n        const x = 0.5 * (event.touches[0].pageX + event.touches[1].pageX);\n        const y = 0.5 * (event.touches[0].pageY + event.touches[1].pageY);\n        panEnd.set(x, y);\n      }\n\n      panDelta.subVectors(panEnd, panStart).multiplyScalar(scope.panSpeed);\n      pan(panDelta.x, panDelta.y);\n      panStart.copy(panEnd);\n    }\n\n    function handleTouchMoveDolly(event) {\n      const dx = event.touches[0].pageX - event.touches[1].pageX;\n      const dy = event.touches[0].pageY - event.touches[1].pageY;\n      const distance = Math.sqrt(dx * dx + dy * dy);\n      dollyEnd.set(0, distance);\n      dollyDelta.set(0, Math.pow(dollyEnd.y / dollyStart.y, scope.zoomSpeed));\n      dollyOut(dollyDelta.y);\n      dollyStart.copy(dollyEnd);\n    }\n\n    function handleTouchMoveDollyPan(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enablePan) handleTouchMovePan(event);\n    }\n\n    function handleTouchMoveDollyRotate(event) {\n      if (scope.enableZoom) handleTouchMoveDolly(event);\n      if (scope.enableRotate) handleTouchMoveRotate(event);\n    }\n    // event handlers - FSM: listen for events and reset state\n    //\n\n\n    function onPointerDown(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseDown(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onPointerMove(event) {\n      if (scope.enabled === false) return;\n\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseMove(event);\n          break;\n        // TODO touch\n      }\n    }\n\n    function onPointerUp(event) {\n      switch (event.pointerType) {\n        case 'mouse':\n        case 'pen':\n          onMouseUp();\n          break;\n        // TODO touch\n      }\n    }\n\n    function onMouseDown(event) {\n      var _scope$domElement9;\n\n      // Prevent the browser from scrolling.\n      event.preventDefault(); // Manually set the focus since calling preventDefault above\n      // prevents the browser from setting it automatically.\n\n      (_scope$domElement9 = scope.domElement) !== null && _scope$domElement9 !== void 0 && _scope$domElement9.focus ? scope.domElement.focus() : window.focus();\n      let mouseAction;\n\n      switch (event.button) {\n        case 0:\n          mouseAction = scope.mouseButtons.LEFT;\n          break;\n\n        case 1:\n          mouseAction = scope.mouseButtons.MIDDLE;\n          break;\n\n        case 2:\n          mouseAction = scope.mouseButtons.RIGHT;\n          break;\n\n        default:\n          mouseAction = -1;\n      }\n\n      switch (mouseAction) {\n        case MOUSE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseDownDolly(event);\n          state = STATE.DOLLY;\n          break;\n\n        case MOUSE.ROTATE:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          } else {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          }\n\n          break;\n\n        case MOUSE.PAN:\n          if (event.ctrlKey || event.metaKey || event.shiftKey) {\n            if (scope.enableRotate === false) return;\n            handleMouseDownRotate(event);\n            state = STATE.ROTATE;\n          } else {\n            if (scope.enablePan === false) return;\n            handleMouseDownPan(event);\n            state = STATE.PAN;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        var _scope$domElement10, _scope$domElement11;\n\n        (_scope$domElement10 = scope.domElement) === null || _scope$domElement10 === void 0 ? void 0 : _scope$domElement10.ownerDocument.addEventListener('pointermove', onPointerMove);\n        (_scope$domElement11 = scope.domElement) === null || _scope$domElement11 === void 0 ? void 0 : _scope$domElement11.ownerDocument.addEventListener('pointerup', onPointerUp);\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onMouseMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n\n      switch (state) {\n        case STATE.ROTATE:\n          if (scope.enableRotate === false) return;\n          handleMouseMoveRotate(event);\n          break;\n\n        case STATE.DOLLY:\n          if (scope.enableZoom === false) return;\n          handleMouseMoveDolly(event);\n          break;\n\n        case STATE.PAN:\n          if (scope.enablePan === false) return;\n          handleMouseMovePan(event);\n          break;\n      }\n    }\n\n    function onMouseUp() {\n      var _scope$domElement12, _scope$domElement13;\n\n      (_scope$domElement12 = scope.domElement) === null || _scope$domElement12 === void 0 ? void 0 : _scope$domElement12.ownerDocument.removeEventListener('pointermove', onPointerMove);\n      (_scope$domElement13 = scope.domElement) === null || _scope$domElement13 === void 0 ? void 0 : _scope$domElement13.ownerDocument.removeEventListener('pointerup', onPointerUp);\n      if (scope.enabled === false) return;\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onMouseWheel(event) {\n      if (scope.enabled === false || scope.enableZoom === false || state !== STATE.NONE && state !== STATE.ROTATE) {\n        return;\n      }\n\n      event.preventDefault();\n      scope.dispatchEvent(startEvent);\n      handleMouseWheel(event);\n      scope.dispatchEvent(endEvent);\n    }\n\n    function onKeyDown(event) {\n      if (scope.enabled === false || scope.enablePan === false) return;\n      handleKeyDown(event);\n    }\n\n    function onTouchStart(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (event.touches.length) {\n        case 1:\n          switch (scope.touches.ONE) {\n            case TOUCH.ROTATE:\n              if (scope.enableRotate === false) return;\n              handleTouchStartRotate(event);\n              state = STATE.TOUCH_ROTATE;\n              break;\n\n            case TOUCH.PAN:\n              if (scope.enablePan === false) return;\n              handleTouchStartPan(event);\n              state = STATE.TOUCH_PAN;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        case 2:\n          switch (scope.touches.TWO) {\n            case TOUCH.DOLLY_PAN:\n              if (scope.enableZoom === false && scope.enablePan === false) return;\n              handleTouchStartDollyPan(event);\n              state = STATE.TOUCH_DOLLY_PAN;\n              break;\n\n            case TOUCH.DOLLY_ROTATE:\n              if (scope.enableZoom === false && scope.enableRotate === false) return;\n              handleTouchStartDollyRotate(event);\n              state = STATE.TOUCH_DOLLY_ROTATE;\n              break;\n\n            default:\n              state = STATE.NONE;\n          }\n\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n\n      if (state !== STATE.NONE) {\n        scope.dispatchEvent(startEvent);\n      }\n    }\n\n    function onTouchMove(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault(); // prevent scrolling\n\n      switch (state) {\n        case STATE.TOUCH_ROTATE:\n          if (scope.enableRotate === false) return;\n          handleTouchMoveRotate(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_PAN:\n          if (scope.enablePan === false) return;\n          handleTouchMovePan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_PAN:\n          if (scope.enableZoom === false && scope.enablePan === false) return;\n          handleTouchMoveDollyPan(event);\n          scope.update();\n          break;\n\n        case STATE.TOUCH_DOLLY_ROTATE:\n          if (scope.enableZoom === false && scope.enableRotate === false) return;\n          handleTouchMoveDollyRotate(event);\n          scope.update();\n          break;\n\n        default:\n          state = STATE.NONE;\n      }\n    }\n\n    function onTouchEnd() {\n      if (scope.enabled === false) return;\n      scope.dispatchEvent(endEvent);\n      state = STATE.NONE;\n    }\n\n    function onContextMenu(event) {\n      if (scope.enabled === false) return;\n      event.preventDefault();\n    } // connect events\n\n\n    if (domElement !== undefined) this.connect(domElement); // force an update at start\n\n    this.update();\n  }\n\n} // This set of controls performs orbiting, dollying (zooming), and panning.\n// Unlike TrackballControls, it maintains the \"up\" direction object.up (+Y by default).\n// This is very similar to OrbitControls, another set of touch behavior\n//\n//    Orbit - right mouse, or left mouse + ctrl/meta/shiftKey / touch: two-finger rotate\n//    Zoom - middle mouse, or mousewheel / touch: two-finger spread or squish\n//    Pan - left mouse, or arrow keys / touch: one-finger move\n\n\nclass MapControls extends OrbitControls {\n  constructor(object, domElement) {\n    super(object, domElement);\n    this.screenSpacePanning = false; // pan orthogonal to world-space direction camera.up\n\n    this.mouseButtons.LEFT = MOUSE.PAN;\n    this.mouseButtons.RIGHT = MOUSE.ROTATE;\n    this.touches.ONE = TOUCH.PAN;\n    this.touches.TWO = TOUCH.DOLLY_ROTATE;\n  }\n\n}\n\nexport { MapControls, OrbitControls };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}