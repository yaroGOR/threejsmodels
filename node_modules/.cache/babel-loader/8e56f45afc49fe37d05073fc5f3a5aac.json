{"ast":null,"code":"import { buildAlternativesLookAheadFunc, buildLookaheadFuncForOptionalProd, buildLookaheadFuncForOr, buildSingleAlternativeLookaheadFunction, PROD_TYPE } from \"../../grammar/lookahead\";\nimport { forEach, has, isES2015MapSupported } from \"../../../utils/utils\";\nimport { DEFAULT_PARSER_CONFIG } from \"../parser\";\nimport { AT_LEAST_ONE_IDX, AT_LEAST_ONE_SEP_IDX, getKeyForAutomaticLookahead, MANY_IDX, MANY_SEP_IDX, OPTION_IDX, OR_IDX } from \"../../grammar/keys\";\nimport { collectMethods, getProductionDslName } from \"../../grammar/gast/gast\";\n/**\n * Trait responsible for the lookahead related utilities and optimizations.\n */\n\nvar LooksAhead =\n/** @class */\nfunction () {\n  function LooksAhead() {}\n\n  LooksAhead.prototype.initLooksAhead = function (config) {\n    this.dynamicTokensEnabled = has(config, \"dynamicTokensEnabled\") ? config.dynamicTokensEnabled : DEFAULT_PARSER_CONFIG.dynamicTokensEnabled;\n    this.maxLookahead = has(config, \"maxLookahead\") ? config.maxLookahead : DEFAULT_PARSER_CONFIG.maxLookahead;\n    /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n\n    this.lookAheadFuncsCache = isES2015MapSupported() ? new Map() : []; // Performance optimization on newer engines that support ES6 Map\n    // For larger Maps this is slightly faster than using a plain object (array in our case).\n\n    /* istanbul ignore else - The else branch will be tested on older node.js versions and IE11 */\n\n    if (isES2015MapSupported()) {\n      this.getLaFuncFromCache = this.getLaFuncFromMap;\n      this.setLaFuncCache = this.setLaFuncCacheUsingMap;\n    } else {\n      this.getLaFuncFromCache = this.getLaFuncFromObj;\n      this.setLaFuncCache = this.setLaFuncUsingObj;\n    }\n  };\n\n  LooksAhead.prototype.preComputeLookaheadFunctions = function (rules) {\n    var _this = this;\n\n    forEach(rules, function (currRule) {\n      _this.TRACE_INIT(currRule.name + \" Rule Lookahead\", function () {\n        var _a = collectMethods(currRule),\n            alternation = _a.alternation,\n            repetition = _a.repetition,\n            option = _a.option,\n            repetitionMandatory = _a.repetitionMandatory,\n            repetitionMandatoryWithSeparator = _a.repetitionMandatoryWithSeparator,\n            repetitionWithSeparator = _a.repetitionWithSeparator;\n\n        forEach(alternation, function (currProd) {\n          var prodIdx = currProd.idx === 0 ? \"\" : currProd.idx;\n\n          _this.TRACE_INIT(\"\" + getProductionDslName(currProd) + prodIdx, function () {\n            var laFunc = buildLookaheadFuncForOr(currProd.idx, currRule, currProd.maxLookahead || _this.maxLookahead, currProd.hasPredicates, _this.dynamicTokensEnabled, _this.lookAheadBuilderForAlternatives);\n            var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[currRule.name], OR_IDX, currProd.idx);\n\n            _this.setLaFuncCache(key, laFunc);\n          });\n        });\n        forEach(repetition, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, MANY_IDX, PROD_TYPE.REPETITION, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(option, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, OPTION_IDX, PROD_TYPE.OPTION, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(repetitionMandatory, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_IDX, PROD_TYPE.REPETITION_MANDATORY, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(repetitionMandatoryWithSeparator, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, AT_LEAST_ONE_SEP_IDX, PROD_TYPE.REPETITION_MANDATORY_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n        forEach(repetitionWithSeparator, function (currProd) {\n          _this.computeLookaheadFunc(currRule, currProd.idx, MANY_SEP_IDX, PROD_TYPE.REPETITION_WITH_SEPARATOR, currProd.maxLookahead, getProductionDslName(currProd));\n        });\n      });\n    });\n  };\n\n  LooksAhead.prototype.computeLookaheadFunc = function (rule, prodOccurrence, prodKey, prodType, prodMaxLookahead, dslMethodName) {\n    var _this = this;\n\n    this.TRACE_INIT(\"\" + dslMethodName + (prodOccurrence === 0 ? \"\" : prodOccurrence), function () {\n      var laFunc = buildLookaheadFuncForOptionalProd(prodOccurrence, rule, prodMaxLookahead || _this.maxLookahead, _this.dynamicTokensEnabled, prodType, _this.lookAheadBuilderForOptional);\n      var key = getKeyForAutomaticLookahead(_this.fullRuleNameToShort[rule.name], prodKey, prodOccurrence);\n\n      _this.setLaFuncCache(key, laFunc);\n    });\n  };\n\n  LooksAhead.prototype.lookAheadBuilderForOptional = function (alt, tokenMatcher, dynamicTokensEnabled) {\n    return buildSingleAlternativeLookaheadFunction(alt, tokenMatcher, dynamicTokensEnabled);\n  };\n\n  LooksAhead.prototype.lookAheadBuilderForAlternatives = function (alts, hasPredicates, tokenMatcher, dynamicTokensEnabled) {\n    return buildAlternativesLookAheadFunc(alts, hasPredicates, tokenMatcher, dynamicTokensEnabled);\n  }; // this actually returns a number, but it is always used as a string (object prop key)\n\n\n  LooksAhead.prototype.getKeyForAutomaticLookahead = function (dslMethodIdx, occurrence) {\n    var currRuleShortName = this.getLastExplicitRuleShortName();\n    return getKeyForAutomaticLookahead(currRuleShortName, dslMethodIdx, occurrence);\n  };\n  /* istanbul ignore next */\n\n\n  LooksAhead.prototype.getLaFuncFromCache = function (key) {\n    return undefined;\n  };\n\n  LooksAhead.prototype.getLaFuncFromMap = function (key) {\n    return this.lookAheadFuncsCache.get(key);\n  };\n  /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n\n\n  LooksAhead.prototype.getLaFuncFromObj = function (key) {\n    return this.lookAheadFuncsCache[key];\n  };\n  /* istanbul ignore next */\n\n\n  LooksAhead.prototype.setLaFuncCache = function (key, value) {};\n\n  LooksAhead.prototype.setLaFuncCacheUsingMap = function (key, value) {\n    this.lookAheadFuncsCache.set(key, value);\n  };\n  /* istanbul ignore next - Using plain array as dictionary will be tested on older node.js versions and IE11 */\n\n\n  LooksAhead.prototype.setLaFuncUsingObj = function (key, value) {\n    this.lookAheadFuncsCache[key] = value;\n  };\n\n  return LooksAhead;\n}();\n\nexport { LooksAhead };","map":{"version":3,"mappings":"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","names":["buildAlternativesLookAheadFunc","buildLookaheadFuncForOptionalProd","buildLookaheadFuncForOr","buildSingleAlternativeLookaheadFunction","PROD_TYPE","forEach","has","isES2015MapSupported","DEFAULT_PARSER_CONFIG","AT_LEAST_ONE_IDX","AT_LEAST_ONE_SEP_IDX","getKeyForAutomaticLookahead","MANY_IDX","MANY_SEP_IDX","OPTION_IDX","OR_IDX","collectMethods","getProductionDslName","LooksAhead","config","dynamicTokensEnabled","maxLookahead","lookAheadFuncsCache","Map","getLaFuncFromCache","getLaFuncFromMap","setLaFuncCache","setLaFuncCacheUsingMap","getLaFuncFromObj","setLaFuncUsingObj","rules","currRule","_this","TRACE_INIT","name","alternation","repetition","option","repetitionMandatory","repetitionMandatoryWithSeparator","repetitionWithSeparator","currProd","prodIdx","idx","laFunc","hasPredicates","lookAheadBuilderForAlternatives","key","fullRuleNameToShort","computeLookaheadFunc","REPETITION","OPTION","REPETITION_MANDATORY","REPETITION_MANDATORY_WITH_SEPARATOR","REPETITION_WITH_SEPARATOR","rule","prodOccurrence","prodKey","prodType","prodMaxLookahead","dslMethodName","lookAheadBuilderForOptional","alt","tokenMatcher","alts","dslMethodIdx","occurrence","currRuleShortName","getLastExplicitRuleShortName","undefined","get","value","set"],"sourceRoot":"","sources":["../../../../../src/parse/parser/traits/looksahead.ts"],"sourcesContent":[null]},"metadata":{},"sourceType":"module"}