{"ast":null,"code":"import { Vector3, Loader, FileLoader, Group, BufferGeometry, Float32BufferAttribute, LineBasicMaterial, Material, PointsMaterial, MeshPhongMaterial, LineSegments, Points, Mesh } from 'three';\n\nvar OBJLoader = function () {\n  // o object_name | g group_name\n  var object_pattern = /^[og]\\s*(.+)?/; // mtllib file_reference\n\n  var material_library_pattern = /^mtllib /; // usemtl material_name\n\n  var material_use_pattern = /^usemtl /; // usemap map_name\n\n  var map_use_pattern = /^usemap /;\n  var vA = new Vector3();\n  var vB = new Vector3();\n  var vC = new Vector3();\n  var ab = new Vector3();\n  var cb = new Vector3();\n\n  function ParserState() {\n    var state = {\n      objects: [],\n      object: {},\n      vertices: [],\n      normals: [],\n      colors: [],\n      uvs: [],\n      materials: {},\n      materialLibraries: [],\n      startObject: function startObject(name, fromDeclaration) {\n        // If the current object (initial from reset) is not from a g/o declaration in the parsed\n        // file. We need to use it for the first parsed g/o to keep things in sync.\n        if (this.object && this.object.fromDeclaration === false) {\n          this.object.name = name;\n          this.object.fromDeclaration = fromDeclaration !== false;\n          return;\n        }\n\n        var previousMaterial = this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined;\n\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n\n        this.object = {\n          name: name || '',\n          fromDeclaration: fromDeclaration !== false,\n          geometry: {\n            vertices: [],\n            normals: [],\n            colors: [],\n            uvs: [],\n            hasUVIndices: false\n          },\n          materials: [],\n          smooth: true,\n          startMaterial: function startMaterial(name, libraries) {\n            var previous = this._finalize(false); // New usemtl declaration overwrites an inherited material, except if faces were declared\n            // after the material, then it must be preserved for proper MultiMaterial continuation.\n\n\n            if (previous && (previous.inherited || previous.groupCount <= 0)) {\n              this.materials.splice(previous.index, 1);\n            }\n\n            var material = {\n              index: this.materials.length,\n              name: name || '',\n              mtllib: Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\n              smooth: previous !== undefined ? previous.smooth : this.smooth,\n              groupStart: previous !== undefined ? previous.groupEnd : 0,\n              groupEnd: -1,\n              groupCount: -1,\n              inherited: false,\n              clone: function clone(index) {\n                var cloned = {\n                  index: typeof index === 'number' ? index : this.index,\n                  name: this.name,\n                  mtllib: this.mtllib,\n                  smooth: this.smooth,\n                  groupStart: 0,\n                  groupEnd: -1,\n                  groupCount: -1,\n                  inherited: false\n                };\n                cloned.clone = this.clone.bind(cloned);\n                return cloned;\n              }\n            };\n            this.materials.push(material);\n            return material;\n          },\n          currentMaterial: function currentMaterial() {\n            if (this.materials.length > 0) {\n              return this.materials[this.materials.length - 1];\n            }\n\n            return undefined;\n          },\n          _finalize: function _finalize(end) {\n            var lastMultiMaterial = this.currentMaterial();\n\n            if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n              lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n              lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n              lastMultiMaterial.inherited = false;\n            } // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\n\n            if (end && this.materials.length > 1) {\n              for (var mi = this.materials.length - 1; mi >= 0; mi--) {\n                if (this.materials[mi].groupCount <= 0) {\n                  this.materials.splice(mi, 1);\n                }\n              }\n            } // Guarantee at least one empty material, this makes the creation later more straight forward.\n\n\n            if (end && this.materials.length === 0) {\n              this.materials.push({\n                name: '',\n                smooth: this.smooth\n              });\n            }\n\n            return lastMultiMaterial;\n          }\n        }; // Inherit previous objects material.\n        // Spec tells us that a declared material must be set to all objects until a new material is declared.\n        // If a usemtl declaration is encountered while this new object is being parsed, it will\n        // overwrite the inherited material. Exception being that there was already face declarations\n        // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n        if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n          var declared = previousMaterial.clone(0);\n          declared.inherited = true;\n          this.object.materials.push(declared);\n        }\n\n        this.objects.push(this.object);\n      },\n      finalize: function finalize() {\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n      },\n      parseVertexIndex: function parseVertexIndex(value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n      parseNormalIndex: function parseNormalIndex(value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n      parseUVIndex: function parseUVIndex(value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 2) * 2;\n      },\n      addVertex: function addVertex(a, b, c) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addVertexPoint: function addVertexPoint(a) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n      addVertexLine: function addVertexLine(a) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n      addNormal: function addNormal(a, b, c) {\n        var src = this.normals;\n        var dst = this.object.geometry.normals;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addFaceNormal: function addFaceNormal(a, b, c) {\n        var src = this.vertices;\n        var dst = this.object.geometry.normals;\n        vA.fromArray(src, a);\n        vB.fromArray(src, b);\n        vC.fromArray(src, c);\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        cb.normalize();\n        dst.push(cb.x, cb.y, cb.z);\n        dst.push(cb.x, cb.y, cb.z);\n        dst.push(cb.x, cb.y, cb.z);\n      },\n      addColor: function addColor(a, b, c) {\n        var src = this.colors;\n        var dst = this.object.geometry.colors;\n        if (src[a] !== undefined) dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        if (src[b] !== undefined) dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        if (src[c] !== undefined) dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addUV: function addUV(a, b, c) {\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n        dst.push(src[a + 0], src[a + 1]);\n        dst.push(src[b + 0], src[b + 1]);\n        dst.push(src[c + 0], src[c + 1]);\n      },\n      addDefaultUV: function addDefaultUV() {\n        var dst = this.object.geometry.uvs;\n        dst.push(0, 0);\n        dst.push(0, 0);\n        dst.push(0, 0);\n      },\n      addUVLine: function addUVLine(a) {\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n        dst.push(src[a + 0], src[a + 1]);\n      },\n      addFace: function addFace(a, b, c, ua, ub, uc, na, nb, nc) {\n        var vLen = this.vertices.length;\n        var ia = this.parseVertexIndex(a, vLen);\n        var ib = this.parseVertexIndex(b, vLen);\n        var ic = this.parseVertexIndex(c, vLen);\n        this.addVertex(ia, ib, ic);\n        this.addColor(ia, ib, ic); // normals\n\n        if (na !== undefined && na !== '') {\n          var nLen = this.normals.length;\n          ia = this.parseNormalIndex(na, nLen);\n          ib = this.parseNormalIndex(nb, nLen);\n          ic = this.parseNormalIndex(nc, nLen);\n          this.addNormal(ia, ib, ic);\n        } else {\n          this.addFaceNormal(ia, ib, ic);\n        } // uvs\n\n\n        if (ua !== undefined && ua !== '') {\n          var uvLen = this.uvs.length;\n          ia = this.parseUVIndex(ua, uvLen);\n          ib = this.parseUVIndex(ub, uvLen);\n          ic = this.parseUVIndex(uc, uvLen);\n          this.addUV(ia, ib, ic);\n          this.object.geometry.hasUVIndices = true;\n        } else {\n          // add placeholder values (for inconsistent face definitions)\n          this.addDefaultUV();\n        }\n      },\n      addPointGeometry: function addPointGeometry(vertices) {\n        this.object.geometry.type = 'Points';\n        var vLen = this.vertices.length;\n\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n          var index = this.parseVertexIndex(vertices[vi], vLen);\n          this.addVertexPoint(index);\n          this.addColor(index);\n        }\n      },\n      addLineGeometry: function addLineGeometry(vertices, uvs) {\n        this.object.geometry.type = 'Line';\n        var vLen = this.vertices.length;\n        var uvLen = this.uvs.length;\n\n        for (var vi = 0, l = vertices.length; vi < l; vi++) {\n          this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n        }\n\n        for (var uvi = 0, _l = uvs.length; uvi < _l; uvi++) {\n          this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n        }\n      }\n    };\n    state.startObject('', false);\n    return state;\n  } //\n\n\n  function OBJLoader(manager) {\n    Loader.call(this, manager);\n    this.materials = null;\n  }\n\n  OBJLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: OBJLoader,\n    load: function load(url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    },\n    setMaterials: function setMaterials(materials) {\n      this.materials = materials;\n      return this;\n    },\n    parse: function parse(text) {\n      var state = new ParserState();\n\n      if (text.indexOf('\\r\\n') !== -1) {\n        // This is faster than String.split with regex that splits on both\n        text = text.replace(/\\r\\n/g, '\\n');\n      }\n\n      if (text.indexOf('\\\\\\n') !== -1) {\n        // join lines separated by a line continuation character (\\)\n        text = text.replace(/\\\\\\n/g, '');\n      }\n\n      var lines = text.split('\\n');\n      var line = '',\n          lineFirstChar = '';\n      var lineLength = 0;\n      var result = []; // Faster to just trim left side of the line. Use if available.\n\n      var trimLeft = typeof ''.trimLeft === 'function';\n\n      for (var i = 0, l = lines.length; i < l; i++) {\n        line = lines[i];\n        line = trimLeft ? line.trimLeft() : line.trim();\n        lineLength = line.length;\n        if (lineLength === 0) continue;\n        lineFirstChar = line.charAt(0); // @todo invoke passed in handler if any\n\n        if (lineFirstChar === '#') continue;\n\n        if (lineFirstChar === 'v') {\n          var data = line.split(/\\s+/);\n\n          switch (data[0]) {\n            case 'v':\n              state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n\n              if (data.length >= 7) {\n                state.colors.push(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6]));\n              } else {\n                // if no colors are defined, add placeholders so color and vertex indices match\n                state.colors.push(undefined, undefined, undefined);\n              }\n\n              break;\n\n            case 'vn':\n              state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n              break;\n\n            case 'vt':\n              state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n              break;\n          }\n        } else if (lineFirstChar === 'f') {\n          var lineData = line.substr(1).trim();\n          var vertexData = lineData.split(/\\s+/);\n          var faceVertices = []; // Parse the face vertex data into an easy to work with format\n\n          for (var j = 0, jl = vertexData.length; j < jl; j++) {\n            var vertex = vertexData[j];\n\n            if (vertex.length > 0) {\n              var vertexParts = vertex.split('/');\n              faceVertices.push(vertexParts);\n            }\n          } // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\n          var v1 = faceVertices[0];\n\n          for (var _j = 1, _jl = faceVertices.length - 1; _j < _jl; _j++) {\n            var v2 = faceVertices[_j];\n            var v3 = faceVertices[_j + 1];\n            state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\n          }\n        } else if (lineFirstChar === 'l') {\n          var lineParts = line.substring(1).trim().split(' ');\n          var lineVertices = [],\n              lineUVs = [];\n\n          if (line.indexOf('/') === -1) {\n            lineVertices = lineParts;\n          } else {\n            for (var li = 0, llen = lineParts.length; li < llen; li++) {\n              var parts = lineParts[li].split('/');\n              if (parts[0] !== '') lineVertices.push(parts[0]);\n              if (parts[1] !== '') lineUVs.push(parts[1]);\n            }\n          }\n\n          state.addLineGeometry(lineVertices, lineUVs);\n        } else if (lineFirstChar === 'p') {\n          var lineData = line.substr(1).trim();\n          var pointData = lineData.split(' ');\n          state.addPointGeometry(pointData);\n        } else if ((result = object_pattern.exec(line)) !== null) {\n          // o object_name\n          // or\n          // g group_name\n          // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n          // var name = result[ 0 ].substr( 1 ).trim();\n          var name = (' ' + result[0].substr(1).trim()).substr(1);\n          state.startObject(name);\n        } else if (material_use_pattern.test(line)) {\n          // material\n          state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n        } else if (material_library_pattern.test(line)) {\n          // mtl file\n          state.materialLibraries.push(line.substring(7).trim());\n        } else if (map_use_pattern.test(line)) {\n          // the line is parsed but ignored since the loader assumes textures are defined MTL files\n          // (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n          console.warn('THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.');\n        } else if (lineFirstChar === 's') {\n          result = line.split(' '); // smooth shading\n          // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n          // but does not define a usemtl for each face set.\n          // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n          // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n          // where explicit usemtl defines geometry groups.\n          // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n          /*\n           * http://paulbourke.net/dataformats/obj/\n           * or\n           * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n           *\n           * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n           * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n           * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n           * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n           * than 0.\"\n           */\n\n          if (result.length > 1) {\n            var value = result[1].trim().toLowerCase();\n            state.object.smooth = value !== '0' && value !== 'off';\n          } else {\n            // ZBrush can produce \"s\" lines #11707\n            state.object.smooth = true;\n          }\n\n          var material = state.object.currentMaterial();\n          if (material) material.smooth = state.object.smooth;\n        } else {\n          // Handle null terminated files without exception\n          if (line === '\\0') continue;\n          console.warn('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n        }\n      }\n\n      state.finalize();\n      var container = new Group();\n      container.materialLibraries = [].concat(state.materialLibraries);\n      var hasPrimitives = !(state.objects.length === 1 && state.objects[0].geometry.vertices.length === 0);\n\n      if (hasPrimitives === true) {\n        for (var _i = 0, _l2 = state.objects.length; _i < _l2; _i++) {\n          var object = state.objects[_i];\n          var geometry = object.geometry;\n          var materials = object.materials;\n          var isLine = geometry.type === 'Line';\n          var isPoints = geometry.type === 'Points';\n          var hasVertexColors = false; // Skip o/g line declarations that did not follow with any faces\n\n          if (geometry.vertices.length === 0) continue;\n          var buffergeometry = new BufferGeometry();\n          buffergeometry.setAttribute('position', new Float32BufferAttribute(geometry.vertices, 3));\n\n          if (geometry.normals.length > 0) {\n            buffergeometry.setAttribute('normal', new Float32BufferAttribute(geometry.normals, 3));\n          }\n\n          if (geometry.colors.length > 0) {\n            hasVertexColors = true;\n            buffergeometry.setAttribute('color', new Float32BufferAttribute(geometry.colors, 3));\n          }\n\n          if (geometry.hasUVIndices === true) {\n            buffergeometry.setAttribute('uv', new Float32BufferAttribute(geometry.uvs, 2));\n          } // Create materials\n\n\n          var createdMaterials = [];\n\n          for (var mi = 0, miLen = materials.length; mi < miLen; mi++) {\n            var sourceMaterial = materials[mi];\n            var materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n            var material = state.materials[materialHash];\n\n            if (this.materials !== null) {\n              material = this.materials.create(sourceMaterial.name); // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\n              if (isLine && material && !(material instanceof LineBasicMaterial)) {\n                var materialLine = new LineBasicMaterial();\n                Material.prototype.copy.call(materialLine, material);\n                materialLine.color.copy(material.color);\n                material = materialLine;\n              } else if (isPoints && material && !(material instanceof PointsMaterial)) {\n                var materialPoints = new PointsMaterial({\n                  size: 10,\n                  sizeAttenuation: false\n                });\n                Material.prototype.copy.call(materialPoints, material);\n                materialPoints.color.copy(material.color);\n                materialPoints.map = material.map;\n                material = materialPoints;\n              }\n            }\n\n            if (material === undefined) {\n              if (isLine) {\n                material = new LineBasicMaterial();\n              } else if (isPoints) {\n                material = new PointsMaterial({\n                  size: 1,\n                  sizeAttenuation: false\n                });\n              } else {\n                material = new MeshPhongMaterial();\n              }\n\n              material.name = sourceMaterial.name;\n              material.flatShading = sourceMaterial.smooth ? false : true;\n              material.vertexColors = hasVertexColors;\n              state.materials[materialHash] = material;\n            }\n\n            createdMaterials.push(material);\n          } // Create mesh\n\n\n          var mesh;\n\n          if (createdMaterials.length > 1) {\n            for (var _mi = 0, _miLen = materials.length; _mi < _miLen; _mi++) {\n              var sourceMaterial = materials[_mi];\n              buffergeometry.addGroup(sourceMaterial.groupStart, sourceMaterial.groupCount, _mi);\n            }\n\n            if (isLine) {\n              mesh = new LineSegments(buffergeometry, createdMaterials);\n            } else if (isPoints) {\n              mesh = new Points(buffergeometry, createdMaterials);\n            } else {\n              mesh = new Mesh(buffergeometry, createdMaterials);\n            }\n          } else {\n            if (isLine) {\n              mesh = new LineSegments(buffergeometry, createdMaterials[0]);\n            } else if (isPoints) {\n              mesh = new Points(buffergeometry, createdMaterials[0]);\n            } else {\n              mesh = new Mesh(buffergeometry, createdMaterials[0]);\n            }\n          }\n\n          mesh.name = object.name;\n          container.add(mesh);\n        }\n      } else {\n        // if there is only the default parser state object with no geometry data, interpret data as point cloud\n        if (state.vertices.length > 0) {\n          var material = new PointsMaterial({\n            size: 1,\n            sizeAttenuation: false\n          });\n          var buffergeometry = new BufferGeometry();\n          buffergeometry.setAttribute('position', new Float32BufferAttribute(state.vertices, 3));\n\n          if (state.colors.length > 0 && state.colors[0] !== undefined) {\n            buffergeometry.setAttribute('color', new Float32BufferAttribute(state.colors, 3));\n            material.vertexColors = true;\n          }\n\n          var points = new Points(buffergeometry, material);\n          container.add(points);\n        }\n      }\n\n      return container;\n    }\n  });\n  return OBJLoader;\n}();\n\nexport { OBJLoader };","map":{"version":3,"names":["Vector3","Loader","FileLoader","Group","BufferGeometry","Float32BufferAttribute","LineBasicMaterial","Material","PointsMaterial","MeshPhongMaterial","LineSegments","Points","Mesh","OBJLoader","object_pattern","material_library_pattern","material_use_pattern","map_use_pattern","vA","vB","vC","ab","cb","ParserState","state","objects","object","vertices","normals","colors","uvs","materials","materialLibraries","startObject","name","fromDeclaration","previousMaterial","currentMaterial","undefined","_finalize","geometry","hasUVIndices","smooth","startMaterial","libraries","previous","inherited","groupCount","splice","index","material","length","mtllib","Array","isArray","groupStart","groupEnd","clone","cloned","bind","push","end","lastMultiMaterial","mi","declared","finalize","parseVertexIndex","value","len","parseInt","parseNormalIndex","parseUVIndex","addVertex","a","b","c","src","dst","addVertexPoint","addVertexLine","addNormal","addFaceNormal","fromArray","subVectors","cross","normalize","x","y","z","addColor","addUV","addDefaultUV","addUVLine","addFace","ua","ub","uc","na","nb","nc","vLen","ia","ib","ic","nLen","uvLen","addPointGeometry","type","vi","l","addLineGeometry","uvi","manager","call","prototype","Object","assign","create","constructor","load","url","onLoad","onProgress","onError","scope","loader","setPath","path","setRequestHeader","requestHeader","setWithCredentials","withCredentials","text","parse","e","console","error","itemError","setMaterials","indexOf","replace","lines","split","line","lineFirstChar","lineLength","result","trimLeft","i","trim","charAt","data","parseFloat","lineData","substr","vertexData","faceVertices","j","jl","vertex","vertexParts","v1","v2","v3","lineParts","substring","lineVertices","lineUVs","li","llen","parts","pointData","exec","test","warn","toLowerCase","container","concat","hasPrimitives","isLine","isPoints","hasVertexColors","buffergeometry","setAttribute","createdMaterials","miLen","sourceMaterial","materialHash","materialLine","copy","color","materialPoints","size","sizeAttenuation","map","flatShading","vertexColors","mesh","addGroup","add","points"],"sources":["/Users/98yaroslavgorban/Desktop/gltfjsx-forked/node_modules/three-stdlib/loaders/OBJLoader.js"],"sourcesContent":["import { Vector3, Loader, FileLoader, Group, BufferGeometry, Float32BufferAttribute, LineBasicMaterial, Material, PointsMaterial, MeshPhongMaterial, LineSegments, Points, Mesh } from 'three';\n\nvar OBJLoader = function () {\n  // o object_name | g group_name\n  var object_pattern = /^[og]\\s*(.+)?/; // mtllib file_reference\n\n  var material_library_pattern = /^mtllib /; // usemtl material_name\n\n  var material_use_pattern = /^usemtl /; // usemap map_name\n\n  var map_use_pattern = /^usemap /;\n  var vA = new Vector3();\n  var vB = new Vector3();\n  var vC = new Vector3();\n  var ab = new Vector3();\n  var cb = new Vector3();\n\n  function ParserState() {\n    var state = {\n      objects: [],\n      object: {},\n      vertices: [],\n      normals: [],\n      colors: [],\n      uvs: [],\n      materials: {},\n      materialLibraries: [],\n      startObject: function (name, fromDeclaration) {\n        // If the current object (initial from reset) is not from a g/o declaration in the parsed\n        // file. We need to use it for the first parsed g/o to keep things in sync.\n        if (this.object && this.object.fromDeclaration === false) {\n          this.object.name = name;\n          this.object.fromDeclaration = fromDeclaration !== false;\n          return;\n        }\n\n        var previousMaterial = this.object && typeof this.object.currentMaterial === 'function' ? this.object.currentMaterial() : undefined;\n\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n\n        this.object = {\n          name: name || '',\n          fromDeclaration: fromDeclaration !== false,\n          geometry: {\n            vertices: [],\n            normals: [],\n            colors: [],\n            uvs: [],\n            hasUVIndices: false\n          },\n          materials: [],\n          smooth: true,\n          startMaterial: function (name, libraries) {\n            var previous = this._finalize(false); // New usemtl declaration overwrites an inherited material, except if faces were declared\n            // after the material, then it must be preserved for proper MultiMaterial continuation.\n\n\n            if (previous && (previous.inherited || previous.groupCount <= 0)) {\n              this.materials.splice(previous.index, 1);\n            }\n\n            var material = {\n              index: this.materials.length,\n              name: name || '',\n              mtllib: Array.isArray(libraries) && libraries.length > 0 ? libraries[libraries.length - 1] : '',\n              smooth: previous !== undefined ? previous.smooth : this.smooth,\n              groupStart: previous !== undefined ? previous.groupEnd : 0,\n              groupEnd: -1,\n              groupCount: -1,\n              inherited: false,\n              clone: function (index) {\n                var cloned = {\n                  index: typeof index === 'number' ? index : this.index,\n                  name: this.name,\n                  mtllib: this.mtllib,\n                  smooth: this.smooth,\n                  groupStart: 0,\n                  groupEnd: -1,\n                  groupCount: -1,\n                  inherited: false\n                };\n                cloned.clone = this.clone.bind(cloned);\n                return cloned;\n              }\n            };\n            this.materials.push(material);\n            return material;\n          },\n          currentMaterial: function () {\n            if (this.materials.length > 0) {\n              return this.materials[this.materials.length - 1];\n            }\n\n            return undefined;\n          },\n          _finalize: function (end) {\n            var lastMultiMaterial = this.currentMaterial();\n\n            if (lastMultiMaterial && lastMultiMaterial.groupEnd === -1) {\n              lastMultiMaterial.groupEnd = this.geometry.vertices.length / 3;\n              lastMultiMaterial.groupCount = lastMultiMaterial.groupEnd - lastMultiMaterial.groupStart;\n              lastMultiMaterial.inherited = false;\n            } // Ignore objects tail materials if no face declarations followed them before a new o/g started.\n\n\n            if (end && this.materials.length > 1) {\n              for (let mi = this.materials.length - 1; mi >= 0; mi--) {\n                if (this.materials[mi].groupCount <= 0) {\n                  this.materials.splice(mi, 1);\n                }\n              }\n            } // Guarantee at least one empty material, this makes the creation later more straight forward.\n\n\n            if (end && this.materials.length === 0) {\n              this.materials.push({\n                name: '',\n                smooth: this.smooth\n              });\n            }\n\n            return lastMultiMaterial;\n          }\n        }; // Inherit previous objects material.\n        // Spec tells us that a declared material must be set to all objects until a new material is declared.\n        // If a usemtl declaration is encountered while this new object is being parsed, it will\n        // overwrite the inherited material. Exception being that there was already face declarations\n        // to the inherited material, then it will be preserved for proper MultiMaterial continuation.\n\n        if (previousMaterial && previousMaterial.name && typeof previousMaterial.clone === 'function') {\n          var declared = previousMaterial.clone(0);\n          declared.inherited = true;\n          this.object.materials.push(declared);\n        }\n\n        this.objects.push(this.object);\n      },\n      finalize: function () {\n        if (this.object && typeof this.object._finalize === 'function') {\n          this.object._finalize(true);\n        }\n      },\n      parseVertexIndex: function (value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n      parseNormalIndex: function (value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 3) * 3;\n      },\n      parseUVIndex: function (value, len) {\n        var index = parseInt(value, 10);\n        return (index >= 0 ? index - 1 : index + len / 2) * 2;\n      },\n      addVertex: function (a, b, c) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addVertexPoint: function (a) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n      addVertexLine: function (a) {\n        var src = this.vertices;\n        var dst = this.object.geometry.vertices;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n      },\n      addNormal: function (a, b, c) {\n        var src = this.normals;\n        var dst = this.object.geometry.normals;\n        dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addFaceNormal: function (a, b, c) {\n        var src = this.vertices;\n        var dst = this.object.geometry.normals;\n        vA.fromArray(src, a);\n        vB.fromArray(src, b);\n        vC.fromArray(src, c);\n        cb.subVectors(vC, vB);\n        ab.subVectors(vA, vB);\n        cb.cross(ab);\n        cb.normalize();\n        dst.push(cb.x, cb.y, cb.z);\n        dst.push(cb.x, cb.y, cb.z);\n        dst.push(cb.x, cb.y, cb.z);\n      },\n      addColor: function (a, b, c) {\n        var src = this.colors;\n        var dst = this.object.geometry.colors;\n        if (src[a] !== undefined) dst.push(src[a + 0], src[a + 1], src[a + 2]);\n        if (src[b] !== undefined) dst.push(src[b + 0], src[b + 1], src[b + 2]);\n        if (src[c] !== undefined) dst.push(src[c + 0], src[c + 1], src[c + 2]);\n      },\n      addUV: function (a, b, c) {\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n        dst.push(src[a + 0], src[a + 1]);\n        dst.push(src[b + 0], src[b + 1]);\n        dst.push(src[c + 0], src[c + 1]);\n      },\n      addDefaultUV: function () {\n        var dst = this.object.geometry.uvs;\n        dst.push(0, 0);\n        dst.push(0, 0);\n        dst.push(0, 0);\n      },\n      addUVLine: function (a) {\n        var src = this.uvs;\n        var dst = this.object.geometry.uvs;\n        dst.push(src[a + 0], src[a + 1]);\n      },\n      addFace: function (a, b, c, ua, ub, uc, na, nb, nc) {\n        var vLen = this.vertices.length;\n        var ia = this.parseVertexIndex(a, vLen);\n        var ib = this.parseVertexIndex(b, vLen);\n        var ic = this.parseVertexIndex(c, vLen);\n        this.addVertex(ia, ib, ic);\n        this.addColor(ia, ib, ic); // normals\n\n        if (na !== undefined && na !== '') {\n          var nLen = this.normals.length;\n          ia = this.parseNormalIndex(na, nLen);\n          ib = this.parseNormalIndex(nb, nLen);\n          ic = this.parseNormalIndex(nc, nLen);\n          this.addNormal(ia, ib, ic);\n        } else {\n          this.addFaceNormal(ia, ib, ic);\n        } // uvs\n\n\n        if (ua !== undefined && ua !== '') {\n          var uvLen = this.uvs.length;\n          ia = this.parseUVIndex(ua, uvLen);\n          ib = this.parseUVIndex(ub, uvLen);\n          ic = this.parseUVIndex(uc, uvLen);\n          this.addUV(ia, ib, ic);\n          this.object.geometry.hasUVIndices = true;\n        } else {\n          // add placeholder values (for inconsistent face definitions)\n          this.addDefaultUV();\n        }\n      },\n      addPointGeometry: function (vertices) {\n        this.object.geometry.type = 'Points';\n        var vLen = this.vertices.length;\n\n        for (let vi = 0, l = vertices.length; vi < l; vi++) {\n          var index = this.parseVertexIndex(vertices[vi], vLen);\n          this.addVertexPoint(index);\n          this.addColor(index);\n        }\n      },\n      addLineGeometry: function (vertices, uvs) {\n        this.object.geometry.type = 'Line';\n        var vLen = this.vertices.length;\n        var uvLen = this.uvs.length;\n\n        for (let vi = 0, l = vertices.length; vi < l; vi++) {\n          this.addVertexLine(this.parseVertexIndex(vertices[vi], vLen));\n        }\n\n        for (let uvi = 0, l = uvs.length; uvi < l; uvi++) {\n          this.addUVLine(this.parseUVIndex(uvs[uvi], uvLen));\n        }\n      }\n    };\n    state.startObject('', false);\n    return state;\n  } //\n\n\n  function OBJLoader(manager) {\n    Loader.call(this, manager);\n    this.materials = null;\n  }\n\n  OBJLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n    constructor: OBJLoader,\n    load: function (url, onLoad, onProgress, onError) {\n      var scope = this;\n      var loader = new FileLoader(this.manager);\n      loader.setPath(this.path);\n      loader.setRequestHeader(this.requestHeader);\n      loader.setWithCredentials(this.withCredentials);\n      loader.load(url, function (text) {\n        try {\n          onLoad(scope.parse(text));\n        } catch (e) {\n          if (onError) {\n            onError(e);\n          } else {\n            console.error(e);\n          }\n\n          scope.manager.itemError(url);\n        }\n      }, onProgress, onError);\n    },\n    setMaterials: function (materials) {\n      this.materials = materials;\n      return this;\n    },\n    parse: function (text) {\n      var state = new ParserState();\n\n      if (text.indexOf('\\r\\n') !== -1) {\n        // This is faster than String.split with regex that splits on both\n        text = text.replace(/\\r\\n/g, '\\n');\n      }\n\n      if (text.indexOf('\\\\\\n') !== -1) {\n        // join lines separated by a line continuation character (\\)\n        text = text.replace(/\\\\\\n/g, '');\n      }\n\n      var lines = text.split('\\n');\n      var line = '',\n          lineFirstChar = '';\n      var lineLength = 0;\n      var result = []; // Faster to just trim left side of the line. Use if available.\n\n      var trimLeft = typeof ''.trimLeft === 'function';\n\n      for (let i = 0, l = lines.length; i < l; i++) {\n        line = lines[i];\n        line = trimLeft ? line.trimLeft() : line.trim();\n        lineLength = line.length;\n        if (lineLength === 0) continue;\n        lineFirstChar = line.charAt(0); // @todo invoke passed in handler if any\n\n        if (lineFirstChar === '#') continue;\n\n        if (lineFirstChar === 'v') {\n          var data = line.split(/\\s+/);\n\n          switch (data[0]) {\n            case 'v':\n              state.vertices.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n\n              if (data.length >= 7) {\n                state.colors.push(parseFloat(data[4]), parseFloat(data[5]), parseFloat(data[6]));\n              } else {\n                // if no colors are defined, add placeholders so color and vertex indices match\n                state.colors.push(undefined, undefined, undefined);\n              }\n\n              break;\n\n            case 'vn':\n              state.normals.push(parseFloat(data[1]), parseFloat(data[2]), parseFloat(data[3]));\n              break;\n\n            case 'vt':\n              state.uvs.push(parseFloat(data[1]), parseFloat(data[2]));\n              break;\n          }\n        } else if (lineFirstChar === 'f') {\n          var lineData = line.substr(1).trim();\n          var vertexData = lineData.split(/\\s+/);\n          var faceVertices = []; // Parse the face vertex data into an easy to work with format\n\n          for (let j = 0, jl = vertexData.length; j < jl; j++) {\n            var vertex = vertexData[j];\n\n            if (vertex.length > 0) {\n              var vertexParts = vertex.split('/');\n              faceVertices.push(vertexParts);\n            }\n          } // Draw an edge between the first vertex and all subsequent vertices to form an n-gon\n\n\n          var v1 = faceVertices[0];\n\n          for (let j = 1, jl = faceVertices.length - 1; j < jl; j++) {\n            var v2 = faceVertices[j];\n            var v3 = faceVertices[j + 1];\n            state.addFace(v1[0], v2[0], v3[0], v1[1], v2[1], v3[1], v1[2], v2[2], v3[2]);\n          }\n        } else if (lineFirstChar === 'l') {\n          var lineParts = line.substring(1).trim().split(' ');\n          var lineVertices = [],\n              lineUVs = [];\n\n          if (line.indexOf('/') === -1) {\n            lineVertices = lineParts;\n          } else {\n            for (let li = 0, llen = lineParts.length; li < llen; li++) {\n              var parts = lineParts[li].split('/');\n              if (parts[0] !== '') lineVertices.push(parts[0]);\n              if (parts[1] !== '') lineUVs.push(parts[1]);\n            }\n          }\n\n          state.addLineGeometry(lineVertices, lineUVs);\n        } else if (lineFirstChar === 'p') {\n          var lineData = line.substr(1).trim();\n          var pointData = lineData.split(' ');\n          state.addPointGeometry(pointData);\n        } else if ((result = object_pattern.exec(line)) !== null) {\n          // o object_name\n          // or\n          // g group_name\n          // WORKAROUND: https://bugs.chromium.org/p/v8/issues/detail?id=2869\n          // var name = result[ 0 ].substr( 1 ).trim();\n          var name = (' ' + result[0].substr(1).trim()).substr(1);\n          state.startObject(name);\n        } else if (material_use_pattern.test(line)) {\n          // material\n          state.object.startMaterial(line.substring(7).trim(), state.materialLibraries);\n        } else if (material_library_pattern.test(line)) {\n          // mtl file\n          state.materialLibraries.push(line.substring(7).trim());\n        } else if (map_use_pattern.test(line)) {\n          // the line is parsed but ignored since the loader assumes textures are defined MTL files\n          // (according to https://www.okino.com/conv/imp_wave.htm, 'usemap' is the old-style Wavefront texture reference method)\n          console.warn('THREE.OBJLoader: Rendering identifier \"usemap\" not supported. Textures must be defined in MTL files.');\n        } else if (lineFirstChar === 's') {\n          result = line.split(' '); // smooth shading\n          // @todo Handle files that have varying smooth values for a set of faces inside one geometry,\n          // but does not define a usemtl for each face set.\n          // This should be detected and a dummy material created (later MultiMaterial and geometry groups).\n          // This requires some care to not create extra material on each smooth value for \"normal\" obj files.\n          // where explicit usemtl defines geometry groups.\n          // Example asset: examples/models/obj/cerberus/Cerberus.obj\n\n          /*\n           * http://paulbourke.net/dataformats/obj/\n           * or\n           * http://www.cs.utah.edu/~boulos/cs3505/obj_spec.pdf\n           *\n           * From chapter \"Grouping\" Syntax explanation \"s group_number\":\n           * \"group_number is the smoothing group number. To turn off smoothing groups, use a value of 0 or off.\n           * Polygonal elements use group numbers to put elements in different smoothing groups. For free-form\n           * surfaces, smoothing groups are either turned on or off; there is no difference between values greater\n           * than 0.\"\n           */\n\n          if (result.length > 1) {\n            var value = result[1].trim().toLowerCase();\n            state.object.smooth = value !== '0' && value !== 'off';\n          } else {\n            // ZBrush can produce \"s\" lines #11707\n            state.object.smooth = true;\n          }\n\n          var material = state.object.currentMaterial();\n          if (material) material.smooth = state.object.smooth;\n        } else {\n          // Handle null terminated files without exception\n          if (line === '\\0') continue;\n          console.warn('THREE.OBJLoader: Unexpected line: \"' + line + '\"');\n        }\n      }\n\n      state.finalize();\n      var container = new Group();\n      container.materialLibraries = [].concat(state.materialLibraries);\n      var hasPrimitives = !(state.objects.length === 1 && state.objects[0].geometry.vertices.length === 0);\n\n      if (hasPrimitives === true) {\n        for (let i = 0, l = state.objects.length; i < l; i++) {\n          var object = state.objects[i];\n          var geometry = object.geometry;\n          var materials = object.materials;\n          var isLine = geometry.type === 'Line';\n          var isPoints = geometry.type === 'Points';\n          var hasVertexColors = false; // Skip o/g line declarations that did not follow with any faces\n\n          if (geometry.vertices.length === 0) continue;\n          var buffergeometry = new BufferGeometry();\n          buffergeometry.setAttribute('position', new Float32BufferAttribute(geometry.vertices, 3));\n\n          if (geometry.normals.length > 0) {\n            buffergeometry.setAttribute('normal', new Float32BufferAttribute(geometry.normals, 3));\n          }\n\n          if (geometry.colors.length > 0) {\n            hasVertexColors = true;\n            buffergeometry.setAttribute('color', new Float32BufferAttribute(geometry.colors, 3));\n          }\n\n          if (geometry.hasUVIndices === true) {\n            buffergeometry.setAttribute('uv', new Float32BufferAttribute(geometry.uvs, 2));\n          } // Create materials\n\n\n          var createdMaterials = [];\n\n          for (let mi = 0, miLen = materials.length; mi < miLen; mi++) {\n            var sourceMaterial = materials[mi];\n            var materialHash = sourceMaterial.name + '_' + sourceMaterial.smooth + '_' + hasVertexColors;\n            var material = state.materials[materialHash];\n\n            if (this.materials !== null) {\n              material = this.materials.create(sourceMaterial.name); // mtl etc. loaders probably can't create line materials correctly, copy properties to a line material.\n\n              if (isLine && material && !(material instanceof LineBasicMaterial)) {\n                var materialLine = new LineBasicMaterial();\n                Material.prototype.copy.call(materialLine, material);\n                materialLine.color.copy(material.color);\n                material = materialLine;\n              } else if (isPoints && material && !(material instanceof PointsMaterial)) {\n                var materialPoints = new PointsMaterial({\n                  size: 10,\n                  sizeAttenuation: false\n                });\n                Material.prototype.copy.call(materialPoints, material);\n                materialPoints.color.copy(material.color);\n                materialPoints.map = material.map;\n                material = materialPoints;\n              }\n            }\n\n            if (material === undefined) {\n              if (isLine) {\n                material = new LineBasicMaterial();\n              } else if (isPoints) {\n                material = new PointsMaterial({\n                  size: 1,\n                  sizeAttenuation: false\n                });\n              } else {\n                material = new MeshPhongMaterial();\n              }\n\n              material.name = sourceMaterial.name;\n              material.flatShading = sourceMaterial.smooth ? false : true;\n              material.vertexColors = hasVertexColors;\n              state.materials[materialHash] = material;\n            }\n\n            createdMaterials.push(material);\n          } // Create mesh\n\n\n          var mesh;\n\n          if (createdMaterials.length > 1) {\n            for (let mi = 0, miLen = materials.length; mi < miLen; mi++) {\n              var sourceMaterial = materials[mi];\n              buffergeometry.addGroup(sourceMaterial.groupStart, sourceMaterial.groupCount, mi);\n            }\n\n            if (isLine) {\n              mesh = new LineSegments(buffergeometry, createdMaterials);\n            } else if (isPoints) {\n              mesh = new Points(buffergeometry, createdMaterials);\n            } else {\n              mesh = new Mesh(buffergeometry, createdMaterials);\n            }\n          } else {\n            if (isLine) {\n              mesh = new LineSegments(buffergeometry, createdMaterials[0]);\n            } else if (isPoints) {\n              mesh = new Points(buffergeometry, createdMaterials[0]);\n            } else {\n              mesh = new Mesh(buffergeometry, createdMaterials[0]);\n            }\n          }\n\n          mesh.name = object.name;\n          container.add(mesh);\n        }\n      } else {\n        // if there is only the default parser state object with no geometry data, interpret data as point cloud\n        if (state.vertices.length > 0) {\n          var material = new PointsMaterial({\n            size: 1,\n            sizeAttenuation: false\n          });\n          var buffergeometry = new BufferGeometry();\n          buffergeometry.setAttribute('position', new Float32BufferAttribute(state.vertices, 3));\n\n          if (state.colors.length > 0 && state.colors[0] !== undefined) {\n            buffergeometry.setAttribute('color', new Float32BufferAttribute(state.colors, 3));\n            material.vertexColors = true;\n          }\n\n          var points = new Points(buffergeometry, material);\n          container.add(points);\n        }\n      }\n\n      return container;\n    }\n  });\n  return OBJLoader;\n}();\n\nexport { OBJLoader };\n"],"mappings":"AAAA,SAASA,OAAT,EAAkBC,MAAlB,EAA0BC,UAA1B,EAAsCC,KAAtC,EAA6CC,cAA7C,EAA6DC,sBAA7D,EAAqFC,iBAArF,EAAwGC,QAAxG,EAAkHC,cAAlH,EAAkIC,iBAAlI,EAAqJC,YAArJ,EAAmKC,MAAnK,EAA2KC,IAA3K,QAAuL,OAAvL;;AAEA,IAAIC,SAAS,GAAG,YAAY;EAC1B;EACA,IAAIC,cAAc,GAAG,eAArB,CAF0B,CAEY;;EAEtC,IAAIC,wBAAwB,GAAG,UAA/B,CAJ0B,CAIiB;;EAE3C,IAAIC,oBAAoB,GAAG,UAA3B,CAN0B,CAMa;;EAEvC,IAAIC,eAAe,GAAG,UAAtB;EACA,IAAIC,EAAE,GAAG,IAAIlB,OAAJ,EAAT;EACA,IAAImB,EAAE,GAAG,IAAInB,OAAJ,EAAT;EACA,IAAIoB,EAAE,GAAG,IAAIpB,OAAJ,EAAT;EACA,IAAIqB,EAAE,GAAG,IAAIrB,OAAJ,EAAT;EACA,IAAIsB,EAAE,GAAG,IAAItB,OAAJ,EAAT;;EAEA,SAASuB,WAAT,GAAuB;IACrB,IAAIC,KAAK,GAAG;MACVC,OAAO,EAAE,EADC;MAEVC,MAAM,EAAE,EAFE;MAGVC,QAAQ,EAAE,EAHA;MAIVC,OAAO,EAAE,EAJC;MAKVC,MAAM,EAAE,EALE;MAMVC,GAAG,EAAE,EANK;MAOVC,SAAS,EAAE,EAPD;MAQVC,iBAAiB,EAAE,EART;MASVC,WAAW,EAAE,qBAAUC,IAAV,EAAgBC,eAAhB,EAAiC;QAC5C;QACA;QACA,IAAI,KAAKT,MAAL,IAAe,KAAKA,MAAL,CAAYS,eAAZ,KAAgC,KAAnD,EAA0D;UACxD,KAAKT,MAAL,CAAYQ,IAAZ,GAAmBA,IAAnB;UACA,KAAKR,MAAL,CAAYS,eAAZ,GAA8BA,eAAe,KAAK,KAAlD;UACA;QACD;;QAED,IAAIC,gBAAgB,GAAG,KAAKV,MAAL,IAAe,OAAO,KAAKA,MAAL,CAAYW,eAAnB,KAAuC,UAAtD,GAAmE,KAAKX,MAAL,CAAYW,eAAZ,EAAnE,GAAmGC,SAA1H;;QAEA,IAAI,KAAKZ,MAAL,IAAe,OAAO,KAAKA,MAAL,CAAYa,SAAnB,KAAiC,UAApD,EAAgE;UAC9D,KAAKb,MAAL,CAAYa,SAAZ,CAAsB,IAAtB;QACD;;QAED,KAAKb,MAAL,GAAc;UACZQ,IAAI,EAAEA,IAAI,IAAI,EADF;UAEZC,eAAe,EAAEA,eAAe,KAAK,KAFzB;UAGZK,QAAQ,EAAE;YACRb,QAAQ,EAAE,EADF;YAERC,OAAO,EAAE,EAFD;YAGRC,MAAM,EAAE,EAHA;YAIRC,GAAG,EAAE,EAJG;YAKRW,YAAY,EAAE;UALN,CAHE;UAUZV,SAAS,EAAE,EAVC;UAWZW,MAAM,EAAE,IAXI;UAYZC,aAAa,EAAE,uBAAUT,IAAV,EAAgBU,SAAhB,EAA2B;YACxC,IAAIC,QAAQ,GAAG,KAAKN,SAAL,CAAe,KAAf,CAAf,CADwC,CACF;YACtC;;;YAGA,IAAIM,QAAQ,KAAKA,QAAQ,CAACC,SAAT,IAAsBD,QAAQ,CAACE,UAAT,IAAuB,CAAlD,CAAZ,EAAkE;cAChE,KAAKhB,SAAL,CAAeiB,MAAf,CAAsBH,QAAQ,CAACI,KAA/B,EAAsC,CAAtC;YACD;;YAED,IAAIC,QAAQ,GAAG;cACbD,KAAK,EAAE,KAAKlB,SAAL,CAAeoB,MADT;cAEbjB,IAAI,EAAEA,IAAI,IAAI,EAFD;cAGbkB,MAAM,EAAEC,KAAK,CAACC,OAAN,CAAcV,SAAd,KAA4BA,SAAS,CAACO,MAAV,GAAmB,CAA/C,GAAmDP,SAAS,CAACA,SAAS,CAACO,MAAV,GAAmB,CAApB,CAA5D,GAAqF,EAHhF;cAIbT,MAAM,EAAEG,QAAQ,KAAKP,SAAb,GAAyBO,QAAQ,CAACH,MAAlC,GAA2C,KAAKA,MAJ3C;cAKba,UAAU,EAAEV,QAAQ,KAAKP,SAAb,GAAyBO,QAAQ,CAACW,QAAlC,GAA6C,CAL5C;cAMbA,QAAQ,EAAE,CAAC,CANE;cAObT,UAAU,EAAE,CAAC,CAPA;cAQbD,SAAS,EAAE,KARE;cASbW,KAAK,EAAE,eAAUR,KAAV,EAAiB;gBACtB,IAAIS,MAAM,GAAG;kBACXT,KAAK,EAAE,OAAOA,KAAP,KAAiB,QAAjB,GAA4BA,KAA5B,GAAoC,KAAKA,KADrC;kBAEXf,IAAI,EAAE,KAAKA,IAFA;kBAGXkB,MAAM,EAAE,KAAKA,MAHF;kBAIXV,MAAM,EAAE,KAAKA,MAJF;kBAKXa,UAAU,EAAE,CALD;kBAMXC,QAAQ,EAAE,CAAC,CANA;kBAOXT,UAAU,EAAE,CAAC,CAPF;kBAQXD,SAAS,EAAE;gBARA,CAAb;gBAUAY,MAAM,CAACD,KAAP,GAAe,KAAKA,KAAL,CAAWE,IAAX,CAAgBD,MAAhB,CAAf;gBACA,OAAOA,MAAP;cACD;YAtBY,CAAf;YAwBA,KAAK3B,SAAL,CAAe6B,IAAf,CAAoBV,QAApB;YACA,OAAOA,QAAP;UACD,CA/CW;UAgDZb,eAAe,EAAE,2BAAY;YAC3B,IAAI,KAAKN,SAAL,CAAeoB,MAAf,GAAwB,CAA5B,EAA+B;cAC7B,OAAO,KAAKpB,SAAL,CAAe,KAAKA,SAAL,CAAeoB,MAAf,GAAwB,CAAvC,CAAP;YACD;;YAED,OAAOb,SAAP;UACD,CAtDW;UAuDZC,SAAS,EAAE,mBAAUsB,GAAV,EAAe;YACxB,IAAIC,iBAAiB,GAAG,KAAKzB,eAAL,EAAxB;;YAEA,IAAIyB,iBAAiB,IAAIA,iBAAiB,CAACN,QAAlB,KAA+B,CAAC,CAAzD,EAA4D;cAC1DM,iBAAiB,CAACN,QAAlB,GAA6B,KAAKhB,QAAL,CAAcb,QAAd,CAAuBwB,MAAvB,GAAgC,CAA7D;cACAW,iBAAiB,CAACf,UAAlB,GAA+Be,iBAAiB,CAACN,QAAlB,GAA6BM,iBAAiB,CAACP,UAA9E;cACAO,iBAAiB,CAAChB,SAAlB,GAA8B,KAA9B;YACD,CAPuB,CAOtB;;;YAGF,IAAIe,GAAG,IAAI,KAAK9B,SAAL,CAAeoB,MAAf,GAAwB,CAAnC,EAAsC;cACpC,KAAK,IAAIY,EAAE,GAAG,KAAKhC,SAAL,CAAeoB,MAAf,GAAwB,CAAtC,EAAyCY,EAAE,IAAI,CAA/C,EAAkDA,EAAE,EAApD,EAAwD;gBACtD,IAAI,KAAKhC,SAAL,CAAegC,EAAf,EAAmBhB,UAAnB,IAAiC,CAArC,EAAwC;kBACtC,KAAKhB,SAAL,CAAeiB,MAAf,CAAsBe,EAAtB,EAA0B,CAA1B;gBACD;cACF;YACF,CAhBuB,CAgBtB;;;YAGF,IAAIF,GAAG,IAAI,KAAK9B,SAAL,CAAeoB,MAAf,KAA0B,CAArC,EAAwC;cACtC,KAAKpB,SAAL,CAAe6B,IAAf,CAAoB;gBAClB1B,IAAI,EAAE,EADY;gBAElBQ,MAAM,EAAE,KAAKA;cAFK,CAApB;YAID;;YAED,OAAOoB,iBAAP;UACD;QAlFW,CAAd,CAf4C,CAkGzC;QACH;QACA;QACA;QACA;;QAEA,IAAI1B,gBAAgB,IAAIA,gBAAgB,CAACF,IAArC,IAA6C,OAAOE,gBAAgB,CAACqB,KAAxB,KAAkC,UAAnF,EAA+F;UAC7F,IAAIO,QAAQ,GAAG5B,gBAAgB,CAACqB,KAAjB,CAAuB,CAAvB,CAAf;UACAO,QAAQ,CAAClB,SAAT,GAAqB,IAArB;UACA,KAAKpB,MAAL,CAAYK,SAAZ,CAAsB6B,IAAtB,CAA2BI,QAA3B;QACD;;QAED,KAAKvC,OAAL,CAAamC,IAAb,CAAkB,KAAKlC,MAAvB;MACD,CAxHS;MAyHVuC,QAAQ,EAAE,oBAAY;QACpB,IAAI,KAAKvC,MAAL,IAAe,OAAO,KAAKA,MAAL,CAAYa,SAAnB,KAAiC,UAApD,EAAgE;UAC9D,KAAKb,MAAL,CAAYa,SAAZ,CAAsB,IAAtB;QACD;MACF,CA7HS;MA8HV2B,gBAAgB,EAAE,0BAAUC,KAAV,EAAiBC,GAAjB,EAAsB;QACtC,IAAInB,KAAK,GAAGoB,QAAQ,CAACF,KAAD,EAAQ,EAAR,CAApB;QACA,OAAO,CAAClB,KAAK,IAAI,CAAT,GAAaA,KAAK,GAAG,CAArB,GAAyBA,KAAK,GAAGmB,GAAG,GAAG,CAAxC,IAA6C,CAApD;MACD,CAjIS;MAkIVE,gBAAgB,EAAE,0BAAUH,KAAV,EAAiBC,GAAjB,EAAsB;QACtC,IAAInB,KAAK,GAAGoB,QAAQ,CAACF,KAAD,EAAQ,EAAR,CAApB;QACA,OAAO,CAAClB,KAAK,IAAI,CAAT,GAAaA,KAAK,GAAG,CAArB,GAAyBA,KAAK,GAAGmB,GAAG,GAAG,CAAxC,IAA6C,CAApD;MACD,CArIS;MAsIVG,YAAY,EAAE,sBAAUJ,KAAV,EAAiBC,GAAjB,EAAsB;QAClC,IAAInB,KAAK,GAAGoB,QAAQ,CAACF,KAAD,EAAQ,EAAR,CAApB;QACA,OAAO,CAAClB,KAAK,IAAI,CAAT,GAAaA,KAAK,GAAG,CAArB,GAAyBA,KAAK,GAAGmB,GAAG,GAAG,CAAxC,IAA6C,CAApD;MACD,CAzIS;MA0IVI,SAAS,EAAE,mBAAUC,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;QAC5B,IAAIC,GAAG,GAAG,KAAKjD,QAAf;QACA,IAAIkD,GAAG,GAAG,KAAKnD,MAAL,CAAYc,QAAZ,CAAqBb,QAA/B;QACAkD,GAAG,CAACjB,IAAJ,CAASgB,GAAG,CAACH,CAAC,GAAG,CAAL,CAAZ,EAAqBG,GAAG,CAACH,CAAC,GAAG,CAAL,CAAxB,EAAiCG,GAAG,CAACH,CAAC,GAAG,CAAL,CAApC;QACAI,GAAG,CAACjB,IAAJ,CAASgB,GAAG,CAACF,CAAC,GAAG,CAAL,CAAZ,EAAqBE,GAAG,CAACF,CAAC,GAAG,CAAL,CAAxB,EAAiCE,GAAG,CAACF,CAAC,GAAG,CAAL,CAApC;QACAG,GAAG,CAACjB,IAAJ,CAASgB,GAAG,CAACD,CAAC,GAAG,CAAL,CAAZ,EAAqBC,GAAG,CAACD,CAAC,GAAG,CAAL,CAAxB,EAAiCC,GAAG,CAACD,CAAC,GAAG,CAAL,CAApC;MACD,CAhJS;MAiJVG,cAAc,EAAE,wBAAUL,CAAV,EAAa;QAC3B,IAAIG,GAAG,GAAG,KAAKjD,QAAf;QACA,IAAIkD,GAAG,GAAG,KAAKnD,MAAL,CAAYc,QAAZ,CAAqBb,QAA/B;QACAkD,GAAG,CAACjB,IAAJ,CAASgB,GAAG,CAACH,CAAC,GAAG,CAAL,CAAZ,EAAqBG,GAAG,CAACH,CAAC,GAAG,CAAL,CAAxB,EAAiCG,GAAG,CAACH,CAAC,GAAG,CAAL,CAApC;MACD,CArJS;MAsJVM,aAAa,EAAE,uBAAUN,CAAV,EAAa;QAC1B,IAAIG,GAAG,GAAG,KAAKjD,QAAf;QACA,IAAIkD,GAAG,GAAG,KAAKnD,MAAL,CAAYc,QAAZ,CAAqBb,QAA/B;QACAkD,GAAG,CAACjB,IAAJ,CAASgB,GAAG,CAACH,CAAC,GAAG,CAAL,CAAZ,EAAqBG,GAAG,CAACH,CAAC,GAAG,CAAL,CAAxB,EAAiCG,GAAG,CAACH,CAAC,GAAG,CAAL,CAApC;MACD,CA1JS;MA2JVO,SAAS,EAAE,mBAAUP,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;QAC5B,IAAIC,GAAG,GAAG,KAAKhD,OAAf;QACA,IAAIiD,GAAG,GAAG,KAAKnD,MAAL,CAAYc,QAAZ,CAAqBZ,OAA/B;QACAiD,GAAG,CAACjB,IAAJ,CAASgB,GAAG,CAACH,CAAC,GAAG,CAAL,CAAZ,EAAqBG,GAAG,CAACH,CAAC,GAAG,CAAL,CAAxB,EAAiCG,GAAG,CAACH,CAAC,GAAG,CAAL,CAApC;QACAI,GAAG,CAACjB,IAAJ,CAASgB,GAAG,CAACF,CAAC,GAAG,CAAL,CAAZ,EAAqBE,GAAG,CAACF,CAAC,GAAG,CAAL,CAAxB,EAAiCE,GAAG,CAACF,CAAC,GAAG,CAAL,CAApC;QACAG,GAAG,CAACjB,IAAJ,CAASgB,GAAG,CAACD,CAAC,GAAG,CAAL,CAAZ,EAAqBC,GAAG,CAACD,CAAC,GAAG,CAAL,CAAxB,EAAiCC,GAAG,CAACD,CAAC,GAAG,CAAL,CAApC;MACD,CAjKS;MAkKVM,aAAa,EAAE,uBAAUR,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;QAChC,IAAIC,GAAG,GAAG,KAAKjD,QAAf;QACA,IAAIkD,GAAG,GAAG,KAAKnD,MAAL,CAAYc,QAAZ,CAAqBZ,OAA/B;QACAV,EAAE,CAACgE,SAAH,CAAaN,GAAb,EAAkBH,CAAlB;QACAtD,EAAE,CAAC+D,SAAH,CAAaN,GAAb,EAAkBF,CAAlB;QACAtD,EAAE,CAAC8D,SAAH,CAAaN,GAAb,EAAkBD,CAAlB;QACArD,EAAE,CAAC6D,UAAH,CAAc/D,EAAd,EAAkBD,EAAlB;QACAE,EAAE,CAAC8D,UAAH,CAAcjE,EAAd,EAAkBC,EAAlB;QACAG,EAAE,CAAC8D,KAAH,CAAS/D,EAAT;QACAC,EAAE,CAAC+D,SAAH;QACAR,GAAG,CAACjB,IAAJ,CAAStC,EAAE,CAACgE,CAAZ,EAAehE,EAAE,CAACiE,CAAlB,EAAqBjE,EAAE,CAACkE,CAAxB;QACAX,GAAG,CAACjB,IAAJ,CAAStC,EAAE,CAACgE,CAAZ,EAAehE,EAAE,CAACiE,CAAlB,EAAqBjE,EAAE,CAACkE,CAAxB;QACAX,GAAG,CAACjB,IAAJ,CAAStC,EAAE,CAACgE,CAAZ,EAAehE,EAAE,CAACiE,CAAlB,EAAqBjE,EAAE,CAACkE,CAAxB;MACD,CA/KS;MAgLVC,QAAQ,EAAE,kBAAUhB,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;QAC3B,IAAIC,GAAG,GAAG,KAAK/C,MAAf;QACA,IAAIgD,GAAG,GAAG,KAAKnD,MAAL,CAAYc,QAAZ,CAAqBX,MAA/B;QACA,IAAI+C,GAAG,CAACH,CAAD,CAAH,KAAWnC,SAAf,EAA0BuC,GAAG,CAACjB,IAAJ,CAASgB,GAAG,CAACH,CAAC,GAAG,CAAL,CAAZ,EAAqBG,GAAG,CAACH,CAAC,GAAG,CAAL,CAAxB,EAAiCG,GAAG,CAACH,CAAC,GAAG,CAAL,CAApC;QAC1B,IAAIG,GAAG,CAACF,CAAD,CAAH,KAAWpC,SAAf,EAA0BuC,GAAG,CAACjB,IAAJ,CAASgB,GAAG,CAACF,CAAC,GAAG,CAAL,CAAZ,EAAqBE,GAAG,CAACF,CAAC,GAAG,CAAL,CAAxB,EAAiCE,GAAG,CAACF,CAAC,GAAG,CAAL,CAApC;QAC1B,IAAIE,GAAG,CAACD,CAAD,CAAH,KAAWrC,SAAf,EAA0BuC,GAAG,CAACjB,IAAJ,CAASgB,GAAG,CAACD,CAAC,GAAG,CAAL,CAAZ,EAAqBC,GAAG,CAACD,CAAC,GAAG,CAAL,CAAxB,EAAiCC,GAAG,CAACD,CAAC,GAAG,CAAL,CAApC;MAC3B,CAtLS;MAuLVe,KAAK,EAAE,eAAUjB,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmB;QACxB,IAAIC,GAAG,GAAG,KAAK9C,GAAf;QACA,IAAI+C,GAAG,GAAG,KAAKnD,MAAL,CAAYc,QAAZ,CAAqBV,GAA/B;QACA+C,GAAG,CAACjB,IAAJ,CAASgB,GAAG,CAACH,CAAC,GAAG,CAAL,CAAZ,EAAqBG,GAAG,CAACH,CAAC,GAAG,CAAL,CAAxB;QACAI,GAAG,CAACjB,IAAJ,CAASgB,GAAG,CAACF,CAAC,GAAG,CAAL,CAAZ,EAAqBE,GAAG,CAACF,CAAC,GAAG,CAAL,CAAxB;QACAG,GAAG,CAACjB,IAAJ,CAASgB,GAAG,CAACD,CAAC,GAAG,CAAL,CAAZ,EAAqBC,GAAG,CAACD,CAAC,GAAG,CAAL,CAAxB;MACD,CA7LS;MA8LVgB,YAAY,EAAE,wBAAY;QACxB,IAAId,GAAG,GAAG,KAAKnD,MAAL,CAAYc,QAAZ,CAAqBV,GAA/B;QACA+C,GAAG,CAACjB,IAAJ,CAAS,CAAT,EAAY,CAAZ;QACAiB,GAAG,CAACjB,IAAJ,CAAS,CAAT,EAAY,CAAZ;QACAiB,GAAG,CAACjB,IAAJ,CAAS,CAAT,EAAY,CAAZ;MACD,CAnMS;MAoMVgC,SAAS,EAAE,mBAAUnB,CAAV,EAAa;QACtB,IAAIG,GAAG,GAAG,KAAK9C,GAAf;QACA,IAAI+C,GAAG,GAAG,KAAKnD,MAAL,CAAYc,QAAZ,CAAqBV,GAA/B;QACA+C,GAAG,CAACjB,IAAJ,CAASgB,GAAG,CAACH,CAAC,GAAG,CAAL,CAAZ,EAAqBG,GAAG,CAACH,CAAC,GAAG,CAAL,CAAxB;MACD,CAxMS;MAyMVoB,OAAO,EAAE,iBAAUpB,CAAV,EAAaC,CAAb,EAAgBC,CAAhB,EAAmBmB,EAAnB,EAAuBC,EAAvB,EAA2BC,EAA3B,EAA+BC,EAA/B,EAAmCC,EAAnC,EAAuCC,EAAvC,EAA2C;QAClD,IAAIC,IAAI,GAAG,KAAKzE,QAAL,CAAcwB,MAAzB;QACA,IAAIkD,EAAE,GAAG,KAAKnC,gBAAL,CAAsBO,CAAtB,EAAyB2B,IAAzB,CAAT;QACA,IAAIE,EAAE,GAAG,KAAKpC,gBAAL,CAAsBQ,CAAtB,EAAyB0B,IAAzB,CAAT;QACA,IAAIG,EAAE,GAAG,KAAKrC,gBAAL,CAAsBS,CAAtB,EAAyByB,IAAzB,CAAT;QACA,KAAK5B,SAAL,CAAe6B,EAAf,EAAmBC,EAAnB,EAAuBC,EAAvB;QACA,KAAKd,QAAL,CAAcY,EAAd,EAAkBC,EAAlB,EAAsBC,EAAtB,EANkD,CAMvB;;QAE3B,IAAIN,EAAE,KAAK3D,SAAP,IAAoB2D,EAAE,KAAK,EAA/B,EAAmC;UACjC,IAAIO,IAAI,GAAG,KAAK5E,OAAL,CAAauB,MAAxB;UACAkD,EAAE,GAAG,KAAK/B,gBAAL,CAAsB2B,EAAtB,EAA0BO,IAA1B,CAAL;UACAF,EAAE,GAAG,KAAKhC,gBAAL,CAAsB4B,EAAtB,EAA0BM,IAA1B,CAAL;UACAD,EAAE,GAAG,KAAKjC,gBAAL,CAAsB6B,EAAtB,EAA0BK,IAA1B,CAAL;UACA,KAAKxB,SAAL,CAAeqB,EAAf,EAAmBC,EAAnB,EAAuBC,EAAvB;QACD,CAND,MAMO;UACL,KAAKtB,aAAL,CAAmBoB,EAAnB,EAAuBC,EAAvB,EAA2BC,EAA3B;QACD,CAhBiD,CAgBhD;;;QAGF,IAAIT,EAAE,KAAKxD,SAAP,IAAoBwD,EAAE,KAAK,EAA/B,EAAmC;UACjC,IAAIW,KAAK,GAAG,KAAK3E,GAAL,CAASqB,MAArB;UACAkD,EAAE,GAAG,KAAK9B,YAAL,CAAkBuB,EAAlB,EAAsBW,KAAtB,CAAL;UACAH,EAAE,GAAG,KAAK/B,YAAL,CAAkBwB,EAAlB,EAAsBU,KAAtB,CAAL;UACAF,EAAE,GAAG,KAAKhC,YAAL,CAAkByB,EAAlB,EAAsBS,KAAtB,CAAL;UACA,KAAKf,KAAL,CAAWW,EAAX,EAAeC,EAAf,EAAmBC,EAAnB;UACA,KAAK7E,MAAL,CAAYc,QAAZ,CAAqBC,YAArB,GAAoC,IAApC;QACD,CAPD,MAOO;UACL;UACA,KAAKkD,YAAL;QACD;MACF,CAvOS;MAwOVe,gBAAgB,EAAE,0BAAU/E,QAAV,EAAoB;QACpC,KAAKD,MAAL,CAAYc,QAAZ,CAAqBmE,IAArB,GAA4B,QAA5B;QACA,IAAIP,IAAI,GAAG,KAAKzE,QAAL,CAAcwB,MAAzB;;QAEA,KAAK,IAAIyD,EAAE,GAAG,CAAT,EAAYC,CAAC,GAAGlF,QAAQ,CAACwB,MAA9B,EAAsCyD,EAAE,GAAGC,CAA3C,EAA8CD,EAAE,EAAhD,EAAoD;UAClD,IAAI3D,KAAK,GAAG,KAAKiB,gBAAL,CAAsBvC,QAAQ,CAACiF,EAAD,CAA9B,EAAoCR,IAApC,CAAZ;UACA,KAAKtB,cAAL,CAAoB7B,KAApB;UACA,KAAKwC,QAAL,CAAcxC,KAAd;QACD;MACF,CAjPS;MAkPV6D,eAAe,EAAE,yBAAUnF,QAAV,EAAoBG,GAApB,EAAyB;QACxC,KAAKJ,MAAL,CAAYc,QAAZ,CAAqBmE,IAArB,GAA4B,MAA5B;QACA,IAAIP,IAAI,GAAG,KAAKzE,QAAL,CAAcwB,MAAzB;QACA,IAAIsD,KAAK,GAAG,KAAK3E,GAAL,CAASqB,MAArB;;QAEA,KAAK,IAAIyD,EAAE,GAAG,CAAT,EAAYC,CAAC,GAAGlF,QAAQ,CAACwB,MAA9B,EAAsCyD,EAAE,GAAGC,CAA3C,EAA8CD,EAAE,EAAhD,EAAoD;UAClD,KAAK7B,aAAL,CAAmB,KAAKb,gBAAL,CAAsBvC,QAAQ,CAACiF,EAAD,CAA9B,EAAoCR,IAApC,CAAnB;QACD;;QAED,KAAK,IAAIW,GAAG,GAAG,CAAV,EAAaF,EAAC,GAAG/E,GAAG,CAACqB,MAA1B,EAAkC4D,GAAG,GAAGF,EAAxC,EAA2CE,GAAG,EAA9C,EAAkD;UAChD,KAAKnB,SAAL,CAAe,KAAKrB,YAAL,CAAkBzC,GAAG,CAACiF,GAAD,CAArB,EAA4BN,KAA5B,CAAf;QACD;MACF;IA9PS,CAAZ;IAgQAjF,KAAK,CAACS,WAAN,CAAkB,EAAlB,EAAsB,KAAtB;IACA,OAAOT,KAAP;EACD,CAlRyB,CAkRxB;;;EAGF,SAASX,SAAT,CAAmBmG,OAAnB,EAA4B;IAC1B/G,MAAM,CAACgH,IAAP,CAAY,IAAZ,EAAkBD,OAAlB;IACA,KAAKjF,SAAL,GAAiB,IAAjB;EACD;;EAEDlB,SAAS,CAACqG,SAAV,GAAsBC,MAAM,CAACC,MAAP,CAAcD,MAAM,CAACE,MAAP,CAAcpH,MAAM,CAACiH,SAArB,CAAd,EAA+C;IACnEI,WAAW,EAAEzG,SADsD;IAEnE0G,IAAI,EAAE,cAAUC,GAAV,EAAeC,MAAf,EAAuBC,UAAvB,EAAmCC,OAAnC,EAA4C;MAChD,IAAIC,KAAK,GAAG,IAAZ;MACA,IAAIC,MAAM,GAAG,IAAI3H,UAAJ,CAAe,KAAK8G,OAApB,CAAb;MACAa,MAAM,CAACC,OAAP,CAAe,KAAKC,IAApB;MACAF,MAAM,CAACG,gBAAP,CAAwB,KAAKC,aAA7B;MACAJ,MAAM,CAACK,kBAAP,CAA0B,KAAKC,eAA/B;MACAN,MAAM,CAACN,IAAP,CAAYC,GAAZ,EAAiB,UAAUY,IAAV,EAAgB;QAC/B,IAAI;UACFX,MAAM,CAACG,KAAK,CAACS,KAAN,CAAYD,IAAZ,CAAD,CAAN;QACD,CAFD,CAEE,OAAOE,CAAP,EAAU;UACV,IAAIX,OAAJ,EAAa;YACXA,OAAO,CAACW,CAAD,CAAP;UACD,CAFD,MAEO;YACLC,OAAO,CAACC,KAAR,CAAcF,CAAd;UACD;;UAEDV,KAAK,CAACZ,OAAN,CAAcyB,SAAd,CAAwBjB,GAAxB;QACD;MACF,CAZD,EAYGE,UAZH,EAYeC,OAZf;IAaD,CArBkE;IAsBnEe,YAAY,EAAE,sBAAU3G,SAAV,EAAqB;MACjC,KAAKA,SAAL,GAAiBA,SAAjB;MACA,OAAO,IAAP;IACD,CAzBkE;IA0BnEsG,KAAK,EAAE,eAAUD,IAAV,EAAgB;MACrB,IAAI5G,KAAK,GAAG,IAAID,WAAJ,EAAZ;;MAEA,IAAI6G,IAAI,CAACO,OAAL,CAAa,MAAb,MAAyB,CAAC,CAA9B,EAAiC;QAC/B;QACAP,IAAI,GAAGA,IAAI,CAACQ,OAAL,CAAa,OAAb,EAAsB,IAAtB,CAAP;MACD;;MAED,IAAIR,IAAI,CAACO,OAAL,CAAa,MAAb,MAAyB,CAAC,CAA9B,EAAiC;QAC/B;QACAP,IAAI,GAAGA,IAAI,CAACQ,OAAL,CAAa,OAAb,EAAsB,EAAtB,CAAP;MACD;;MAED,IAAIC,KAAK,GAAGT,IAAI,CAACU,KAAL,CAAW,IAAX,CAAZ;MACA,IAAIC,IAAI,GAAG,EAAX;MAAA,IACIC,aAAa,GAAG,EADpB;MAEA,IAAIC,UAAU,GAAG,CAAjB;MACA,IAAIC,MAAM,GAAG,EAAb,CAjBqB,CAiBJ;;MAEjB,IAAIC,QAAQ,GAAG,OAAO,GAAGA,QAAV,KAAuB,UAAtC;;MAEA,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWvC,CAAC,GAAGgC,KAAK,CAAC1F,MAA1B,EAAkCiG,CAAC,GAAGvC,CAAtC,EAAyCuC,CAAC,EAA1C,EAA8C;QAC5CL,IAAI,GAAGF,KAAK,CAACO,CAAD,CAAZ;QACAL,IAAI,GAAGI,QAAQ,GAAGJ,IAAI,CAACI,QAAL,EAAH,GAAqBJ,IAAI,CAACM,IAAL,EAApC;QACAJ,UAAU,GAAGF,IAAI,CAAC5F,MAAlB;QACA,IAAI8F,UAAU,KAAK,CAAnB,EAAsB;QACtBD,aAAa,GAAGD,IAAI,CAACO,MAAL,CAAY,CAAZ,CAAhB,CAL4C,CAKZ;;QAEhC,IAAIN,aAAa,KAAK,GAAtB,EAA2B;;QAE3B,IAAIA,aAAa,KAAK,GAAtB,EAA2B;UACzB,IAAIO,IAAI,GAAGR,IAAI,CAACD,KAAL,CAAW,KAAX,CAAX;;UAEA,QAAQS,IAAI,CAAC,CAAD,CAAZ;YACE,KAAK,GAAL;cACE/H,KAAK,CAACG,QAAN,CAAeiC,IAAf,CAAoB4F,UAAU,CAACD,IAAI,CAAC,CAAD,CAAL,CAA9B,EAAyCC,UAAU,CAACD,IAAI,CAAC,CAAD,CAAL,CAAnD,EAA8DC,UAAU,CAACD,IAAI,CAAC,CAAD,CAAL,CAAxE;;cAEA,IAAIA,IAAI,CAACpG,MAAL,IAAe,CAAnB,EAAsB;gBACpB3B,KAAK,CAACK,MAAN,CAAa+B,IAAb,CAAkB4F,UAAU,CAACD,IAAI,CAAC,CAAD,CAAL,CAA5B,EAAuCC,UAAU,CAACD,IAAI,CAAC,CAAD,CAAL,CAAjD,EAA4DC,UAAU,CAACD,IAAI,CAAC,CAAD,CAAL,CAAtE;cACD,CAFD,MAEO;gBACL;gBACA/H,KAAK,CAACK,MAAN,CAAa+B,IAAb,CAAkBtB,SAAlB,EAA6BA,SAA7B,EAAwCA,SAAxC;cACD;;cAED;;YAEF,KAAK,IAAL;cACEd,KAAK,CAACI,OAAN,CAAcgC,IAAd,CAAmB4F,UAAU,CAACD,IAAI,CAAC,CAAD,CAAL,CAA7B,EAAwCC,UAAU,CAACD,IAAI,CAAC,CAAD,CAAL,CAAlD,EAA6DC,UAAU,CAACD,IAAI,CAAC,CAAD,CAAL,CAAvE;cACA;;YAEF,KAAK,IAAL;cACE/H,KAAK,CAACM,GAAN,CAAU8B,IAAV,CAAe4F,UAAU,CAACD,IAAI,CAAC,CAAD,CAAL,CAAzB,EAAoCC,UAAU,CAACD,IAAI,CAAC,CAAD,CAAL,CAA9C;cACA;UAnBJ;QAqBD,CAxBD,MAwBO,IAAIP,aAAa,KAAK,GAAtB,EAA2B;UAChC,IAAIS,QAAQ,GAAGV,IAAI,CAACW,MAAL,CAAY,CAAZ,EAAeL,IAAf,EAAf;UACA,IAAIM,UAAU,GAAGF,QAAQ,CAACX,KAAT,CAAe,KAAf,CAAjB;UACA,IAAIc,YAAY,GAAG,EAAnB,CAHgC,CAGT;;UAEvB,KAAK,IAAIC,CAAC,GAAG,CAAR,EAAWC,EAAE,GAAGH,UAAU,CAACxG,MAAhC,EAAwC0G,CAAC,GAAGC,EAA5C,EAAgDD,CAAC,EAAjD,EAAqD;YACnD,IAAIE,MAAM,GAAGJ,UAAU,CAACE,CAAD,CAAvB;;YAEA,IAAIE,MAAM,CAAC5G,MAAP,GAAgB,CAApB,EAAuB;cACrB,IAAI6G,WAAW,GAAGD,MAAM,CAACjB,KAAP,CAAa,GAAb,CAAlB;cACAc,YAAY,CAAChG,IAAb,CAAkBoG,WAAlB;YACD;UACF,CAZ+B,CAY9B;;;UAGF,IAAIC,EAAE,GAAGL,YAAY,CAAC,CAAD,CAArB;;UAEA,KAAK,IAAIC,EAAC,GAAG,CAAR,EAAWC,GAAE,GAAGF,YAAY,CAACzG,MAAb,GAAsB,CAA3C,EAA8C0G,EAAC,GAAGC,GAAlD,EAAsDD,EAAC,EAAvD,EAA2D;YACzD,IAAIK,EAAE,GAAGN,YAAY,CAACC,EAAD,CAArB;YACA,IAAIM,EAAE,GAAGP,YAAY,CAACC,EAAC,GAAG,CAAL,CAArB;YACArI,KAAK,CAACqE,OAAN,CAAcoE,EAAE,CAAC,CAAD,CAAhB,EAAqBC,EAAE,CAAC,CAAD,CAAvB,EAA4BC,EAAE,CAAC,CAAD,CAA9B,EAAmCF,EAAE,CAAC,CAAD,CAArC,EAA0CC,EAAE,CAAC,CAAD,CAA5C,EAAiDC,EAAE,CAAC,CAAD,CAAnD,EAAwDF,EAAE,CAAC,CAAD,CAA1D,EAA+DC,EAAE,CAAC,CAAD,CAAjE,EAAsEC,EAAE,CAAC,CAAD,CAAxE;UACD;QACF,CAtBM,MAsBA,IAAInB,aAAa,KAAK,GAAtB,EAA2B;UAChC,IAAIoB,SAAS,GAAGrB,IAAI,CAACsB,SAAL,CAAe,CAAf,EAAkBhB,IAAlB,GAAyBP,KAAzB,CAA+B,GAA/B,CAAhB;UACA,IAAIwB,YAAY,GAAG,EAAnB;UAAA,IACIC,OAAO,GAAG,EADd;;UAGA,IAAIxB,IAAI,CAACJ,OAAL,CAAa,GAAb,MAAsB,CAAC,CAA3B,EAA8B;YAC5B2B,YAAY,GAAGF,SAAf;UACD,CAFD,MAEO;YACL,KAAK,IAAII,EAAE,GAAG,CAAT,EAAYC,IAAI,GAAGL,SAAS,CAACjH,MAAlC,EAA0CqH,EAAE,GAAGC,IAA/C,EAAqDD,EAAE,EAAvD,EAA2D;cACzD,IAAIE,KAAK,GAAGN,SAAS,CAACI,EAAD,CAAT,CAAc1B,KAAd,CAAoB,GAApB,CAAZ;cACA,IAAI4B,KAAK,CAAC,CAAD,CAAL,KAAa,EAAjB,EAAqBJ,YAAY,CAAC1G,IAAb,CAAkB8G,KAAK,CAAC,CAAD,CAAvB;cACrB,IAAIA,KAAK,CAAC,CAAD,CAAL,KAAa,EAAjB,EAAqBH,OAAO,CAAC3G,IAAR,CAAa8G,KAAK,CAAC,CAAD,CAAlB;YACtB;UACF;;UAEDlJ,KAAK,CAACsF,eAAN,CAAsBwD,YAAtB,EAAoCC,OAApC;QACD,CAhBM,MAgBA,IAAIvB,aAAa,KAAK,GAAtB,EAA2B;UAChC,IAAIS,QAAQ,GAAGV,IAAI,CAACW,MAAL,CAAY,CAAZ,EAAeL,IAAf,EAAf;UACA,IAAIsB,SAAS,GAAGlB,QAAQ,CAACX,KAAT,CAAe,GAAf,CAAhB;UACAtH,KAAK,CAACkF,gBAAN,CAAuBiE,SAAvB;QACD,CAJM,MAIA,IAAI,CAACzB,MAAM,GAAGpI,cAAc,CAAC8J,IAAf,CAAoB7B,IAApB,CAAV,MAAyC,IAA7C,EAAmD;UACxD;UACA;UACA;UACA;UACA;UACA,IAAI7G,IAAI,GAAG,CAAC,MAAMgH,MAAM,CAAC,CAAD,CAAN,CAAUQ,MAAV,CAAiB,CAAjB,EAAoBL,IAApB,EAAP,EAAmCK,MAAnC,CAA0C,CAA1C,CAAX;UACAlI,KAAK,CAACS,WAAN,CAAkBC,IAAlB;QACD,CARM,MAQA,IAAIlB,oBAAoB,CAAC6J,IAArB,CAA0B9B,IAA1B,CAAJ,EAAqC;UAC1C;UACAvH,KAAK,CAACE,MAAN,CAAaiB,aAAb,CAA2BoG,IAAI,CAACsB,SAAL,CAAe,CAAf,EAAkBhB,IAAlB,EAA3B,EAAqD7H,KAAK,CAACQ,iBAA3D;QACD,CAHM,MAGA,IAAIjB,wBAAwB,CAAC8J,IAAzB,CAA8B9B,IAA9B,CAAJ,EAAyC;UAC9C;UACAvH,KAAK,CAACQ,iBAAN,CAAwB4B,IAAxB,CAA6BmF,IAAI,CAACsB,SAAL,CAAe,CAAf,EAAkBhB,IAAlB,EAA7B;QACD,CAHM,MAGA,IAAIpI,eAAe,CAAC4J,IAAhB,CAAqB9B,IAArB,CAAJ,EAAgC;UACrC;UACA;UACAR,OAAO,CAACuC,IAAR,CAAa,sGAAb;QACD,CAJM,MAIA,IAAI9B,aAAa,KAAK,GAAtB,EAA2B;UAChCE,MAAM,GAAGH,IAAI,CAACD,KAAL,CAAW,GAAX,CAAT,CADgC,CACN;UAC1B;UACA;UACA;UACA;UACA;UACA;;UAEA;AACV;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;;UAEU,IAAII,MAAM,CAAC/F,MAAP,GAAgB,CAApB,EAAuB;YACrB,IAAIgB,KAAK,GAAG+E,MAAM,CAAC,CAAD,CAAN,CAAUG,IAAV,GAAiB0B,WAAjB,EAAZ;YACAvJ,KAAK,CAACE,MAAN,CAAagB,MAAb,GAAsByB,KAAK,KAAK,GAAV,IAAiBA,KAAK,KAAK,KAAjD;UACD,CAHD,MAGO;YACL;YACA3C,KAAK,CAACE,MAAN,CAAagB,MAAb,GAAsB,IAAtB;UACD;;UAED,IAAIQ,QAAQ,GAAG1B,KAAK,CAACE,MAAN,CAAaW,eAAb,EAAf;UACA,IAAIa,QAAJ,EAAcA,QAAQ,CAACR,MAAT,GAAkBlB,KAAK,CAACE,MAAN,CAAagB,MAA/B;QACf,CA/BM,MA+BA;UACL;UACA,IAAIqG,IAAI,KAAK,IAAb,EAAmB;UACnBR,OAAO,CAACuC,IAAR,CAAa,wCAAwC/B,IAAxC,GAA+C,GAA5D;QACD;MACF;;MAEDvH,KAAK,CAACyC,QAAN;MACA,IAAI+G,SAAS,GAAG,IAAI7K,KAAJ,EAAhB;MACA6K,SAAS,CAAChJ,iBAAV,GAA8B,GAAGiJ,MAAH,CAAUzJ,KAAK,CAACQ,iBAAhB,CAA9B;MACA,IAAIkJ,aAAa,GAAG,EAAE1J,KAAK,CAACC,OAAN,CAAc0B,MAAd,KAAyB,CAAzB,IAA8B3B,KAAK,CAACC,OAAN,CAAc,CAAd,EAAiBe,QAAjB,CAA0Bb,QAA1B,CAAmCwB,MAAnC,KAA8C,CAA9E,CAApB;;MAEA,IAAI+H,aAAa,KAAK,IAAtB,EAA4B;QAC1B,KAAK,IAAI9B,EAAC,GAAG,CAAR,EAAWvC,GAAC,GAAGrF,KAAK,CAACC,OAAN,CAAc0B,MAAlC,EAA0CiG,EAAC,GAAGvC,GAA9C,EAAiDuC,EAAC,EAAlD,EAAsD;UACpD,IAAI1H,MAAM,GAAGF,KAAK,CAACC,OAAN,CAAc2H,EAAd,CAAb;UACA,IAAI5G,QAAQ,GAAGd,MAAM,CAACc,QAAtB;UACA,IAAIT,SAAS,GAAGL,MAAM,CAACK,SAAvB;UACA,IAAIoJ,MAAM,GAAG3I,QAAQ,CAACmE,IAAT,KAAkB,MAA/B;UACA,IAAIyE,QAAQ,GAAG5I,QAAQ,CAACmE,IAAT,KAAkB,QAAjC;UACA,IAAI0E,eAAe,GAAG,KAAtB,CANoD,CAMvB;;UAE7B,IAAI7I,QAAQ,CAACb,QAAT,CAAkBwB,MAAlB,KAA6B,CAAjC,EAAoC;UACpC,IAAImI,cAAc,GAAG,IAAIlL,cAAJ,EAArB;UACAkL,cAAc,CAACC,YAAf,CAA4B,UAA5B,EAAwC,IAAIlL,sBAAJ,CAA2BmC,QAAQ,CAACb,QAApC,EAA8C,CAA9C,CAAxC;;UAEA,IAAIa,QAAQ,CAACZ,OAAT,CAAiBuB,MAAjB,GAA0B,CAA9B,EAAiC;YAC/BmI,cAAc,CAACC,YAAf,CAA4B,QAA5B,EAAsC,IAAIlL,sBAAJ,CAA2BmC,QAAQ,CAACZ,OAApC,EAA6C,CAA7C,CAAtC;UACD;;UAED,IAAIY,QAAQ,CAACX,MAAT,CAAgBsB,MAAhB,GAAyB,CAA7B,EAAgC;YAC9BkI,eAAe,GAAG,IAAlB;YACAC,cAAc,CAACC,YAAf,CAA4B,OAA5B,EAAqC,IAAIlL,sBAAJ,CAA2BmC,QAAQ,CAACX,MAApC,EAA4C,CAA5C,CAArC;UACD;;UAED,IAAIW,QAAQ,CAACC,YAAT,KAA0B,IAA9B,EAAoC;YAClC6I,cAAc,CAACC,YAAf,CAA4B,IAA5B,EAAkC,IAAIlL,sBAAJ,CAA2BmC,QAAQ,CAACV,GAApC,EAAyC,CAAzC,CAAlC;UACD,CAvBmD,CAuBlD;;;UAGF,IAAI0J,gBAAgB,GAAG,EAAvB;;UAEA,KAAK,IAAIzH,EAAE,GAAG,CAAT,EAAY0H,KAAK,GAAG1J,SAAS,CAACoB,MAAnC,EAA2CY,EAAE,GAAG0H,KAAhD,EAAuD1H,EAAE,EAAzD,EAA6D;YAC3D,IAAI2H,cAAc,GAAG3J,SAAS,CAACgC,EAAD,CAA9B;YACA,IAAI4H,YAAY,GAAGD,cAAc,CAACxJ,IAAf,GAAsB,GAAtB,GAA4BwJ,cAAc,CAAChJ,MAA3C,GAAoD,GAApD,GAA0D2I,eAA7E;YACA,IAAInI,QAAQ,GAAG1B,KAAK,CAACO,SAAN,CAAgB4J,YAAhB,CAAf;;YAEA,IAAI,KAAK5J,SAAL,KAAmB,IAAvB,EAA6B;cAC3BmB,QAAQ,GAAG,KAAKnB,SAAL,CAAesF,MAAf,CAAsBqE,cAAc,CAACxJ,IAArC,CAAX,CAD2B,CAC4B;;cAEvD,IAAIiJ,MAAM,IAAIjI,QAAV,IAAsB,EAAEA,QAAQ,YAAY5C,iBAAtB,CAA1B,EAAoE;gBAClE,IAAIsL,YAAY,GAAG,IAAItL,iBAAJ,EAAnB;gBACAC,QAAQ,CAAC2G,SAAT,CAAmB2E,IAAnB,CAAwB5E,IAAxB,CAA6B2E,YAA7B,EAA2C1I,QAA3C;gBACA0I,YAAY,CAACE,KAAb,CAAmBD,IAAnB,CAAwB3I,QAAQ,CAAC4I,KAAjC;gBACA5I,QAAQ,GAAG0I,YAAX;cACD,CALD,MAKO,IAAIR,QAAQ,IAAIlI,QAAZ,IAAwB,EAAEA,QAAQ,YAAY1C,cAAtB,CAA5B,EAAmE;gBACxE,IAAIuL,cAAc,GAAG,IAAIvL,cAAJ,CAAmB;kBACtCwL,IAAI,EAAE,EADgC;kBAEtCC,eAAe,EAAE;gBAFqB,CAAnB,CAArB;gBAIA1L,QAAQ,CAAC2G,SAAT,CAAmB2E,IAAnB,CAAwB5E,IAAxB,CAA6B8E,cAA7B,EAA6C7I,QAA7C;gBACA6I,cAAc,CAACD,KAAf,CAAqBD,IAArB,CAA0B3I,QAAQ,CAAC4I,KAAnC;gBACAC,cAAc,CAACG,GAAf,GAAqBhJ,QAAQ,CAACgJ,GAA9B;gBACAhJ,QAAQ,GAAG6I,cAAX;cACD;YACF;;YAED,IAAI7I,QAAQ,KAAKZ,SAAjB,EAA4B;cAC1B,IAAI6I,MAAJ,EAAY;gBACVjI,QAAQ,GAAG,IAAI5C,iBAAJ,EAAX;cACD,CAFD,MAEO,IAAI8K,QAAJ,EAAc;gBACnBlI,QAAQ,GAAG,IAAI1C,cAAJ,CAAmB;kBAC5BwL,IAAI,EAAE,CADsB;kBAE5BC,eAAe,EAAE;gBAFW,CAAnB,CAAX;cAID,CALM,MAKA;gBACL/I,QAAQ,GAAG,IAAIzC,iBAAJ,EAAX;cACD;;cAEDyC,QAAQ,CAAChB,IAAT,GAAgBwJ,cAAc,CAACxJ,IAA/B;cACAgB,QAAQ,CAACiJ,WAAT,GAAuBT,cAAc,CAAChJ,MAAf,GAAwB,KAAxB,GAAgC,IAAvD;cACAQ,QAAQ,CAACkJ,YAAT,GAAwBf,eAAxB;cACA7J,KAAK,CAACO,SAAN,CAAgB4J,YAAhB,IAAgCzI,QAAhC;YACD;;YAEDsI,gBAAgB,CAAC5H,IAAjB,CAAsBV,QAAtB;UACD,CAxEmD,CAwElD;;;UAGF,IAAImJ,IAAJ;;UAEA,IAAIb,gBAAgB,CAACrI,MAAjB,GAA0B,CAA9B,EAAiC;YAC/B,KAAK,IAAIY,GAAE,GAAG,CAAT,EAAY0H,MAAK,GAAG1J,SAAS,CAACoB,MAAnC,EAA2CY,GAAE,GAAG0H,MAAhD,EAAuD1H,GAAE,EAAzD,EAA6D;cAC3D,IAAI2H,cAAc,GAAG3J,SAAS,CAACgC,GAAD,CAA9B;cACAuH,cAAc,CAACgB,QAAf,CAAwBZ,cAAc,CAACnI,UAAvC,EAAmDmI,cAAc,CAAC3I,UAAlE,EAA8EgB,GAA9E;YACD;;YAED,IAAIoH,MAAJ,EAAY;cACVkB,IAAI,GAAG,IAAI3L,YAAJ,CAAiB4K,cAAjB,EAAiCE,gBAAjC,CAAP;YACD,CAFD,MAEO,IAAIJ,QAAJ,EAAc;cACnBiB,IAAI,GAAG,IAAI1L,MAAJ,CAAW2K,cAAX,EAA2BE,gBAA3B,CAAP;YACD,CAFM,MAEA;cACLa,IAAI,GAAG,IAAIzL,IAAJ,CAAS0K,cAAT,EAAyBE,gBAAzB,CAAP;YACD;UACF,CAbD,MAaO;YACL,IAAIL,MAAJ,EAAY;cACVkB,IAAI,GAAG,IAAI3L,YAAJ,CAAiB4K,cAAjB,EAAiCE,gBAAgB,CAAC,CAAD,CAAjD,CAAP;YACD,CAFD,MAEO,IAAIJ,QAAJ,EAAc;cACnBiB,IAAI,GAAG,IAAI1L,MAAJ,CAAW2K,cAAX,EAA2BE,gBAAgB,CAAC,CAAD,CAA3C,CAAP;YACD,CAFM,MAEA;cACLa,IAAI,GAAG,IAAIzL,IAAJ,CAAS0K,cAAT,EAAyBE,gBAAgB,CAAC,CAAD,CAAzC,CAAP;YACD;UACF;;UAEDa,IAAI,CAACnK,IAAL,GAAYR,MAAM,CAACQ,IAAnB;UACA8I,SAAS,CAACuB,GAAV,CAAcF,IAAd;QACD;MACF,CAxGD,MAwGO;QACL;QACA,IAAI7K,KAAK,CAACG,QAAN,CAAewB,MAAf,GAAwB,CAA5B,EAA+B;UAC7B,IAAID,QAAQ,GAAG,IAAI1C,cAAJ,CAAmB;YAChCwL,IAAI,EAAE,CAD0B;YAEhCC,eAAe,EAAE;UAFe,CAAnB,CAAf;UAIA,IAAIX,cAAc,GAAG,IAAIlL,cAAJ,EAArB;UACAkL,cAAc,CAACC,YAAf,CAA4B,UAA5B,EAAwC,IAAIlL,sBAAJ,CAA2BmB,KAAK,CAACG,QAAjC,EAA2C,CAA3C,CAAxC;;UAEA,IAAIH,KAAK,CAACK,MAAN,CAAasB,MAAb,GAAsB,CAAtB,IAA2B3B,KAAK,CAACK,MAAN,CAAa,CAAb,MAAoBS,SAAnD,EAA8D;YAC5DgJ,cAAc,CAACC,YAAf,CAA4B,OAA5B,EAAqC,IAAIlL,sBAAJ,CAA2BmB,KAAK,CAACK,MAAjC,EAAyC,CAAzC,CAArC;YACAqB,QAAQ,CAACkJ,YAAT,GAAwB,IAAxB;UACD;;UAED,IAAII,MAAM,GAAG,IAAI7L,MAAJ,CAAW2K,cAAX,EAA2BpI,QAA3B,CAAb;UACA8H,SAAS,CAACuB,GAAV,CAAcC,MAAd;QACD;MACF;;MAED,OAAOxB,SAAP;IACD;EApTkE,CAA/C,CAAtB;EAsTA,OAAOnK,SAAP;AACD,CAjlBe,EAAhB;;AAmlBA,SAASA,SAAT"},"metadata":{},"sourceType":"module"}