{"ast":null,"code":"import { FloatNode } from '../inputs/FloatNode.js';\nimport { NodeLib } from '../core/NodeLib.js';\n\nfunction TimerNode(scale, scope, timeScale) {\n  FloatNode.call(this);\n  this.scale = scale !== undefined ? scale : 1;\n  this.scope = scope || TimerNode.GLOBAL;\n  this.timeScale = timeScale !== undefined ? timeScale : scale !== undefined;\n}\n\nTimerNode.GLOBAL = 'global';\nTimerNode.LOCAL = 'local';\nTimerNode.DELTA = 'delta';\nTimerNode.prototype = Object.create(FloatNode.prototype);\nTimerNode.prototype.constructor = TimerNode;\nTimerNode.prototype.nodeType = 'Timer';\n\nTimerNode.prototype.getReadonly = function () {\n  // never use TimerNode as readonly but aways as \"uniform\"\n  return false;\n};\n\nTimerNode.prototype.getUnique = function () {\n  // share TimerNode \"uniform\" input if is used on more time with others TimerNode\n  return this.timeScale && (this.scope === TimerNode.GLOBAL || this.scope === TimerNode.DELTA);\n};\n\nTimerNode.prototype.updateFrame = function (frame) {\n  var scale = this.timeScale ? this.scale : 1;\n\n  switch (this.scope) {\n    case TimerNode.LOCAL:\n      this.value += frame.delta * scale;\n      break;\n\n    case TimerNode.DELTA:\n      this.value = frame.delta * scale;\n      break;\n\n    default:\n      this.value = frame.time * scale;\n  }\n};\n\nTimerNode.prototype.copy = function (source) {\n  FloatNode.prototype.copy.call(this, source);\n  this.scope = source.scope;\n  this.scale = source.scale;\n  this.timeScale = source.timeScale;\n  return this;\n};\n\nTimerNode.prototype.toJSON = function (meta) {\n  var data = FloatNode.prototype.toJSON.call(this, meta);\n  data.scope = this.scope;\n  data.scale = this.scale;\n  data.timeScale = this.timeScale;\n  return data;\n};\n\nNodeLib.addKeyword('time', function () {\n  return new TimerNode();\n});\nexport { TimerNode };","map":{"version":3,"names":["FloatNode","NodeLib","TimerNode","scale","scope","timeScale","call","undefined","GLOBAL","LOCAL","DELTA","prototype","Object","create","constructor","nodeType","getReadonly","getUnique","updateFrame","frame","value","delta","time","copy","source","toJSON","meta","data","addKeyword"],"sources":["/Users/98yaroslavgorban/Desktop/gltfjsx-forked/node_modules/three-stdlib/nodes/utils/TimerNode.js"],"sourcesContent":["import { FloatNode } from '../inputs/FloatNode.js';\nimport { NodeLib } from '../core/NodeLib.js';\n\nfunction TimerNode(scale, scope, timeScale) {\n  FloatNode.call(this);\n  this.scale = scale !== undefined ? scale : 1;\n  this.scope = scope || TimerNode.GLOBAL;\n  this.timeScale = timeScale !== undefined ? timeScale : scale !== undefined;\n}\n\nTimerNode.GLOBAL = 'global';\nTimerNode.LOCAL = 'local';\nTimerNode.DELTA = 'delta';\nTimerNode.prototype = Object.create(FloatNode.prototype);\nTimerNode.prototype.constructor = TimerNode;\nTimerNode.prototype.nodeType = 'Timer';\n\nTimerNode.prototype.getReadonly = function () {\n  // never use TimerNode as readonly but aways as \"uniform\"\n  return false;\n};\n\nTimerNode.prototype.getUnique = function () {\n  // share TimerNode \"uniform\" input if is used on more time with others TimerNode\n  return this.timeScale && (this.scope === TimerNode.GLOBAL || this.scope === TimerNode.DELTA);\n};\n\nTimerNode.prototype.updateFrame = function (frame) {\n  var scale = this.timeScale ? this.scale : 1;\n\n  switch (this.scope) {\n    case TimerNode.LOCAL:\n      this.value += frame.delta * scale;\n      break;\n\n    case TimerNode.DELTA:\n      this.value = frame.delta * scale;\n      break;\n\n    default:\n      this.value = frame.time * scale;\n  }\n};\n\nTimerNode.prototype.copy = function (source) {\n  FloatNode.prototype.copy.call(this, source);\n  this.scope = source.scope;\n  this.scale = source.scale;\n  this.timeScale = source.timeScale;\n  return this;\n};\n\nTimerNode.prototype.toJSON = function (meta) {\n  var data = FloatNode.prototype.toJSON.call(this, meta);\n  data.scope = this.scope;\n  data.scale = this.scale;\n  data.timeScale = this.timeScale;\n  return data;\n};\n\nNodeLib.addKeyword('time', function () {\n  return new TimerNode();\n});\n\nexport { TimerNode };\n"],"mappings":"AAAA,SAASA,SAAT,QAA0B,wBAA1B;AACA,SAASC,OAAT,QAAwB,oBAAxB;;AAEA,SAASC,SAAT,CAAmBC,KAAnB,EAA0BC,KAA1B,EAAiCC,SAAjC,EAA4C;EAC1CL,SAAS,CAACM,IAAV,CAAe,IAAf;EACA,KAAKH,KAAL,GAAaA,KAAK,KAAKI,SAAV,GAAsBJ,KAAtB,GAA8B,CAA3C;EACA,KAAKC,KAAL,GAAaA,KAAK,IAAIF,SAAS,CAACM,MAAhC;EACA,KAAKH,SAAL,GAAiBA,SAAS,KAAKE,SAAd,GAA0BF,SAA1B,GAAsCF,KAAK,KAAKI,SAAjE;AACD;;AAEDL,SAAS,CAACM,MAAV,GAAmB,QAAnB;AACAN,SAAS,CAACO,KAAV,GAAkB,OAAlB;AACAP,SAAS,CAACQ,KAAV,GAAkB,OAAlB;AACAR,SAAS,CAACS,SAAV,GAAsBC,MAAM,CAACC,MAAP,CAAcb,SAAS,CAACW,SAAxB,CAAtB;AACAT,SAAS,CAACS,SAAV,CAAoBG,WAApB,GAAkCZ,SAAlC;AACAA,SAAS,CAACS,SAAV,CAAoBI,QAApB,GAA+B,OAA/B;;AAEAb,SAAS,CAACS,SAAV,CAAoBK,WAApB,GAAkC,YAAY;EAC5C;EACA,OAAO,KAAP;AACD,CAHD;;AAKAd,SAAS,CAACS,SAAV,CAAoBM,SAApB,GAAgC,YAAY;EAC1C;EACA,OAAO,KAAKZ,SAAL,KAAmB,KAAKD,KAAL,KAAeF,SAAS,CAACM,MAAzB,IAAmC,KAAKJ,KAAL,KAAeF,SAAS,CAACQ,KAA/E,CAAP;AACD,CAHD;;AAKAR,SAAS,CAACS,SAAV,CAAoBO,WAApB,GAAkC,UAAUC,KAAV,EAAiB;EACjD,IAAIhB,KAAK,GAAG,KAAKE,SAAL,GAAiB,KAAKF,KAAtB,GAA8B,CAA1C;;EAEA,QAAQ,KAAKC,KAAb;IACE,KAAKF,SAAS,CAACO,KAAf;MACE,KAAKW,KAAL,IAAcD,KAAK,CAACE,KAAN,GAAclB,KAA5B;MACA;;IAEF,KAAKD,SAAS,CAACQ,KAAf;MACE,KAAKU,KAAL,GAAaD,KAAK,CAACE,KAAN,GAAclB,KAA3B;MACA;;IAEF;MACE,KAAKiB,KAAL,GAAaD,KAAK,CAACG,IAAN,GAAanB,KAA1B;EAVJ;AAYD,CAfD;;AAiBAD,SAAS,CAACS,SAAV,CAAoBY,IAApB,GAA2B,UAAUC,MAAV,EAAkB;EAC3CxB,SAAS,CAACW,SAAV,CAAoBY,IAApB,CAAyBjB,IAAzB,CAA8B,IAA9B,EAAoCkB,MAApC;EACA,KAAKpB,KAAL,GAAaoB,MAAM,CAACpB,KAApB;EACA,KAAKD,KAAL,GAAaqB,MAAM,CAACrB,KAApB;EACA,KAAKE,SAAL,GAAiBmB,MAAM,CAACnB,SAAxB;EACA,OAAO,IAAP;AACD,CAND;;AAQAH,SAAS,CAACS,SAAV,CAAoBc,MAApB,GAA6B,UAAUC,IAAV,EAAgB;EAC3C,IAAIC,IAAI,GAAG3B,SAAS,CAACW,SAAV,CAAoBc,MAApB,CAA2BnB,IAA3B,CAAgC,IAAhC,EAAsCoB,IAAtC,CAAX;EACAC,IAAI,CAACvB,KAAL,GAAa,KAAKA,KAAlB;EACAuB,IAAI,CAACxB,KAAL,GAAa,KAAKA,KAAlB;EACAwB,IAAI,CAACtB,SAAL,GAAiB,KAAKA,SAAtB;EACA,OAAOsB,IAAP;AACD,CAND;;AAQA1B,OAAO,CAAC2B,UAAR,CAAmB,MAAnB,EAA2B,YAAY;EACrC,OAAO,IAAI1B,SAAJ,EAAP;AACD,CAFD;AAIA,SAASA,SAAT"},"metadata":{},"sourceType":"module"}