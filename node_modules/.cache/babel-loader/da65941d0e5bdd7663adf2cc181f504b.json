{"ast":null,"code":"import _slicedToArray from \"/Users/98yaroslavgorban/Desktop/gltfjsx-forked/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray.js\";\nimport { Loader, FileLoader, MeshStandardMaterial, Color, TextureLoader, Object3D, Matrix4, BufferGeometryLoader, DirectionalLight, PointLight, RectAreaLight, Vector3, SpotLight, CanvasTexture, LinearFilter, ClampToEdgeWrapping, SpriteMaterial, Sprite, LineBasicMaterial, Line, Mesh, PointsMaterial, Points } from 'three';\n\nvar Rhino3dmLoader = function Rhino3dmLoader(manager) {\n  Loader.call(this, manager);\n  this.libraryPath = '';\n  this.libraryPending = null;\n  this.libraryBinary = null;\n  this.libraryConfig = {};\n  this.url = '';\n  this.workerLimit = 4;\n  this.workerPool = [];\n  this.workerNextTaskID = 1;\n  this.workerSourceURL = '';\n  this.workerConfig = {};\n  this.materials = [];\n};\n\nRhino3dmLoader.taskCache = new WeakMap();\nRhino3dmLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: Rhino3dmLoader,\n  setLibraryPath: function setLibraryPath(path) {\n    this.libraryPath = path;\n    return this;\n  },\n  setWorkerLimit: function setWorkerLimit(workerLimit) {\n    this.workerLimit = workerLimit;\n    return this;\n  },\n  load: function load(url, onLoad, onProgress, onError) {\n    var _this = this;\n\n    var loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    this.url = url;\n    loader.load(url, function (buffer) {\n      // Check for an existing task using this buffer. A transferred buffer cannot be transferred\n      // again from this thread.\n      if (Rhino3dmLoader.taskCache.has(buffer)) {\n        var cachedTask = Rhino3dmLoader.taskCache.get(buffer);\n        return cachedTask.promise.then(onLoad).catch(onError);\n      }\n\n      _this.decodeObjects(buffer, url).then(onLoad).catch(onError);\n    }, onProgress, onError);\n  },\n  debug: function debug() {\n    console.log('Task load: ', this.workerPool.map(function (worker) {\n      return worker._taskLoad;\n    }));\n  },\n  decodeObjects: function decodeObjects(buffer, url) {\n    var _this2 = this;\n\n    var worker;\n    var taskID;\n    var taskCost = buffer.byteLength;\n\n    var objectPending = this._getWorker(taskCost).then(function (_worker) {\n      worker = _worker;\n      taskID = _this2.workerNextTaskID++; //hmmm\n\n      return new Promise(function (resolve, reject) {\n        worker._callbacks[taskID] = {\n          resolve: resolve,\n          reject: reject\n        };\n        worker.postMessage({\n          type: 'decode',\n          id: taskID,\n          buffer: buffer\n        }, [buffer]); //this.debug();\n      });\n    }).then(function (message) {\n      return _this2._createGeometry(message.data);\n    }); // Remove task from the task list.\n    // Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\n\n\n    objectPending.catch(function () {\n      return true;\n    }).then(function () {\n      if (worker && taskID) {\n        _this2._releaseTask(worker, taskID); //this.debug();\n\n      }\n    }); // Cache the task result.\n\n    Rhino3dmLoader.taskCache.set(buffer, {\n      url: url,\n      promise: objectPending\n    });\n    return objectPending;\n  },\n  parse: function parse(data, onLoad, onError) {\n    this.decodeObjects(data, '').then(onLoad).catch(onError);\n  },\n  _compareMaterials: function _compareMaterials(material) {\n    var mat = {};\n    mat.name = material.name;\n    mat.color = {};\n    mat.color.r = material.color.r;\n    mat.color.g = material.color.g;\n    mat.color.b = material.color.b;\n    mat.type = material.type;\n\n    for (var i = 0; i < this.materials.length; i++) {\n      var m = this.materials[i];\n      var _mat = {};\n      _mat.name = m.name;\n      _mat.color = {};\n      _mat.color.r = m.color.r;\n      _mat.color.g = m.color.g;\n      _mat.color.b = m.color.b;\n      _mat.type = m.type;\n\n      if (JSON.stringify(mat) === JSON.stringify(_mat)) {\n        return m;\n      }\n    }\n\n    this.materials.push(material);\n    return material;\n  },\n  _createMaterial: function _createMaterial(material) {\n    if (material === undefined) {\n      return new MeshStandardMaterial({\n        color: new Color(1, 1, 1),\n        metalness: 0.8,\n        name: 'default',\n        side: 2\n      });\n    }\n\n    var _diffuseColor = material.diffuseColor;\n    var diffusecolor = new Color(_diffuseColor.r / 255.0, _diffuseColor.g / 255.0, _diffuseColor.b / 255.0);\n\n    if (_diffuseColor.r === 0 && _diffuseColor.g === 0 && _diffuseColor.b === 0) {\n      diffusecolor.r = 1;\n      diffusecolor.g = 1;\n      diffusecolor.b = 1;\n    } // console.log( material );\n\n\n    var mat = new MeshStandardMaterial({\n      color: diffusecolor,\n      name: material.name,\n      side: 2,\n      transparent: material.transparency > 0 ? true : false,\n      opacity: 1.0 - material.transparency\n    });\n    var textureLoader = new TextureLoader();\n\n    for (var i = 0; i < material.textures.length; i++) {\n      var texture = material.textures[i];\n\n      if (texture.image !== null) {\n        var map = textureLoader.load(texture.image);\n\n        switch (texture.type) {\n          case 'Diffuse':\n            mat.map = map;\n            break;\n\n          case 'Bump':\n            mat.bumpMap = map;\n            break;\n\n          case 'Transparency':\n            mat.alphaMap = map;\n            mat.transparent = true;\n            break;\n\n          case 'Emap':\n            mat.envMap = map;\n            break;\n        }\n      }\n    }\n\n    return mat;\n  },\n  _createGeometry: function _createGeometry(data) {\n    // console.log(data);\n    var object = new Object3D();\n    var instanceDefinitionObjects = [];\n    var instanceDefinitions = [];\n    var instanceReferences = [];\n    object.userData['layers'] = data.layers;\n    object.userData['groups'] = data.groups;\n    object.userData['settings'] = data.settings;\n    object.userData['objectType'] = 'File3dm';\n    object.userData['materials'] = null;\n    object.name = this.url;\n    var objects = data.objects;\n    var materials = data.materials;\n\n    for (var i = 0; i < objects.length; i++) {\n      var obj = objects[i];\n      var attributes = obj.attributes;\n\n      switch (obj.objectType) {\n        case 'InstanceDefinition':\n          instanceDefinitions.push(obj);\n          break;\n\n        case 'InstanceReference':\n          instanceReferences.push(obj);\n          break;\n\n        default:\n          if (attributes.materialIndex >= 0) {\n            var rMaterial = materials[attributes.materialIndex];\n\n            var material = this._createMaterial(rMaterial);\n\n            material = this._compareMaterials(material);\n\n            var _object = this._createObject(obj, material);\n          } else {\n            var material = this._createMaterial();\n\n            var _object = this._createObject(obj, material);\n          }\n\n          if (_object === undefined) {\n            continue;\n          }\n\n          var layer = data.layers[attributes.layerIndex];\n          _object.visible = layer ? data.layers[attributes.layerIndex].visible : true;\n\n          if (attributes.isInstanceDefinitionObject) {\n            instanceDefinitionObjects.push(_object);\n          } else {\n            object.add(_object);\n          }\n\n          break;\n      }\n    }\n\n    for (var _i = 0; _i < instanceDefinitions.length; _i++) {\n      var iDef = instanceDefinitions[_i];\n      var objects = [];\n\n      for (var j = 0; j < iDef.attributes.objectIds.length; j++) {\n        var objId = iDef.attributes.objectIds[j];\n\n        for (var p = 0; p < instanceDefinitionObjects.length; p++) {\n          var idoId = instanceDefinitionObjects[p].userData.attributes.id;\n\n          if (objId === idoId) {\n            objects.push(instanceDefinitionObjects[p]);\n          }\n        }\n      } // Currently clones geometry and does not take advantage of instancing\n\n\n      for (var _j = 0; _j < instanceReferences.length; _j++) {\n        var iRef = instanceReferences[_j];\n\n        if (iRef.geometry.parentIdefId === iDef.attributes.id) {\n          var iRefObject = new Object3D();\n          var xf = iRef.geometry.xform.array;\n          var matrix = new Matrix4();\n          matrix.set(xf[0], xf[1], xf[2], xf[3], xf[4], xf[5], xf[6], xf[7], xf[8], xf[9], xf[10], xf[11], xf[12], xf[13], xf[14], xf[15]);\n          iRefObject.applyMatrix4(matrix);\n\n          for (var _p = 0; _p < objects.length; _p++) {\n            iRefObject.add(objects[_p].clone(true));\n          }\n\n          object.add(iRefObject);\n        }\n      }\n    }\n\n    object.userData['materials'] = this.materials;\n    return object;\n  },\n  _createObject: function _createObject(obj, mat) {\n    var loader = new BufferGeometryLoader();\n    var attributes = obj.attributes;\n\n    switch (obj.objectType) {\n      case 'Point':\n      case 'PointSet':\n        var geometry = loader.parse(obj.geometry);\n        var material = null;\n\n        if (geometry.attributes.hasOwnProperty('color')) {\n          material = new PointsMaterial({\n            vertexColors: true,\n            sizeAttenuation: false,\n            size: 2\n          });\n        } else {\n          var _color = attributes.drawColor;\n          var color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n          material = new PointsMaterial({\n            color: color,\n            sizeAttenuation: false,\n            size: 2\n          });\n        }\n\n        material = this._compareMaterials(material);\n        var points = new Points(geometry, material);\n        points.userData['attributes'] = attributes;\n        points.userData['objectType'] = obj.objectType;\n\n        if (attributes.name) {\n          points.name = attributes.name;\n        }\n\n        return points;\n\n      case 'Mesh':\n      case 'Extrusion':\n      case 'SubD':\n      case 'Brep':\n        if (obj.geometry === null) return;\n        var geometry = loader.parse(obj.geometry);\n\n        if (geometry.attributes.hasOwnProperty('color')) {\n          mat.vertexColors = true;\n        }\n\n        if (mat === null) {\n          mat = this._createMaterial();\n          mat = this._compareMaterials(mat);\n        }\n\n        var mesh = new Mesh(geometry, mat);\n        mesh.castShadow = attributes.castsShadows;\n        mesh.receiveShadow = attributes.receivesShadows;\n        mesh.userData['attributes'] = attributes;\n        mesh.userData['objectType'] = obj.objectType;\n\n        if (attributes.name) {\n          mesh.name = attributes.name;\n        }\n\n        return mesh;\n\n      case 'Curve':\n        geometry = loader.parse(obj.geometry);\n        var _color = attributes.drawColor;\n        var color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n        var material = new LineBasicMaterial({\n          color: color\n        });\n        material = this._compareMaterials(material);\n        var lines = new Line(geometry, material);\n        lines.userData['attributes'] = attributes;\n        lines.userData['objectType'] = obj.objectType;\n\n        if (attributes.name) {\n          lines.name = attributes.name;\n        }\n\n        return lines;\n\n      case 'TextDot':\n        geometry = obj.geometry;\n        var ctx = document.createElement('canvas').getContext('2d');\n        var font = \"\".concat(geometry.fontHeight, \"px \").concat(geometry.fontFace);\n        ctx.font = font;\n        var width = ctx.measureText(geometry.text).width + 10;\n        var height = geometry.fontHeight + 10;\n        var r = window.devicePixelRatio;\n        ctx.canvas.width = width * r;\n        ctx.canvas.height = height * r;\n        ctx.canvas.style.width = width + 'px';\n        ctx.canvas.style.height = height + 'px';\n        ctx.setTransform(r, 0, 0, r, 0, 0);\n        ctx.font = font;\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center';\n        var color = attributes.drawColor;\n        ctx.fillStyle = \"rgba(\".concat(color.r, \",\").concat(color.g, \",\").concat(color.b, \",\").concat(color.a, \")\");\n        ctx.fillRect(0, 0, width, height);\n        ctx.fillStyle = 'white';\n        ctx.fillText(geometry.text, width / 2, height / 2);\n        var texture = new CanvasTexture(ctx.canvas);\n        texture.minFilter = LinearFilter;\n        texture.wrapS = ClampToEdgeWrapping;\n        texture.wrapT = ClampToEdgeWrapping;\n        var material = new SpriteMaterial({\n          map: texture,\n          depthTest: false\n        });\n        var sprite = new Sprite(material);\n        sprite.position.set(geometry.point[0], geometry.point[1], geometry.point[2]);\n        sprite.scale.set(width / 10, height / 10, 1.0);\n        sprite.userData['attributes'] = attributes;\n        sprite.userData['objectType'] = obj.objectType;\n\n        if (attributes.name) {\n          sprite.name = attributes.name;\n        }\n\n        return sprite;\n\n      case 'Light':\n        geometry = obj.geometry;\n        var light;\n\n        if (geometry.isDirectionalLight) {\n          light = new DirectionalLight();\n          light.castShadow = attributes.castsShadows;\n          light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n          light.target.position.set(geometry.direction[0], geometry.direction[1], geometry.direction[2]);\n          light.shadow.normalBias = 0.1;\n        } else if (geometry.isPointLight) {\n          light = new PointLight();\n          light.castShadow = attributes.castsShadows;\n          light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n          light.shadow.normalBias = 0.1;\n        } else if (geometry.isRectangularLight) {\n          light = new RectAreaLight();\n          var width = Math.abs(geometry.width[2]);\n          var height = Math.abs(geometry.length[0]);\n          light.position.set(geometry.location[0] - height / 2, geometry.location[1], geometry.location[2] - width / 2);\n          light.height = height;\n          light.width = width;\n          light.lookAt(new Vector3(geometry.direction[0], geometry.direction[1], geometry.direction[2]));\n        } else if (geometry.isSpotLight) {\n          light = new SpotLight();\n          light.castShadow = attributes.castsShadows;\n          light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n          light.target.position.set(geometry.direction[0], geometry.direction[1], geometry.direction[2]);\n          light.angle = geometry.spotAngleRadians;\n          light.shadow.normalBias = 0.1;\n        } else if (geometry.isLinearLight) {\n          console.warn('THREE.3DMLoader:  No conversion exists for linear lights.');\n          return;\n        }\n\n        if (light) {\n          light.intensity = geometry.intensity;\n          var _color = geometry.diffuse;\n          var color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n          light.color = color;\n          light.userData['attributes'] = attributes;\n          light.userData['objectType'] = obj.objectType;\n        }\n\n        return light;\n    }\n  },\n  _initLibrary: function _initLibrary() {\n    var _this3 = this;\n\n    if (!this.libraryPending) {\n      // Load rhino3dm wrapper.\n      var jsLoader = new FileLoader(this.manager);\n      jsLoader.setPath(this.libraryPath);\n      var jsContent = new Promise(function (resolve, reject) {\n        jsLoader.load('rhino3dm.js', resolve, undefined, reject);\n      }); // Load rhino3dm WASM binary.\n\n      var binaryLoader = new FileLoader(this.manager);\n      binaryLoader.setPath(this.libraryPath);\n      binaryLoader.setResponseType('arraybuffer');\n      var binaryContent = new Promise(function (resolve, reject) {\n        binaryLoader.load('rhino3dm.wasm', resolve, undefined, reject);\n      });\n      this.libraryPending = Promise.all([jsContent, binaryContent]).then(function (_ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            jsContent = _ref2[0],\n            binaryContent = _ref2[1];\n\n        //this.libraryBinary = binaryContent;\n        _this3.libraryConfig.wasmBinary = binaryContent;\n        var fn = Rhino3dmLoader.Rhino3dmWorker.toString();\n        var body = ['/* rhino3dm.js */', jsContent, '/* worker */', fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))].join('\\n');\n        _this3.workerSourceURL = URL.createObjectURL(new Blob([body]));\n      });\n    }\n\n    return this.libraryPending;\n  },\n  _getWorker: function _getWorker(taskCost) {\n    var _this4 = this;\n\n    return this._initLibrary().then(function () {\n      if (_this4.workerPool.length < _this4.workerLimit) {\n        var worker = new Worker(_this4.workerSourceURL);\n        worker._callbacks = {};\n        worker._taskCosts = {};\n        worker._taskLoad = 0;\n        worker.postMessage({\n          type: 'init',\n          libraryConfig: _this4.libraryConfig\n        });\n\n        worker.onmessage = function (e) {\n          var message = e.data;\n\n          switch (message.type) {\n            case 'decode':\n              worker._callbacks[message.id].resolve(message);\n\n              break;\n\n            case 'error':\n              worker._callbacks[message.id].reject(message);\n\n              break;\n\n            default:\n              console.error('THREE.Rhino3dmLoader: Unexpected message, \"' + message.type + '\"');\n          }\n        };\n\n        _this4.workerPool.push(worker);\n      } else {\n        _this4.workerPool.sort(function (a, b) {\n          return a._taskLoad > b._taskLoad ? -1 : 1;\n        });\n      }\n\n      var worker = _this4.workerPool[_this4.workerPool.length - 1];\n      worker._taskLoad += taskCost;\n      return worker;\n    });\n  },\n  _releaseTask: function _releaseTask(worker, taskID) {\n    worker._taskLoad -= worker._taskCosts[taskID];\n    delete worker._callbacks[taskID];\n    delete worker._taskCosts[taskID];\n  },\n  dispose: function dispose() {\n    for (var i = 0; i < this.workerPool.length; ++i) {\n      this.workerPool[i].terminate();\n    }\n\n    this.workerPool.length = 0;\n    return this;\n  }\n});\n/* WEB WORKER */\n\nRhino3dmLoader.Rhino3dmWorker = function () {\n  var libraryPending;\n  var libraryConfig;\n  var rhino;\n\n  onmessage = function onmessage(e) {\n    var message = e.data;\n\n    switch (message.type) {\n      case 'init':\n        libraryConfig = message.libraryConfig;\n        var wasmBinary = libraryConfig.wasmBinary;\n        var RhinoModule;\n        libraryPending = new Promise(function (resolve) {\n          /* Like Basis Loader */\n          RhinoModule = {\n            wasmBinary: wasmBinary,\n            onRuntimeInitialized: resolve\n          };\n          rhino3dm(RhinoModule); // eslint-disable-line no-undef\n        }).then(function () {\n          rhino = RhinoModule;\n        });\n        break;\n\n      case 'decode':\n        var buffer = message.buffer;\n        libraryPending.then(function () {\n          var data = decodeObjects(rhino, buffer);\n          self.postMessage({\n            type: 'decode',\n            id: message.id,\n            data: data\n          });\n        });\n        break;\n    }\n  };\n\n  function decodeObjects(rhino, buffer) {\n    var arr = new Uint8Array(buffer);\n    var doc = rhino.File3dm.fromByteArray(arr);\n    var objects = [];\n    var materials = [];\n    var layers = [];\n    var views = [];\n    var namedViews = [];\n    var groups = []; //Handle objects\n\n    var objs = doc.objects();\n    var cnt = objs.count;\n\n    for (var i = 0; i < cnt; i++) {\n      var _object = objs.get(i);\n\n      var object = extractObjectData(_object, doc);\n\n      _object.delete();\n\n      if (object) {\n        objects.push(object);\n      }\n    } // Handle instance definitions\n    // console.log( `Instance Definitions Count: ${doc.instanceDefinitions().count()}` );\n\n\n    for (var _i2 = 0; _i2 < doc.instanceDefinitions().count(); _i2++) {\n      var idef = doc.instanceDefinitions().get(_i2);\n      var idefAttributes = extractProperties(idef);\n      idefAttributes.objectIds = idef.getObjectIds();\n      objects.push({\n        geometry: null,\n        attributes: idefAttributes,\n        objectType: 'InstanceDefinition'\n      });\n    } // Handle materials\n\n\n    var textureTypes = [// rhino.TextureType.Bitmap,\n    rhino.TextureType.Diffuse, rhino.TextureType.Bump, rhino.TextureType.Transparency, rhino.TextureType.Opacity, rhino.TextureType.Emap];\n    var pbrTextureTypes = [rhino.TextureType.PBR_BaseColor, rhino.TextureType.PBR_Subsurface, rhino.TextureType.PBR_SubsurfaceScattering, rhino.TextureType.PBR_SubsurfaceScatteringRadius, rhino.TextureType.PBR_Metallic, rhino.TextureType.PBR_Specular, rhino.TextureType.PBR_SpecularTint, rhino.TextureType.PBR_Roughness, rhino.TextureType.PBR_Anisotropic, rhino.TextureType.PBR_Anisotropic_Rotation, rhino.TextureType.PBR_Sheen, rhino.TextureType.PBR_SheenTint, rhino.TextureType.PBR_Clearcoat, rhino.TextureType.PBR_ClearcoatBump, rhino.TextureType.PBR_ClearcoatRoughness, rhino.TextureType.PBR_OpacityIor, rhino.TextureType.PBR_OpacityRoughness, rhino.TextureType.PBR_Emission, rhino.TextureType.PBR_AmbientOcclusion, rhino.TextureType.PBR_Displacement];\n\n    for (var _i3 = 0; _i3 < doc.materials().count(); _i3++) {\n      var _material = doc.materials().get(_i3);\n\n      var _pbrMaterial = _material.physicallyBased();\n\n      var material = extractProperties(_material);\n      var textures = [];\n\n      for (var j = 0; j < textureTypes.length; j++) {\n        var _texture = _material.getTexture(textureTypes[j]);\n\n        if (_texture) {\n          var textureType = textureTypes[j].constructor.name;\n          textureType = textureType.substring(12, textureType.length);\n          var texture = {\n            type: textureType\n          };\n          var image = doc.getEmbeddedFileAsBase64(_texture.fileName);\n\n          if (image) {\n            texture.image = 'data:image/png;base64,' + image;\n          } else {\n            console.warn(\"THREE.3DMLoader: Image for \".concat(textureType, \" texture not embedded in file.\"));\n            texture.image = null;\n          }\n\n          textures.push(texture);\n\n          _texture.delete();\n        }\n      }\n\n      material.textures = textures;\n\n      if (_pbrMaterial.supported) {\n        console.log('pbr true');\n\n        for (var _j2 = 0; _j2 < pbrTextureTypes.length; _j2++) {\n          var _texture = _material.getTexture(textureTypes[_j2]);\n\n          if (_texture) {\n            var image = doc.getEmbeddedFileAsBase64(_texture.fileName);\n            var textureType = textureTypes[_j2].constructor.name;\n            textureType = textureType.substring(12, textureType.length);\n            var texture = {\n              type: textureType,\n              image: 'data:image/png;base64,' + image\n            };\n            textures.push(texture);\n\n            _texture.delete();\n          }\n        }\n\n        var pbMaterialProperties = extractProperties(_material.physicallyBased());\n        material = Object.assign(pbMaterialProperties, material);\n      }\n\n      materials.push(material);\n\n      _material.delete();\n\n      _pbrMaterial.delete();\n    } // Handle layers\n\n\n    for (var _i4 = 0; _i4 < doc.layers().count(); _i4++) {\n      var _layer = doc.layers().get(_i4);\n\n      var layer = extractProperties(_layer);\n      layers.push(layer);\n\n      _layer.delete();\n    } // Handle views\n\n\n    for (var _i5 = 0; _i5 < doc.views().count(); _i5++) {\n      var _view = doc.views().get(_i5);\n\n      var view = extractProperties(_view);\n      views.push(view);\n\n      _view.delete();\n    } // Handle named views\n\n\n    for (var _i6 = 0; _i6 < doc.namedViews().count(); _i6++) {\n      var _namedView = doc.namedViews().get(_i6);\n\n      var namedView = extractProperties(_namedView);\n      namedViews.push(namedView);\n\n      _namedView.delete();\n    } // Handle groups\n\n\n    for (var _i7 = 0; _i7 < doc.groups().count(); _i7++) {\n      var _group = doc.groups().get(_i7);\n\n      var group = extractProperties(_group);\n      groups.push(group);\n\n      _group.delete();\n    } // Handle settings\n\n\n    var settings = extractProperties(doc.settings()); //TODO: Handle other document stuff like dimstyles, instance definitions, bitmaps etc.\n    // Handle dimstyles\n    // console.log( `Dimstyle Count: ${doc.dimstyles().count()}` );\n    // Handle bitmaps\n    // console.log( `Bitmap Count: ${doc.bitmaps().count()}` );\n    // Handle strings -- this seems to be broken at the moment in rhino3dm\n    // console.log( `Document Strings Count: ${doc.strings().count()}` );\n\n    /*\n    for( var i = 0; i < doc.strings().count(); i++ ){\n    var _string= doc.strings().get( i );\n    console.log(_string);\n    var string = extractProperties( _group );\n    strings.push( string );\n    _string.delete();\n    }\n    */\n\n    doc.delete();\n    return {\n      objects: objects,\n      materials: materials,\n      layers: layers,\n      views: views,\n      namedViews: namedViews,\n      groups: groups,\n      settings: settings\n    };\n  }\n\n  function extractObjectData(object, doc) {\n    var _geometry = object.geometry();\n\n    var _attributes = object.attributes();\n\n    var objectType = _geometry.objectType;\n    var geometry = null;\n    var attributes = null; // skip instance definition objects\n    //if( _attributes.isInstanceDefinitionObject ) { continue; }\n    // TODO: handle other geometry types\n\n    switch (objectType) {\n      case rhino.ObjectType.Curve:\n        var pts = curveToPoints(_geometry, 100);\n        var position = {};\n        var attributes = {};\n        var data = {};\n        position.itemSize = 3;\n        position.type = 'Float32Array';\n        position.array = [];\n\n        for (var j = 0; j < pts.length; j++) {\n          position.array.push(pts[j][0]);\n          position.array.push(pts[j][1]);\n          position.array.push(pts[j][2]);\n        }\n\n        attributes.position = position;\n        data.attributes = attributes;\n        geometry = {\n          data: data\n        };\n        break;\n\n      case rhino.ObjectType.Point:\n        var pt = _geometry.location;\n        var position = {};\n        var color = {};\n        var attributes = {};\n        var data = {};\n        position.itemSize = 3;\n        position.type = 'Float32Array';\n        position.array = [pt[0], pt[1], pt[2]];\n\n        var _color = _attributes.drawColor(doc);\n\n        color.itemSize = 3;\n        color.type = 'Float32Array';\n        color.array = [_color.r / 255.0, _color.g / 255.0, _color.b / 255.0];\n        attributes.position = position;\n        attributes.color = color;\n        data.attributes = attributes;\n        geometry = {\n          data: data\n        };\n        break;\n\n      case rhino.ObjectType.PointSet:\n      case rhino.ObjectType.Mesh:\n        geometry = _geometry.toThreejsJSON();\n        break;\n\n      case rhino.ObjectType.Brep:\n        var faces = _geometry.faces();\n\n        var mesh = new rhino.Mesh();\n\n        for (var faceIndex = 0; faceIndex < faces.count; faceIndex++) {\n          var face = faces.get(faceIndex);\n\n          var _mesh = face.getMesh(rhino.MeshType.Any);\n\n          if (_mesh) {\n            mesh.append(_mesh);\n\n            _mesh.delete();\n          }\n\n          face.delete();\n        }\n\n        if (mesh.faces().count > 0) {\n          mesh.compact();\n          geometry = mesh.toThreejsJSON();\n          faces.delete();\n        }\n\n        mesh.delete();\n        break;\n\n      case rhino.ObjectType.Extrusion:\n        var mesh = _geometry.getMesh(rhino.MeshType.Any);\n\n        if (mesh) {\n          geometry = mesh.toThreejsJSON();\n          mesh.delete();\n        }\n\n        break;\n\n      case rhino.ObjectType.TextDot:\n        geometry = extractProperties(_geometry);\n        break;\n\n      case rhino.ObjectType.Light:\n        geometry = extractProperties(_geometry);\n        break;\n\n      case rhino.ObjectType.InstanceReference:\n        geometry = extractProperties(_geometry);\n        geometry.xform = extractProperties(_geometry.xform);\n        geometry.xform.array = _geometry.xform.toFloatArray(true);\n        break;\n\n      case rhino.ObjectType.SubD:\n        // TODO: precalculate resulting vertices and faces and warn on excessive results\n        _geometry.subdivide(3);\n\n        var mesh = rhino.Mesh.createFromSubDControlNet(_geometry);\n\n        if (mesh) {\n          geometry = mesh.toThreejsJSON();\n          mesh.delete();\n        }\n\n        break;\n\n      /*\n      case rhino.ObjectType.Annotation:\n      case rhino.ObjectType.Hatch:\n      case rhino.ObjectType.ClipPlane:\n      */\n\n      default:\n        console.warn(\"THREE.3DMLoader: TODO: Implement \".concat(objectType.constructor.name));\n        break;\n    }\n\n    if (geometry) {\n      var attributes = extractProperties(_attributes);\n      attributes.geometry = extractProperties(_geometry);\n\n      if (_attributes.groupCount > 0) {\n        attributes.groupIds = _attributes.getGroupList();\n      }\n\n      if (_attributes.userStringCount > 0) {\n        attributes.userStrings = _attributes.getUserStrings();\n      }\n\n      if (_geometry.userStringCount > 0) {\n        attributes.geometry.userStrings = _geometry.getUserStrings();\n      }\n\n      attributes.drawColor = _attributes.drawColor(doc);\n      objectType = objectType.constructor.name;\n      objectType = objectType.substring(11, objectType.length);\n      return {\n        geometry: geometry,\n        attributes: attributes,\n        objectType: objectType\n      };\n    } else {\n      console.warn(\"THREE.3DMLoader: \".concat(objectType.constructor.name, \" has no associated mesh geometry.\"));\n    }\n  }\n\n  function extractProperties(object) {\n    var result = {};\n\n    for (var property in object) {\n      var value = object[property];\n\n      if (typeof value !== 'function') {\n        if (typeof value === 'object' && value !== null && value.hasOwnProperty('constructor')) {\n          result[property] = {\n            name: value.constructor.name,\n            value: value.value\n          };\n        } else {\n          result[property] = value;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function curveToPoints(curve, pointLimit) {\n    var pointCount = pointLimit;\n    var rc = [];\n    var ts = [];\n\n    if (curve instanceof rhino.LineCurve) {\n      return [curve.pointAtStart, curve.pointAtEnd];\n    }\n\n    if (curve instanceof rhino.PolylineCurve) {\n      pointCount = curve.pointCount;\n\n      for (var i = 0; i < pointCount; i++) {\n        rc.push(curve.point(i));\n      }\n\n      return rc;\n    }\n\n    if (curve instanceof rhino.PolyCurve) {\n      var segmentCount = curve.segmentCount;\n\n      for (var _i8 = 0; _i8 < segmentCount; _i8++) {\n        var segment = curve.segmentCurve(_i8);\n        var segmentArray = curveToPoints(segment, pointCount);\n        rc = rc.concat(segmentArray);\n        segment.delete();\n      }\n\n      return rc;\n    }\n\n    if (curve instanceof rhino.ArcCurve) {\n      pointCount = Math.floor(curve.angleDegrees / 5);\n      pointCount = pointCount < 2 ? 2 : pointCount; // alternative to this hardcoded version: https://stackoverflow.com/a/18499923/2179399\n    }\n\n    if (curve instanceof rhino.NurbsCurve && curve.degree === 1) {\n      var pLine = curve.tryGetPolyline();\n\n      for (var _i9 = 0; _i9 < pLine.count; _i9++) {\n        rc.push(pLine.get(_i9));\n      }\n\n      pLine.delete();\n      return rc;\n    }\n\n    var domain = curve.domain;\n    var divisions = pointCount - 1.0;\n\n    for (var j = 0; j < pointCount; j++) {\n      var t = domain[0] + j / divisions * (domain[1] - domain[0]);\n\n      if (t === domain[0] || t === domain[1]) {\n        ts.push(t);\n        continue;\n      }\n\n      var tan = curve.tangentAt(t);\n      var prevTan = curve.tangentAt(ts.slice(-1)[0]); // Duplicated from THREE.Vector3\n      // How to pass imports to worker?\n\n      var tS = tan[0] * tan[0] + tan[1] * tan[1] + tan[2] * tan[2];\n      var ptS = prevTan[0] * prevTan[0] + prevTan[1] * prevTan[1] + prevTan[2] * prevTan[2];\n      var denominator = Math.sqrt(tS * ptS);\n      var angle;\n\n      if (denominator === 0) {\n        angle = Math.PI / 2;\n      } else {\n        var theta = (tan.x * prevTan.x + tan.y * prevTan.y + tan.z * prevTan.z) / denominator;\n        angle = Math.acos(Math.max(-1, Math.min(1, theta)));\n      }\n\n      if (angle < 0.1) continue;\n      ts.push(t);\n    }\n\n    rc = ts.map(function (t) {\n      return curve.pointAt(t);\n    });\n    return rc;\n  }\n};\n\nexport { Rhino3dmLoader };","map":{"version":3,"names":["Loader","FileLoader","MeshStandardMaterial","Color","TextureLoader","Object3D","Matrix4","BufferGeometryLoader","DirectionalLight","PointLight","RectAreaLight","Vector3","SpotLight","CanvasTexture","LinearFilter","ClampToEdgeWrapping","SpriteMaterial","Sprite","LineBasicMaterial","Line","Mesh","PointsMaterial","Points","Rhino3dmLoader","manager","call","libraryPath","libraryPending","libraryBinary","libraryConfig","url","workerLimit","workerPool","workerNextTaskID","workerSourceURL","workerConfig","materials","taskCache","WeakMap","prototype","Object","assign","create","constructor","setLibraryPath","path","setWorkerLimit","load","onLoad","onProgress","onError","loader","setPath","setResponseType","setRequestHeader","requestHeader","buffer","has","cachedTask","get","promise","then","catch","decodeObjects","debug","console","log","map","worker","_taskLoad","taskID","taskCost","byteLength","objectPending","_getWorker","_worker","Promise","resolve","reject","_callbacks","postMessage","type","id","message","_createGeometry","data","_releaseTask","set","parse","_compareMaterials","material","mat","name","color","r","g","b","i","length","m","_mat","JSON","stringify","push","_createMaterial","undefined","metalness","side","_diffuseColor","diffuseColor","diffusecolor","transparent","transparency","opacity","textureLoader","textures","texture","image","bumpMap","alphaMap","envMap","object","instanceDefinitionObjects","instanceDefinitions","instanceReferences","userData","layers","groups","settings","objects","obj","attributes","objectType","materialIndex","rMaterial","_object","_createObject","layer","layerIndex","visible","isInstanceDefinitionObject","add","iDef","j","objectIds","objId","p","idoId","iRef","geometry","parentIdefId","iRefObject","xf","xform","array","matrix","applyMatrix4","clone","hasOwnProperty","vertexColors","sizeAttenuation","size","_color","drawColor","points","mesh","castShadow","castsShadows","receiveShadow","receivesShadows","lines","ctx","document","createElement","getContext","font","fontHeight","fontFace","width","measureText","text","height","window","devicePixelRatio","canvas","style","setTransform","textBaseline","textAlign","fillStyle","a","fillRect","fillText","minFilter","wrapS","wrapT","depthTest","sprite","position","point","scale","light","isDirectionalLight","location","target","direction","shadow","normalBias","isPointLight","isRectangularLight","Math","abs","lookAt","isSpotLight","angle","spotAngleRadians","isLinearLight","warn","intensity","diffuse","_initLibrary","jsLoader","jsContent","binaryLoader","binaryContent","all","wasmBinary","fn","Rhino3dmWorker","toString","body","substring","indexOf","lastIndexOf","join","URL","createObjectURL","Blob","Worker","_taskCosts","onmessage","e","error","sort","dispose","terminate","rhino","RhinoModule","onRuntimeInitialized","rhino3dm","self","arr","Uint8Array","doc","File3dm","fromByteArray","views","namedViews","objs","cnt","count","extractObjectData","delete","idef","idefAttributes","extractProperties","getObjectIds","textureTypes","TextureType","Diffuse","Bump","Transparency","Opacity","Emap","pbrTextureTypes","PBR_BaseColor","PBR_Subsurface","PBR_SubsurfaceScattering","PBR_SubsurfaceScatteringRadius","PBR_Metallic","PBR_Specular","PBR_SpecularTint","PBR_Roughness","PBR_Anisotropic","PBR_Anisotropic_Rotation","PBR_Sheen","PBR_SheenTint","PBR_Clearcoat","PBR_ClearcoatBump","PBR_ClearcoatRoughness","PBR_OpacityIor","PBR_OpacityRoughness","PBR_Emission","PBR_AmbientOcclusion","PBR_Displacement","_material","_pbrMaterial","physicallyBased","_texture","getTexture","textureType","getEmbeddedFileAsBase64","fileName","supported","pbMaterialProperties","_layer","_view","view","_namedView","namedView","_group","group","_geometry","_attributes","ObjectType","Curve","pts","curveToPoints","itemSize","Point","pt","PointSet","toThreejsJSON","Brep","faces","faceIndex","face","_mesh","getMesh","MeshType","Any","append","compact","Extrusion","TextDot","Light","InstanceReference","toFloatArray","SubD","subdivide","createFromSubDControlNet","groupCount","groupIds","getGroupList","userStringCount","userStrings","getUserStrings","result","property","value","curve","pointLimit","pointCount","rc","ts","LineCurve","pointAtStart","pointAtEnd","PolylineCurve","PolyCurve","segmentCount","segment","segmentCurve","segmentArray","concat","ArcCurve","floor","angleDegrees","NurbsCurve","degree","pLine","tryGetPolyline","domain","divisions","t","tan","tangentAt","prevTan","slice","tS","ptS","denominator","sqrt","PI","theta","x","y","z","acos","max","min","pointAt"],"sources":["/Users/98yaroslavgorban/Desktop/gltfjsx-forked/node_modules/three-stdlib/loaders/3DMLoader.js"],"sourcesContent":["import { Loader, FileLoader, MeshStandardMaterial, Color, TextureLoader, Object3D, Matrix4, BufferGeometryLoader, DirectionalLight, PointLight, RectAreaLight, Vector3, SpotLight, CanvasTexture, LinearFilter, ClampToEdgeWrapping, SpriteMaterial, Sprite, LineBasicMaterial, Line, Mesh, PointsMaterial, Points } from 'three';\n\nvar Rhino3dmLoader = function (manager) {\n  Loader.call(this, manager);\n  this.libraryPath = '';\n  this.libraryPending = null;\n  this.libraryBinary = null;\n  this.libraryConfig = {};\n  this.url = '';\n  this.workerLimit = 4;\n  this.workerPool = [];\n  this.workerNextTaskID = 1;\n  this.workerSourceURL = '';\n  this.workerConfig = {};\n  this.materials = [];\n};\n\nRhino3dmLoader.taskCache = new WeakMap();\nRhino3dmLoader.prototype = Object.assign(Object.create(Loader.prototype), {\n  constructor: Rhino3dmLoader,\n  setLibraryPath: function (path) {\n    this.libraryPath = path;\n    return this;\n  },\n  setWorkerLimit: function (workerLimit) {\n    this.workerLimit = workerLimit;\n    return this;\n  },\n  load: function (url, onLoad, onProgress, onError) {\n    var loader = new FileLoader(this.manager);\n    loader.setPath(this.path);\n    loader.setResponseType('arraybuffer');\n    loader.setRequestHeader(this.requestHeader);\n    this.url = url;\n    loader.load(url, buffer => {\n      // Check for an existing task using this buffer. A transferred buffer cannot be transferred\n      // again from this thread.\n      if (Rhino3dmLoader.taskCache.has(buffer)) {\n        var cachedTask = Rhino3dmLoader.taskCache.get(buffer);\n        return cachedTask.promise.then(onLoad).catch(onError);\n      }\n\n      this.decodeObjects(buffer, url).then(onLoad).catch(onError);\n    }, onProgress, onError);\n  },\n  debug: function () {\n    console.log('Task load: ', this.workerPool.map(worker => worker._taskLoad));\n  },\n  decodeObjects: function (buffer, url) {\n    var worker;\n    var taskID;\n    var taskCost = buffer.byteLength;\n\n    var objectPending = this._getWorker(taskCost).then(_worker => {\n      worker = _worker;\n      taskID = this.workerNextTaskID++; //hmmm\n\n      return new Promise((resolve, reject) => {\n        worker._callbacks[taskID] = {\n          resolve,\n          reject\n        };\n        worker.postMessage({\n          type: 'decode',\n          id: taskID,\n          buffer\n        }, [buffer]); //this.debug();\n      });\n    }).then(message => this._createGeometry(message.data)); // Remove task from the task list.\n    // Note: replaced '.finally()' with '.catch().then()' block - iOS 11 support (#19416)\n\n\n    objectPending.catch(() => true).then(() => {\n      if (worker && taskID) {\n        this._releaseTask(worker, taskID); //this.debug();\n\n      }\n    }); // Cache the task result.\n\n    Rhino3dmLoader.taskCache.set(buffer, {\n      url: url,\n      promise: objectPending\n    });\n    return objectPending;\n  },\n  parse: function (data, onLoad, onError) {\n    this.decodeObjects(data, '').then(onLoad).catch(onError);\n  },\n  _compareMaterials: function (material) {\n    var mat = {};\n    mat.name = material.name;\n    mat.color = {};\n    mat.color.r = material.color.r;\n    mat.color.g = material.color.g;\n    mat.color.b = material.color.b;\n    mat.type = material.type;\n\n    for (let i = 0; i < this.materials.length; i++) {\n      var m = this.materials[i];\n      var _mat = {};\n      _mat.name = m.name;\n      _mat.color = {};\n      _mat.color.r = m.color.r;\n      _mat.color.g = m.color.g;\n      _mat.color.b = m.color.b;\n      _mat.type = m.type;\n\n      if (JSON.stringify(mat) === JSON.stringify(_mat)) {\n        return m;\n      }\n    }\n\n    this.materials.push(material);\n    return material;\n  },\n  _createMaterial: function (material) {\n    if (material === undefined) {\n      return new MeshStandardMaterial({\n        color: new Color(1, 1, 1),\n        metalness: 0.8,\n        name: 'default',\n        side: 2\n      });\n    }\n\n    var _diffuseColor = material.diffuseColor;\n    var diffusecolor = new Color(_diffuseColor.r / 255.0, _diffuseColor.g / 255.0, _diffuseColor.b / 255.0);\n\n    if (_diffuseColor.r === 0 && _diffuseColor.g === 0 && _diffuseColor.b === 0) {\n      diffusecolor.r = 1;\n      diffusecolor.g = 1;\n      diffusecolor.b = 1;\n    } // console.log( material );\n\n\n    var mat = new MeshStandardMaterial({\n      color: diffusecolor,\n      name: material.name,\n      side: 2,\n      transparent: material.transparency > 0 ? true : false,\n      opacity: 1.0 - material.transparency\n    });\n    var textureLoader = new TextureLoader();\n\n    for (let i = 0; i < material.textures.length; i++) {\n      var texture = material.textures[i];\n\n      if (texture.image !== null) {\n        var map = textureLoader.load(texture.image);\n\n        switch (texture.type) {\n          case 'Diffuse':\n            mat.map = map;\n            break;\n\n          case 'Bump':\n            mat.bumpMap = map;\n            break;\n\n          case 'Transparency':\n            mat.alphaMap = map;\n            mat.transparent = true;\n            break;\n\n          case 'Emap':\n            mat.envMap = map;\n            break;\n        }\n      }\n    }\n\n    return mat;\n  },\n  _createGeometry: function (data) {\n    // console.log(data);\n    var object = new Object3D();\n    var instanceDefinitionObjects = [];\n    var instanceDefinitions = [];\n    var instanceReferences = [];\n    object.userData['layers'] = data.layers;\n    object.userData['groups'] = data.groups;\n    object.userData['settings'] = data.settings;\n    object.userData['objectType'] = 'File3dm';\n    object.userData['materials'] = null;\n    object.name = this.url;\n    var objects = data.objects;\n    var materials = data.materials;\n\n    for (let i = 0; i < objects.length; i++) {\n      var obj = objects[i];\n      var attributes = obj.attributes;\n\n      switch (obj.objectType) {\n        case 'InstanceDefinition':\n          instanceDefinitions.push(obj);\n          break;\n\n        case 'InstanceReference':\n          instanceReferences.push(obj);\n          break;\n\n        default:\n          if (attributes.materialIndex >= 0) {\n            var rMaterial = materials[attributes.materialIndex];\n\n            var material = this._createMaterial(rMaterial);\n\n            material = this._compareMaterials(material);\n\n            var _object = this._createObject(obj, material);\n          } else {\n            var material = this._createMaterial();\n\n            var _object = this._createObject(obj, material);\n          }\n\n          if (_object === undefined) {\n            continue;\n          }\n\n          var layer = data.layers[attributes.layerIndex];\n          _object.visible = layer ? data.layers[attributes.layerIndex].visible : true;\n\n          if (attributes.isInstanceDefinitionObject) {\n            instanceDefinitionObjects.push(_object);\n          } else {\n            object.add(_object);\n          }\n\n          break;\n      }\n    }\n\n    for (let i = 0; i < instanceDefinitions.length; i++) {\n      var iDef = instanceDefinitions[i];\n      var objects = [];\n\n      for (let j = 0; j < iDef.attributes.objectIds.length; j++) {\n        var objId = iDef.attributes.objectIds[j];\n\n        for (let p = 0; p < instanceDefinitionObjects.length; p++) {\n          var idoId = instanceDefinitionObjects[p].userData.attributes.id;\n\n          if (objId === idoId) {\n            objects.push(instanceDefinitionObjects[p]);\n          }\n        }\n      } // Currently clones geometry and does not take advantage of instancing\n\n\n      for (let j = 0; j < instanceReferences.length; j++) {\n        var iRef = instanceReferences[j];\n\n        if (iRef.geometry.parentIdefId === iDef.attributes.id) {\n          var iRefObject = new Object3D();\n          var xf = iRef.geometry.xform.array;\n          var matrix = new Matrix4();\n          matrix.set(xf[0], xf[1], xf[2], xf[3], xf[4], xf[5], xf[6], xf[7], xf[8], xf[9], xf[10], xf[11], xf[12], xf[13], xf[14], xf[15]);\n          iRefObject.applyMatrix4(matrix);\n\n          for (let p = 0; p < objects.length; p++) {\n            iRefObject.add(objects[p].clone(true));\n          }\n\n          object.add(iRefObject);\n        }\n      }\n    }\n\n    object.userData['materials'] = this.materials;\n    return object;\n  },\n  _createObject: function (obj, mat) {\n    var loader = new BufferGeometryLoader();\n    var attributes = obj.attributes;\n\n    switch (obj.objectType) {\n      case 'Point':\n      case 'PointSet':\n        var geometry = loader.parse(obj.geometry);\n        var material = null;\n\n        if (geometry.attributes.hasOwnProperty('color')) {\n          material = new PointsMaterial({\n            vertexColors: true,\n            sizeAttenuation: false,\n            size: 2\n          });\n        } else {\n          var _color = attributes.drawColor;\n          var color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n          material = new PointsMaterial({\n            color: color,\n            sizeAttenuation: false,\n            size: 2\n          });\n        }\n\n        material = this._compareMaterials(material);\n        var points = new Points(geometry, material);\n        points.userData['attributes'] = attributes;\n        points.userData['objectType'] = obj.objectType;\n\n        if (attributes.name) {\n          points.name = attributes.name;\n        }\n\n        return points;\n\n      case 'Mesh':\n      case 'Extrusion':\n      case 'SubD':\n      case 'Brep':\n        if (obj.geometry === null) return;\n        var geometry = loader.parse(obj.geometry);\n\n        if (geometry.attributes.hasOwnProperty('color')) {\n          mat.vertexColors = true;\n        }\n\n        if (mat === null) {\n          mat = this._createMaterial();\n          mat = this._compareMaterials(mat);\n        }\n\n        var mesh = new Mesh(geometry, mat);\n        mesh.castShadow = attributes.castsShadows;\n        mesh.receiveShadow = attributes.receivesShadows;\n        mesh.userData['attributes'] = attributes;\n        mesh.userData['objectType'] = obj.objectType;\n\n        if (attributes.name) {\n          mesh.name = attributes.name;\n        }\n\n        return mesh;\n\n      case 'Curve':\n        geometry = loader.parse(obj.geometry);\n        var _color = attributes.drawColor;\n        var color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n        var material = new LineBasicMaterial({\n          color: color\n        });\n        material = this._compareMaterials(material);\n        var lines = new Line(geometry, material);\n        lines.userData['attributes'] = attributes;\n        lines.userData['objectType'] = obj.objectType;\n\n        if (attributes.name) {\n          lines.name = attributes.name;\n        }\n\n        return lines;\n\n      case 'TextDot':\n        geometry = obj.geometry;\n        var ctx = document.createElement('canvas').getContext('2d');\n        var font = `${geometry.fontHeight}px ${geometry.fontFace}`;\n        ctx.font = font;\n        var width = ctx.measureText(geometry.text).width + 10;\n        var height = geometry.fontHeight + 10;\n        var r = window.devicePixelRatio;\n        ctx.canvas.width = width * r;\n        ctx.canvas.height = height * r;\n        ctx.canvas.style.width = width + 'px';\n        ctx.canvas.style.height = height + 'px';\n        ctx.setTransform(r, 0, 0, r, 0, 0);\n        ctx.font = font;\n        ctx.textBaseline = 'middle';\n        ctx.textAlign = 'center';\n        var color = attributes.drawColor;\n        ctx.fillStyle = `rgba(${color.r},${color.g},${color.b},${color.a})`;\n        ctx.fillRect(0, 0, width, height);\n        ctx.fillStyle = 'white';\n        ctx.fillText(geometry.text, width / 2, height / 2);\n        var texture = new CanvasTexture(ctx.canvas);\n        texture.minFilter = LinearFilter;\n        texture.wrapS = ClampToEdgeWrapping;\n        texture.wrapT = ClampToEdgeWrapping;\n        var material = new SpriteMaterial({\n          map: texture,\n          depthTest: false\n        });\n        var sprite = new Sprite(material);\n        sprite.position.set(geometry.point[0], geometry.point[1], geometry.point[2]);\n        sprite.scale.set(width / 10, height / 10, 1.0);\n        sprite.userData['attributes'] = attributes;\n        sprite.userData['objectType'] = obj.objectType;\n\n        if (attributes.name) {\n          sprite.name = attributes.name;\n        }\n\n        return sprite;\n\n      case 'Light':\n        geometry = obj.geometry;\n        var light;\n\n        if (geometry.isDirectionalLight) {\n          light = new DirectionalLight();\n          light.castShadow = attributes.castsShadows;\n          light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n          light.target.position.set(geometry.direction[0], geometry.direction[1], geometry.direction[2]);\n          light.shadow.normalBias = 0.1;\n        } else if (geometry.isPointLight) {\n          light = new PointLight();\n          light.castShadow = attributes.castsShadows;\n          light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n          light.shadow.normalBias = 0.1;\n        } else if (geometry.isRectangularLight) {\n          light = new RectAreaLight();\n          var width = Math.abs(geometry.width[2]);\n          var height = Math.abs(geometry.length[0]);\n          light.position.set(geometry.location[0] - height / 2, geometry.location[1], geometry.location[2] - width / 2);\n          light.height = height;\n          light.width = width;\n          light.lookAt(new Vector3(geometry.direction[0], geometry.direction[1], geometry.direction[2]));\n        } else if (geometry.isSpotLight) {\n          light = new SpotLight();\n          light.castShadow = attributes.castsShadows;\n          light.position.set(geometry.location[0], geometry.location[1], geometry.location[2]);\n          light.target.position.set(geometry.direction[0], geometry.direction[1], geometry.direction[2]);\n          light.angle = geometry.spotAngleRadians;\n          light.shadow.normalBias = 0.1;\n        } else if (geometry.isLinearLight) {\n          console.warn('THREE.3DMLoader:  No conversion exists for linear lights.');\n          return;\n        }\n\n        if (light) {\n          light.intensity = geometry.intensity;\n          var _color = geometry.diffuse;\n          var color = new Color(_color.r / 255.0, _color.g / 255.0, _color.b / 255.0);\n          light.color = color;\n          light.userData['attributes'] = attributes;\n          light.userData['objectType'] = obj.objectType;\n        }\n\n        return light;\n    }\n  },\n  _initLibrary: function () {\n    if (!this.libraryPending) {\n      // Load rhino3dm wrapper.\n      var jsLoader = new FileLoader(this.manager);\n      jsLoader.setPath(this.libraryPath);\n      var jsContent = new Promise((resolve, reject) => {\n        jsLoader.load('rhino3dm.js', resolve, undefined, reject);\n      }); // Load rhino3dm WASM binary.\n\n      var binaryLoader = new FileLoader(this.manager);\n      binaryLoader.setPath(this.libraryPath);\n      binaryLoader.setResponseType('arraybuffer');\n      var binaryContent = new Promise((resolve, reject) => {\n        binaryLoader.load('rhino3dm.wasm', resolve, undefined, reject);\n      });\n      this.libraryPending = Promise.all([jsContent, binaryContent]).then(([jsContent, binaryContent]) => {\n        //this.libraryBinary = binaryContent;\n        this.libraryConfig.wasmBinary = binaryContent;\n        var fn = Rhino3dmLoader.Rhino3dmWorker.toString();\n        var body = ['/* rhino3dm.js */', jsContent, '/* worker */', fn.substring(fn.indexOf('{') + 1, fn.lastIndexOf('}'))].join('\\n');\n        this.workerSourceURL = URL.createObjectURL(new Blob([body]));\n      });\n    }\n\n    return this.libraryPending;\n  },\n  _getWorker: function (taskCost) {\n    return this._initLibrary().then(() => {\n      if (this.workerPool.length < this.workerLimit) {\n        var worker = new Worker(this.workerSourceURL);\n        worker._callbacks = {};\n        worker._taskCosts = {};\n        worker._taskLoad = 0;\n        worker.postMessage({\n          type: 'init',\n          libraryConfig: this.libraryConfig\n        });\n\n        worker.onmessage = function (e) {\n          var message = e.data;\n\n          switch (message.type) {\n            case 'decode':\n              worker._callbacks[message.id].resolve(message);\n\n              break;\n\n            case 'error':\n              worker._callbacks[message.id].reject(message);\n\n              break;\n\n            default:\n              console.error('THREE.Rhino3dmLoader: Unexpected message, \"' + message.type + '\"');\n          }\n        };\n\n        this.workerPool.push(worker);\n      } else {\n        this.workerPool.sort(function (a, b) {\n          return a._taskLoad > b._taskLoad ? -1 : 1;\n        });\n      }\n\n      var worker = this.workerPool[this.workerPool.length - 1];\n      worker._taskLoad += taskCost;\n      return worker;\n    });\n  },\n  _releaseTask: function (worker, taskID) {\n    worker._taskLoad -= worker._taskCosts[taskID];\n    delete worker._callbacks[taskID];\n    delete worker._taskCosts[taskID];\n  },\n  dispose: function () {\n    for (let i = 0; i < this.workerPool.length; ++i) {\n      this.workerPool[i].terminate();\n    }\n\n    this.workerPool.length = 0;\n    return this;\n  }\n});\n/* WEB WORKER */\n\nRhino3dmLoader.Rhino3dmWorker = function () {\n  var libraryPending;\n  var libraryConfig;\n  var rhino;\n\n  onmessage = function (e) {\n    var message = e.data;\n\n    switch (message.type) {\n      case 'init':\n        libraryConfig = message.libraryConfig;\n        var wasmBinary = libraryConfig.wasmBinary;\n        var RhinoModule;\n        libraryPending = new Promise(function (resolve) {\n          /* Like Basis Loader */\n          RhinoModule = {\n            wasmBinary,\n            onRuntimeInitialized: resolve\n          };\n          rhino3dm(RhinoModule); // eslint-disable-line no-undef\n        }).then(() => {\n          rhino = RhinoModule;\n        });\n        break;\n\n      case 'decode':\n        var buffer = message.buffer;\n        libraryPending.then(() => {\n          var data = decodeObjects(rhino, buffer);\n          self.postMessage({\n            type: 'decode',\n            id: message.id,\n            data\n          });\n        });\n        break;\n    }\n  };\n\n  function decodeObjects(rhino, buffer) {\n    var arr = new Uint8Array(buffer);\n    var doc = rhino.File3dm.fromByteArray(arr);\n    var objects = [];\n    var materials = [];\n    var layers = [];\n    var views = [];\n    var namedViews = [];\n    var groups = []; //Handle objects\n\n    var objs = doc.objects();\n    var cnt = objs.count;\n\n    for (let i = 0; i < cnt; i++) {\n      var _object = objs.get(i);\n\n      var object = extractObjectData(_object, doc);\n\n      _object.delete();\n\n      if (object) {\n        objects.push(object);\n      }\n    } // Handle instance definitions\n    // console.log( `Instance Definitions Count: ${doc.instanceDefinitions().count()}` );\n\n\n    for (let i = 0; i < doc.instanceDefinitions().count(); i++) {\n      var idef = doc.instanceDefinitions().get(i);\n      var idefAttributes = extractProperties(idef);\n      idefAttributes.objectIds = idef.getObjectIds();\n      objects.push({\n        geometry: null,\n        attributes: idefAttributes,\n        objectType: 'InstanceDefinition'\n      });\n    } // Handle materials\n\n\n    var textureTypes = [// rhino.TextureType.Bitmap,\n    rhino.TextureType.Diffuse, rhino.TextureType.Bump, rhino.TextureType.Transparency, rhino.TextureType.Opacity, rhino.TextureType.Emap];\n    var pbrTextureTypes = [rhino.TextureType.PBR_BaseColor, rhino.TextureType.PBR_Subsurface, rhino.TextureType.PBR_SubsurfaceScattering, rhino.TextureType.PBR_SubsurfaceScatteringRadius, rhino.TextureType.PBR_Metallic, rhino.TextureType.PBR_Specular, rhino.TextureType.PBR_SpecularTint, rhino.TextureType.PBR_Roughness, rhino.TextureType.PBR_Anisotropic, rhino.TextureType.PBR_Anisotropic_Rotation, rhino.TextureType.PBR_Sheen, rhino.TextureType.PBR_SheenTint, rhino.TextureType.PBR_Clearcoat, rhino.TextureType.PBR_ClearcoatBump, rhino.TextureType.PBR_ClearcoatRoughness, rhino.TextureType.PBR_OpacityIor, rhino.TextureType.PBR_OpacityRoughness, rhino.TextureType.PBR_Emission, rhino.TextureType.PBR_AmbientOcclusion, rhino.TextureType.PBR_Displacement];\n\n    for (let i = 0; i < doc.materials().count(); i++) {\n      var _material = doc.materials().get(i);\n\n      var _pbrMaterial = _material.physicallyBased();\n\n      var material = extractProperties(_material);\n      var textures = [];\n\n      for (let j = 0; j < textureTypes.length; j++) {\n        var _texture = _material.getTexture(textureTypes[j]);\n\n        if (_texture) {\n          var textureType = textureTypes[j].constructor.name;\n          textureType = textureType.substring(12, textureType.length);\n          var texture = {\n            type: textureType\n          };\n          var image = doc.getEmbeddedFileAsBase64(_texture.fileName);\n\n          if (image) {\n            texture.image = 'data:image/png;base64,' + image;\n          } else {\n            console.warn(`THREE.3DMLoader: Image for ${textureType} texture not embedded in file.`);\n            texture.image = null;\n          }\n\n          textures.push(texture);\n\n          _texture.delete();\n        }\n      }\n\n      material.textures = textures;\n\n      if (_pbrMaterial.supported) {\n        console.log('pbr true');\n\n        for (let j = 0; j < pbrTextureTypes.length; j++) {\n          var _texture = _material.getTexture(textureTypes[j]);\n\n          if (_texture) {\n            var image = doc.getEmbeddedFileAsBase64(_texture.fileName);\n            var textureType = textureTypes[j].constructor.name;\n            textureType = textureType.substring(12, textureType.length);\n            var texture = {\n              type: textureType,\n              image: 'data:image/png;base64,' + image\n            };\n            textures.push(texture);\n\n            _texture.delete();\n          }\n        }\n\n        var pbMaterialProperties = extractProperties(_material.physicallyBased());\n        material = Object.assign(pbMaterialProperties, material);\n      }\n\n      materials.push(material);\n\n      _material.delete();\n\n      _pbrMaterial.delete();\n    } // Handle layers\n\n\n    for (let i = 0; i < doc.layers().count(); i++) {\n      var _layer = doc.layers().get(i);\n\n      var layer = extractProperties(_layer);\n      layers.push(layer);\n\n      _layer.delete();\n    } // Handle views\n\n\n    for (let i = 0; i < doc.views().count(); i++) {\n      var _view = doc.views().get(i);\n\n      var view = extractProperties(_view);\n      views.push(view);\n\n      _view.delete();\n    } // Handle named views\n\n\n    for (let i = 0; i < doc.namedViews().count(); i++) {\n      var _namedView = doc.namedViews().get(i);\n\n      var namedView = extractProperties(_namedView);\n      namedViews.push(namedView);\n\n      _namedView.delete();\n    } // Handle groups\n\n\n    for (let i = 0; i < doc.groups().count(); i++) {\n      var _group = doc.groups().get(i);\n\n      var group = extractProperties(_group);\n      groups.push(group);\n\n      _group.delete();\n    } // Handle settings\n\n\n    var settings = extractProperties(doc.settings()); //TODO: Handle other document stuff like dimstyles, instance definitions, bitmaps etc.\n    // Handle dimstyles\n    // console.log( `Dimstyle Count: ${doc.dimstyles().count()}` );\n    // Handle bitmaps\n    // console.log( `Bitmap Count: ${doc.bitmaps().count()}` );\n    // Handle strings -- this seems to be broken at the moment in rhino3dm\n    // console.log( `Document Strings Count: ${doc.strings().count()}` );\n\n    /*\n    for( var i = 0; i < doc.strings().count(); i++ ){\n    var _string= doc.strings().get( i );\n    console.log(_string);\n    var string = extractProperties( _group );\n    strings.push( string );\n    _string.delete();\n    }\n    */\n\n    doc.delete();\n    return {\n      objects,\n      materials,\n      layers,\n      views,\n      namedViews,\n      groups,\n      settings\n    };\n  }\n\n  function extractObjectData(object, doc) {\n    var _geometry = object.geometry();\n\n    var _attributes = object.attributes();\n\n    var objectType = _geometry.objectType;\n    var geometry = null;\n    var attributes = null; // skip instance definition objects\n    //if( _attributes.isInstanceDefinitionObject ) { continue; }\n    // TODO: handle other geometry types\n\n    switch (objectType) {\n      case rhino.ObjectType.Curve:\n        var pts = curveToPoints(_geometry, 100);\n        var position = {};\n        var attributes = {};\n        var data = {};\n        position.itemSize = 3;\n        position.type = 'Float32Array';\n        position.array = [];\n\n        for (let j = 0; j < pts.length; j++) {\n          position.array.push(pts[j][0]);\n          position.array.push(pts[j][1]);\n          position.array.push(pts[j][2]);\n        }\n\n        attributes.position = position;\n        data.attributes = attributes;\n        geometry = {\n          data\n        };\n        break;\n\n      case rhino.ObjectType.Point:\n        var pt = _geometry.location;\n        var position = {};\n        var color = {};\n        var attributes = {};\n        var data = {};\n        position.itemSize = 3;\n        position.type = 'Float32Array';\n        position.array = [pt[0], pt[1], pt[2]];\n\n        var _color = _attributes.drawColor(doc);\n\n        color.itemSize = 3;\n        color.type = 'Float32Array';\n        color.array = [_color.r / 255.0, _color.g / 255.0, _color.b / 255.0];\n        attributes.position = position;\n        attributes.color = color;\n        data.attributes = attributes;\n        geometry = {\n          data\n        };\n        break;\n\n      case rhino.ObjectType.PointSet:\n      case rhino.ObjectType.Mesh:\n        geometry = _geometry.toThreejsJSON();\n        break;\n\n      case rhino.ObjectType.Brep:\n        var faces = _geometry.faces();\n\n        var mesh = new rhino.Mesh();\n\n        for (let faceIndex = 0; faceIndex < faces.count; faceIndex++) {\n          var face = faces.get(faceIndex);\n\n          var _mesh = face.getMesh(rhino.MeshType.Any);\n\n          if (_mesh) {\n            mesh.append(_mesh);\n\n            _mesh.delete();\n          }\n\n          face.delete();\n        }\n\n        if (mesh.faces().count > 0) {\n          mesh.compact();\n          geometry = mesh.toThreejsJSON();\n          faces.delete();\n        }\n\n        mesh.delete();\n        break;\n\n      case rhino.ObjectType.Extrusion:\n        var mesh = _geometry.getMesh(rhino.MeshType.Any);\n\n        if (mesh) {\n          geometry = mesh.toThreejsJSON();\n          mesh.delete();\n        }\n\n        break;\n\n      case rhino.ObjectType.TextDot:\n        geometry = extractProperties(_geometry);\n        break;\n\n      case rhino.ObjectType.Light:\n        geometry = extractProperties(_geometry);\n        break;\n\n      case rhino.ObjectType.InstanceReference:\n        geometry = extractProperties(_geometry);\n        geometry.xform = extractProperties(_geometry.xform);\n        geometry.xform.array = _geometry.xform.toFloatArray(true);\n        break;\n\n      case rhino.ObjectType.SubD:\n        // TODO: precalculate resulting vertices and faces and warn on excessive results\n        _geometry.subdivide(3);\n\n        var mesh = rhino.Mesh.createFromSubDControlNet(_geometry);\n\n        if (mesh) {\n          geometry = mesh.toThreejsJSON();\n          mesh.delete();\n        }\n\n        break;\n\n      /*\n      case rhino.ObjectType.Annotation:\n      case rhino.ObjectType.Hatch:\n      case rhino.ObjectType.ClipPlane:\n      */\n\n      default:\n        console.warn(`THREE.3DMLoader: TODO: Implement ${objectType.constructor.name}`);\n        break;\n    }\n\n    if (geometry) {\n      var attributes = extractProperties(_attributes);\n      attributes.geometry = extractProperties(_geometry);\n\n      if (_attributes.groupCount > 0) {\n        attributes.groupIds = _attributes.getGroupList();\n      }\n\n      if (_attributes.userStringCount > 0) {\n        attributes.userStrings = _attributes.getUserStrings();\n      }\n\n      if (_geometry.userStringCount > 0) {\n        attributes.geometry.userStrings = _geometry.getUserStrings();\n      }\n\n      attributes.drawColor = _attributes.drawColor(doc);\n      objectType = objectType.constructor.name;\n      objectType = objectType.substring(11, objectType.length);\n      return {\n        geometry,\n        attributes,\n        objectType\n      };\n    } else {\n      console.warn(`THREE.3DMLoader: ${objectType.constructor.name} has no associated mesh geometry.`);\n    }\n  }\n\n  function extractProperties(object) {\n    var result = {};\n\n    for (let property in object) {\n      var value = object[property];\n\n      if (typeof value !== 'function') {\n        if (typeof value === 'object' && value !== null && value.hasOwnProperty('constructor')) {\n          result[property] = {\n            name: value.constructor.name,\n            value: value.value\n          };\n        } else {\n          result[property] = value;\n        }\n      }\n    }\n\n    return result;\n  }\n\n  function curveToPoints(curve, pointLimit) {\n    var pointCount = pointLimit;\n    var rc = [];\n    var ts = [];\n\n    if (curve instanceof rhino.LineCurve) {\n      return [curve.pointAtStart, curve.pointAtEnd];\n    }\n\n    if (curve instanceof rhino.PolylineCurve) {\n      pointCount = curve.pointCount;\n\n      for (let i = 0; i < pointCount; i++) {\n        rc.push(curve.point(i));\n      }\n\n      return rc;\n    }\n\n    if (curve instanceof rhino.PolyCurve) {\n      var segmentCount = curve.segmentCount;\n\n      for (let i = 0; i < segmentCount; i++) {\n        var segment = curve.segmentCurve(i);\n        var segmentArray = curveToPoints(segment, pointCount);\n        rc = rc.concat(segmentArray);\n        segment.delete();\n      }\n\n      return rc;\n    }\n\n    if (curve instanceof rhino.ArcCurve) {\n      pointCount = Math.floor(curve.angleDegrees / 5);\n      pointCount = pointCount < 2 ? 2 : pointCount; // alternative to this hardcoded version: https://stackoverflow.com/a/18499923/2179399\n    }\n\n    if (curve instanceof rhino.NurbsCurve && curve.degree === 1) {\n      const pLine = curve.tryGetPolyline();\n\n      for (let i = 0; i < pLine.count; i++) {\n        rc.push(pLine.get(i));\n      }\n\n      pLine.delete();\n      return rc;\n    }\n\n    var domain = curve.domain;\n    var divisions = pointCount - 1.0;\n\n    for (let j = 0; j < pointCount; j++) {\n      var t = domain[0] + j / divisions * (domain[1] - domain[0]);\n\n      if (t === domain[0] || t === domain[1]) {\n        ts.push(t);\n        continue;\n      }\n\n      var tan = curve.tangentAt(t);\n      var prevTan = curve.tangentAt(ts.slice(-1)[0]); // Duplicated from THREE.Vector3\n      // How to pass imports to worker?\n\n      var tS = tan[0] * tan[0] + tan[1] * tan[1] + tan[2] * tan[2];\n      var ptS = prevTan[0] * prevTan[0] + prevTan[1] * prevTan[1] + prevTan[2] * prevTan[2];\n      var denominator = Math.sqrt(tS * ptS);\n      var angle;\n\n      if (denominator === 0) {\n        angle = Math.PI / 2;\n      } else {\n        var theta = (tan.x * prevTan.x + tan.y * prevTan.y + tan.z * prevTan.z) / denominator;\n        angle = Math.acos(Math.max(-1, Math.min(1, theta)));\n      }\n\n      if (angle < 0.1) continue;\n      ts.push(t);\n    }\n\n    rc = ts.map(t => curve.pointAt(t));\n    return rc;\n  }\n};\n\nexport { Rhino3dmLoader };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}