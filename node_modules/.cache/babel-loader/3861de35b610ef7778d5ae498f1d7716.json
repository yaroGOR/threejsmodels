{"ast":null,"code":"import { Color, Vector2 } from 'three';\nimport { StandardNode } from './StandardNode.js';\nimport { PropertyNode } from '../../inputs/PropertyNode.js';\nimport { OperatorNode } from '../../math/OperatorNode.js';\nimport { SwitchNode } from '../../utils/SwitchNode.js';\nimport { NormalMapNode } from '../../misc/NormalMapNode.js';\n\nfunction MeshStandardNode() {\n  StandardNode.call(this);\n  this.properties = {\n    color: new Color(0xffffff),\n    roughness: 0.5,\n    metalness: 0.5,\n    normalScale: new Vector2(1, 1)\n  };\n  this.inputs = {\n    color: new PropertyNode(this.properties, 'color', 'c'),\n    roughness: new PropertyNode(this.properties, 'roughness', 'f'),\n    metalness: new PropertyNode(this.properties, 'metalness', 'f'),\n    normalScale: new PropertyNode(this.properties, 'normalScale', 'v2')\n  };\n}\n\nMeshStandardNode.prototype = Object.create(StandardNode.prototype);\nMeshStandardNode.prototype.constructor = MeshStandardNode;\nMeshStandardNode.prototype.nodeType = 'MeshStandard';\n\nMeshStandardNode.prototype.build = function (builder) {\n  var props = this.properties,\n      inputs = this.inputs;\n\n  if (builder.isShader('fragment')) {\n    // slots\n    // * color\n    // * map\n    var color = builder.findNode(props.color, inputs.color),\n        map = builder.resolve(props.map);\n    this.color = map ? new OperatorNode(color, map, OperatorNode.MUL) : color; // slots\n    // * roughness\n    // * roughnessMap\n\n    var roughness = builder.findNode(props.roughness, inputs.roughness),\n        roughnessMap = builder.resolve(props.roughnessMap);\n    this.roughness = roughnessMap ? new OperatorNode(roughness, new SwitchNode(roughnessMap, 'g'), OperatorNode.MUL) : roughness; // slots\n    // * metalness\n    // * metalnessMap\n\n    var metalness = builder.findNode(props.metalness, inputs.metalness),\n        metalnessMap = builder.resolve(props.metalnessMap);\n    this.metalness = metalnessMap ? new OperatorNode(metalness, new SwitchNode(metalnessMap, 'b'), OperatorNode.MUL) : metalness; // slots\n    // * normalMap\n    // * normalScale\n\n    if (props.normalMap) {\n      this.normal = new NormalMapNode(builder.resolve(props.normalMap));\n      this.normal.scale = builder.findNode(props.normalScale, inputs.normalScale);\n    } else {\n      this.normal = undefined;\n    } // slots\n    // * envMap\n\n\n    this.environment = builder.resolve(props.envMap);\n  } // build code\n\n\n  return StandardNode.prototype.build.call(this, builder);\n};\n\nMeshStandardNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    console.warn('.toJSON not implemented in', this);\n  }\n\n  return data;\n};\n\nexport { MeshStandardNode };","map":{"version":3,"names":["Color","Vector2","StandardNode","PropertyNode","OperatorNode","SwitchNode","NormalMapNode","MeshStandardNode","call","properties","color","roughness","metalness","normalScale","inputs","prototype","Object","create","constructor","nodeType","build","builder","props","isShader","findNode","map","resolve","MUL","roughnessMap","metalnessMap","normalMap","normal","scale","undefined","environment","envMap","toJSON","meta","data","getJSONNode","createJSONNode","console","warn"],"sources":["/Users/98yaroslavgorban/Desktop/gltfjsx-forked/node_modules/three-stdlib/nodes/materials/nodes/MeshStandardNode.js"],"sourcesContent":["import { Color, Vector2 } from 'three';\nimport { StandardNode } from './StandardNode.js';\nimport { PropertyNode } from '../../inputs/PropertyNode.js';\nimport { OperatorNode } from '../../math/OperatorNode.js';\nimport { SwitchNode } from '../../utils/SwitchNode.js';\nimport { NormalMapNode } from '../../misc/NormalMapNode.js';\n\nfunction MeshStandardNode() {\n  StandardNode.call(this);\n  this.properties = {\n    color: new Color(0xffffff),\n    roughness: 0.5,\n    metalness: 0.5,\n    normalScale: new Vector2(1, 1)\n  };\n  this.inputs = {\n    color: new PropertyNode(this.properties, 'color', 'c'),\n    roughness: new PropertyNode(this.properties, 'roughness', 'f'),\n    metalness: new PropertyNode(this.properties, 'metalness', 'f'),\n    normalScale: new PropertyNode(this.properties, 'normalScale', 'v2')\n  };\n}\n\nMeshStandardNode.prototype = Object.create(StandardNode.prototype);\nMeshStandardNode.prototype.constructor = MeshStandardNode;\nMeshStandardNode.prototype.nodeType = 'MeshStandard';\n\nMeshStandardNode.prototype.build = function (builder) {\n  var props = this.properties,\n      inputs = this.inputs;\n\n  if (builder.isShader('fragment')) {\n    // slots\n    // * color\n    // * map\n    var color = builder.findNode(props.color, inputs.color),\n        map = builder.resolve(props.map);\n    this.color = map ? new OperatorNode(color, map, OperatorNode.MUL) : color; // slots\n    // * roughness\n    // * roughnessMap\n\n    var roughness = builder.findNode(props.roughness, inputs.roughness),\n        roughnessMap = builder.resolve(props.roughnessMap);\n    this.roughness = roughnessMap ? new OperatorNode(roughness, new SwitchNode(roughnessMap, 'g'), OperatorNode.MUL) : roughness; // slots\n    // * metalness\n    // * metalnessMap\n\n    var metalness = builder.findNode(props.metalness, inputs.metalness),\n        metalnessMap = builder.resolve(props.metalnessMap);\n    this.metalness = metalnessMap ? new OperatorNode(metalness, new SwitchNode(metalnessMap, 'b'), OperatorNode.MUL) : metalness; // slots\n    // * normalMap\n    // * normalScale\n\n    if (props.normalMap) {\n      this.normal = new NormalMapNode(builder.resolve(props.normalMap));\n      this.normal.scale = builder.findNode(props.normalScale, inputs.normalScale);\n    } else {\n      this.normal = undefined;\n    } // slots\n    // * envMap\n\n\n    this.environment = builder.resolve(props.envMap);\n  } // build code\n\n\n  return StandardNode.prototype.build.call(this, builder);\n};\n\nMeshStandardNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    console.warn('.toJSON not implemented in', this);\n  }\n\n  return data;\n};\n\nexport { MeshStandardNode };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}