{"ast":null,"code":"import { ShaderMaterial, NormalBlending, FrontSide, NoColors, LessEqualDepth } from 'three';\nimport { NodeBuilder } from '../core/NodeBuilder.js';\nimport { ColorNode } from '../inputs/ColorNode.js';\nimport { PositionNode } from '../accessors/PositionNode.js';\nimport { RawNode } from './nodes/RawNode.js';\n\nfunction NodeMaterial(vertex, fragment) {\n  ShaderMaterial.call(this);\n  this.vertex = vertex || new RawNode(new PositionNode(PositionNode.PROJECTION));\n  this.fragment = fragment || new RawNode(new ColorNode(0xff0000));\n  this.updaters = [];\n}\n\nNodeMaterial.prototype = Object.create(ShaderMaterial.prototype);\nNodeMaterial.prototype.constructor = NodeMaterial;\nNodeMaterial.prototype.type = 'NodeMaterial';\nNodeMaterial.prototype.isNodeMaterial = true;\nObject.defineProperties(NodeMaterial.prototype, {\n  properties: {\n    get: function get() {\n      return this.fragment.properties;\n    }\n  },\n  needsUpdate: {\n    set: function set(value) {\n      if (value === true) this.version++;\n      this.needsCompile = value;\n    },\n    get: function get() {\n      return this.needsCompile;\n    }\n  }\n});\n\nNodeMaterial.prototype.onBeforeCompile = function (shader, renderer) {\n  this.build({\n    renderer: renderer\n  });\n  shader.defines = this.defines;\n  shader.uniforms = this.uniforms;\n  shader.vertexShader = this.vertexShader;\n  shader.fragmentShader = this.fragmentShader;\n  shader.extensionDerivatives = this.extensions.derivatives === true;\n  shader.extensionFragDepth = this.extensions.fragDepth === true;\n  shader.extensionDrawBuffers = this.extensions.drawBuffers === true;\n  shader.extensionShaderTextureLOD = this.extensions.shaderTextureLOD === true;\n};\n\nNodeMaterial.prototype.customProgramCacheKey = function () {\n  var hash = this.getHash();\n  return hash;\n};\n\nNodeMaterial.prototype.getHash = function () {\n  var hash = '{';\n  hash += '\"vertex\":' + this.vertex.getHash() + ',';\n  hash += '\"fragment\":' + this.fragment.getHash();\n  hash += '}';\n  return hash;\n};\n\nNodeMaterial.prototype.updateFrame = function (frame) {\n  for (var i = 0; i < this.updaters.length; ++i) {\n    frame.updateNode(this.updaters[i]);\n  }\n};\n\nNodeMaterial.prototype.build = function (params) {\n  params = params || {};\n  var builder = params.builder || new NodeBuilder();\n  builder.setMaterial(this, params.renderer);\n  builder.build(this.vertex, this.fragment);\n  this.vertexShader = builder.getCode('vertex');\n  this.fragmentShader = builder.getCode('fragment');\n  this.defines = builder.defines;\n  this.uniforms = builder.uniforms;\n  this.extensions = builder.extensions;\n  this.updaters = builder.updaters;\n  this.fog = builder.requires.fog;\n  this.lights = builder.requires.lights;\n  this.transparent = builder.requires.transparent || this.blending > NormalBlending;\n  return this;\n};\n\nNodeMaterial.prototype.copy = function (source) {\n  var uuid = this.uuid;\n\n  for (var name in source) {\n    this[name] = source[name];\n  }\n\n  this.uuid = uuid;\n\n  if (source.userData !== undefined) {\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n  }\n\n  return this;\n};\n\nNodeMaterial.prototype.toJSON = function (meta) {\n  var isRootObject = meta === undefined || typeof meta === 'string';\n\n  if (isRootObject) {\n    meta = {\n      nodes: {}\n    };\n  }\n\n  if (meta && !meta.materials) meta.materials = {};\n\n  if (!meta.materials[this.uuid]) {\n    var data = {};\n    data.uuid = this.uuid;\n    data.type = this.type;\n    meta.materials[data.uuid] = data;\n    if (this.name !== '') data.name = this.name;\n    if (this.size !== undefined) data.size = this.size;\n    if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n    if (this.blending !== NormalBlending) data.blending = this.blending;\n    if (this.flatShading === true) data.flatShading = this.flatShading;\n    if (this.side !== FrontSide) data.side = this.side;\n    if (this.vertexColors !== NoColors) data.vertexColors = this.vertexColors;\n    if (this.depthFunc !== LessEqualDepth) data.depthFunc = this.depthFunc;\n    if (this.depthTest === false) data.depthTest = this.depthTest;\n    if (this.depthWrite === false) data.depthWrite = this.depthWrite;\n    if (this.linewidth !== 1) data.linewidth = this.linewidth;\n    if (this.dashSize !== undefined) data.dashSize = this.dashSize;\n    if (this.gapSize !== undefined) data.gapSize = this.gapSize;\n    if (this.scale !== undefined) data.scale = this.scale;\n    if (this.dithering === true) data.dithering = true;\n    if (this.wireframe === true) data.wireframe = this.wireframe;\n    if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n    if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n    if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n    if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n    if (this.morphTargets === true) data.morphTargets = true;\n    if (this.skinning === true) data.skinning = true;\n    if (this.visible === false) data.visible = false;\n    if (JSON.stringify(this.userData) !== '{}') data.userData = this.userData;\n    data.fog = this.fog;\n    data.lights = this.lights;\n    data.vertex = this.vertex.toJSON(meta).uuid;\n    data.fragment = this.fragment.toJSON(meta).uuid;\n  }\n\n  meta.material = this.uuid;\n  return meta;\n};\n\nexport { NodeMaterial };","map":{"version":3,"names":["ShaderMaterial","NormalBlending","FrontSide","NoColors","LessEqualDepth","NodeBuilder","ColorNode","PositionNode","RawNode","NodeMaterial","vertex","fragment","call","PROJECTION","updaters","prototype","Object","create","constructor","type","isNodeMaterial","defineProperties","properties","get","needsUpdate","set","value","version","needsCompile","onBeforeCompile","shader","renderer","build","defines","uniforms","vertexShader","fragmentShader","extensionDerivatives","extensions","derivatives","extensionFragDepth","fragDepth","extensionDrawBuffers","drawBuffers","extensionShaderTextureLOD","shaderTextureLOD","customProgramCacheKey","hash","getHash","updateFrame","frame","i","length","updateNode","params","builder","setMaterial","getCode","fog","requires","lights","transparent","blending","copy","source","uuid","name","userData","undefined","JSON","parse","stringify","toJSON","meta","isRootObject","nodes","materials","data","size","sizeAttenuation","flatShading","side","vertexColors","depthFunc","depthTest","depthWrite","linewidth","dashSize","gapSize","scale","dithering","wireframe","wireframeLinewidth","wireframeLinecap","wireframeLinejoin","alphaTest","premultipliedAlpha","morphTargets","skinning","visible","material"],"sources":["/Users/98yaroslavgorban/Desktop/gltfjsx-forked/node_modules/three-stdlib/nodes/materials/NodeMaterial.js"],"sourcesContent":["import { ShaderMaterial, NormalBlending, FrontSide, NoColors, LessEqualDepth } from 'three';\nimport { NodeBuilder } from '../core/NodeBuilder.js';\nimport { ColorNode } from '../inputs/ColorNode.js';\nimport { PositionNode } from '../accessors/PositionNode.js';\nimport { RawNode } from './nodes/RawNode.js';\n\nfunction NodeMaterial(vertex, fragment) {\n  ShaderMaterial.call(this);\n  this.vertex = vertex || new RawNode(new PositionNode(PositionNode.PROJECTION));\n  this.fragment = fragment || new RawNode(new ColorNode(0xff0000));\n  this.updaters = [];\n}\n\nNodeMaterial.prototype = Object.create(ShaderMaterial.prototype);\nNodeMaterial.prototype.constructor = NodeMaterial;\nNodeMaterial.prototype.type = 'NodeMaterial';\nNodeMaterial.prototype.isNodeMaterial = true;\nObject.defineProperties(NodeMaterial.prototype, {\n  properties: {\n    get: function () {\n      return this.fragment.properties;\n    }\n  },\n  needsUpdate: {\n    set: function (value) {\n      if (value === true) this.version++;\n      this.needsCompile = value;\n    },\n    get: function () {\n      return this.needsCompile;\n    }\n  }\n});\n\nNodeMaterial.prototype.onBeforeCompile = function (shader, renderer) {\n  this.build({\n    renderer: renderer\n  });\n  shader.defines = this.defines;\n  shader.uniforms = this.uniforms;\n  shader.vertexShader = this.vertexShader;\n  shader.fragmentShader = this.fragmentShader;\n  shader.extensionDerivatives = this.extensions.derivatives === true;\n  shader.extensionFragDepth = this.extensions.fragDepth === true;\n  shader.extensionDrawBuffers = this.extensions.drawBuffers === true;\n  shader.extensionShaderTextureLOD = this.extensions.shaderTextureLOD === true;\n};\n\nNodeMaterial.prototype.customProgramCacheKey = function () {\n  var hash = this.getHash();\n  return hash;\n};\n\nNodeMaterial.prototype.getHash = function () {\n  var hash = '{';\n  hash += '\"vertex\":' + this.vertex.getHash() + ',';\n  hash += '\"fragment\":' + this.fragment.getHash();\n  hash += '}';\n  return hash;\n};\n\nNodeMaterial.prototype.updateFrame = function (frame) {\n  for (let i = 0; i < this.updaters.length; ++i) {\n    frame.updateNode(this.updaters[i]);\n  }\n};\n\nNodeMaterial.prototype.build = function (params) {\n  params = params || {};\n  var builder = params.builder || new NodeBuilder();\n  builder.setMaterial(this, params.renderer);\n  builder.build(this.vertex, this.fragment);\n  this.vertexShader = builder.getCode('vertex');\n  this.fragmentShader = builder.getCode('fragment');\n  this.defines = builder.defines;\n  this.uniforms = builder.uniforms;\n  this.extensions = builder.extensions;\n  this.updaters = builder.updaters;\n  this.fog = builder.requires.fog;\n  this.lights = builder.requires.lights;\n  this.transparent = builder.requires.transparent || this.blending > NormalBlending;\n  return this;\n};\n\nNodeMaterial.prototype.copy = function (source) {\n  var uuid = this.uuid;\n\n  for (let name in source) {\n    this[name] = source[name];\n  }\n\n  this.uuid = uuid;\n\n  if (source.userData !== undefined) {\n    this.userData = JSON.parse(JSON.stringify(source.userData));\n  }\n\n  return this;\n};\n\nNodeMaterial.prototype.toJSON = function (meta) {\n  var isRootObject = meta === undefined || typeof meta === 'string';\n\n  if (isRootObject) {\n    meta = {\n      nodes: {}\n    };\n  }\n\n  if (meta && !meta.materials) meta.materials = {};\n\n  if (!meta.materials[this.uuid]) {\n    var data = {};\n    data.uuid = this.uuid;\n    data.type = this.type;\n    meta.materials[data.uuid] = data;\n    if (this.name !== '') data.name = this.name;\n    if (this.size !== undefined) data.size = this.size;\n    if (this.sizeAttenuation !== undefined) data.sizeAttenuation = this.sizeAttenuation;\n    if (this.blending !== NormalBlending) data.blending = this.blending;\n    if (this.flatShading === true) data.flatShading = this.flatShading;\n    if (this.side !== FrontSide) data.side = this.side;\n    if (this.vertexColors !== NoColors) data.vertexColors = this.vertexColors;\n    if (this.depthFunc !== LessEqualDepth) data.depthFunc = this.depthFunc;\n    if (this.depthTest === false) data.depthTest = this.depthTest;\n    if (this.depthWrite === false) data.depthWrite = this.depthWrite;\n    if (this.linewidth !== 1) data.linewidth = this.linewidth;\n    if (this.dashSize !== undefined) data.dashSize = this.dashSize;\n    if (this.gapSize !== undefined) data.gapSize = this.gapSize;\n    if (this.scale !== undefined) data.scale = this.scale;\n    if (this.dithering === true) data.dithering = true;\n    if (this.wireframe === true) data.wireframe = this.wireframe;\n    if (this.wireframeLinewidth > 1) data.wireframeLinewidth = this.wireframeLinewidth;\n    if (this.wireframeLinecap !== 'round') data.wireframeLinecap = this.wireframeLinecap;\n    if (this.wireframeLinejoin !== 'round') data.wireframeLinejoin = this.wireframeLinejoin;\n    if (this.alphaTest > 0) data.alphaTest = this.alphaTest;\n    if (this.premultipliedAlpha === true) data.premultipliedAlpha = this.premultipliedAlpha;\n    if (this.morphTargets === true) data.morphTargets = true;\n    if (this.skinning === true) data.skinning = true;\n    if (this.visible === false) data.visible = false;\n    if (JSON.stringify(this.userData) !== '{}') data.userData = this.userData;\n    data.fog = this.fog;\n    data.lights = this.lights;\n    data.vertex = this.vertex.toJSON(meta).uuid;\n    data.fragment = this.fragment.toJSON(meta).uuid;\n  }\n\n  meta.material = this.uuid;\n  return meta;\n};\n\nexport { NodeMaterial };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}