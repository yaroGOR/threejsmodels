{"ast":null,"code":"import { TempNode } from '../core/TempNode.js';\nimport { NodeUtils } from '../core/NodeUtils.js';\nvar inputs = NodeUtils.elements;\n\nfunction JoinNode(x, y, z, w) {\n  TempNode.call(this, 'f');\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  this.w = w;\n}\n\nJoinNode.prototype = Object.create(TempNode.prototype);\nJoinNode.prototype.constructor = JoinNode;\nJoinNode.prototype.nodeType = 'Join';\n\nJoinNode.prototype.getNumElements = function () {\n  var i = inputs.length;\n\n  while (i--) {\n    if (this[inputs[i]] !== undefined) {\n      ++i;\n      break;\n    }\n  }\n\n  return Math.max(i, 2);\n};\n\nJoinNode.prototype.getType = function (builder) {\n  return builder.getTypeFromLength(this.getNumElements());\n};\n\nJoinNode.prototype.generate = function (builder, output) {\n  var type = this.getType(builder),\n      length = this.getNumElements(),\n      outputs = [];\n\n  for (var i = 0; i < length; i++) {\n    var elm = this[inputs[i]];\n    outputs.push(elm ? elm.build(builder, 'f') : '0.0');\n  }\n\n  var code = (length > 1 ? builder.getConstructorFromLength(length) : '') + '( ' + outputs.join(', ') + ' )';\n  return builder.format(code, type, output);\n};\n\nJoinNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n\n  for (var prop in source.inputs) {\n    this[prop] = source.inputs[prop];\n  }\n\n  return this;\n};\n\nJoinNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.inputs = {};\n    var length = this.getNumElements();\n\n    for (var i = 0; i < length; i++) {\n      var elm = this[inputs[i]];\n\n      if (elm) {\n        data.inputs[inputs[i]] = elm.toJSON(meta).uuid;\n      }\n    }\n  }\n\n  return data;\n};\n\nexport { JoinNode };","map":{"version":3,"names":["TempNode","NodeUtils","inputs","elements","JoinNode","x","y","z","w","call","prototype","Object","create","constructor","nodeType","getNumElements","i","length","undefined","Math","max","getType","builder","getTypeFromLength","generate","output","type","outputs","elm","push","build","code","getConstructorFromLength","join","format","copy","source","prop","toJSON","meta","data","getJSONNode","createJSONNode","uuid"],"sources":["/Users/98yaroslavgorban/Desktop/gltfjsx-forked/node_modules/three-stdlib/nodes/utils/JoinNode.js"],"sourcesContent":["import { TempNode } from '../core/TempNode.js';\nimport { NodeUtils } from '../core/NodeUtils.js';\n\nvar inputs = NodeUtils.elements;\n\nfunction JoinNode(x, y, z, w) {\n  TempNode.call(this, 'f');\n  this.x = x;\n  this.y = y;\n  this.z = z;\n  this.w = w;\n}\n\nJoinNode.prototype = Object.create(TempNode.prototype);\nJoinNode.prototype.constructor = JoinNode;\nJoinNode.prototype.nodeType = 'Join';\n\nJoinNode.prototype.getNumElements = function () {\n  var i = inputs.length;\n\n  while (i--) {\n    if (this[inputs[i]] !== undefined) {\n      ++i;\n      break;\n    }\n  }\n\n  return Math.max(i, 2);\n};\n\nJoinNode.prototype.getType = function (builder) {\n  return builder.getTypeFromLength(this.getNumElements());\n};\n\nJoinNode.prototype.generate = function (builder, output) {\n  var type = this.getType(builder),\n      length = this.getNumElements(),\n      outputs = [];\n\n  for (let i = 0; i < length; i++) {\n    var elm = this[inputs[i]];\n    outputs.push(elm ? elm.build(builder, 'f') : '0.0');\n  }\n\n  var code = (length > 1 ? builder.getConstructorFromLength(length) : '') + '( ' + outputs.join(', ') + ' )';\n  return builder.format(code, type, output);\n};\n\nJoinNode.prototype.copy = function (source) {\n  TempNode.prototype.copy.call(this, source);\n\n  for (let prop in source.inputs) {\n    this[prop] = source.inputs[prop];\n  }\n\n  return this;\n};\n\nJoinNode.prototype.toJSON = function (meta) {\n  var data = this.getJSONNode(meta);\n\n  if (!data) {\n    data = this.createJSONNode(meta);\n    data.inputs = {};\n    var length = this.getNumElements();\n\n    for (let i = 0; i < length; i++) {\n      var elm = this[inputs[i]];\n\n      if (elm) {\n        data.inputs[inputs[i]] = elm.toJSON(meta).uuid;\n      }\n    }\n  }\n\n  return data;\n};\n\nexport { JoinNode };\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}